settings
{
	main
	{
		Description: "Round Records! 5-6 Player: . | 3-4 Player: . | Duo: . | Solo: . Submit Round Records in comments on webpage; https://workshop.codes/SROT1. For more information visit webpage. Ver 1.0.8."
		Mode Name: "Cod Zombies [Spaceland]"
	}

	lobby
	{
		Allow Players Who Are In Queue: Yes
		Match Voice Chat: Enabled
		Max Spectators: 12
		Max Team 2 Players: 0
		Return To Lobby: Never
		Swap Teams After Match: No
	}

	modes
	{
		disabled Skirmish
		{
			Limit Valid Control Points: Second
		}

		Team Deathmatch
		{
			Game Length In Minutes: 15
			Mercy Resurrect Counteracts Kills: Off
			Score To Win: 200
			Self Initiated Respawn: Off

			enabled maps
			{
				King's Row Winter 972777519512063901
			}
		}

		General
		{
			Allow Hero Switching: Off
			Game Mode Start: Immediately
			Hero Limit: Off
			Kill Cam: Off
			Kill Feed: Off
			Respawn As Random Hero: On
			Skins: Off
			Spawn Health Packs: Disabled
		}
	}

	heroes
	{
		Team 1
		{
			Quick Melee: Off
			Ultimate Ability: Off

			Ana
			{
				Damage Dealt: 500%
				Healing Dealt: 500%
				Ultimate Generation - Combat Nano Boost: 0%
				Ultimate Generation - Passive Nano Boost: 0%
				Ultimate Generation Nano Boost: 10%
			}

			Ashe
			{
				Infinite Ultimate Duration: On
				Ultimate Generation - Combat B.O.B.: 0%
				Ultimate Generation - Passive B.O.B.: 0%
				Ultimate Generation B.O.B.: 10%
			}

			Baptiste
			{
				Projectile Gravity: 10%
				Projectile Speed: 500%
				Ultimate Generation - Combat Amplification Matrix: 0%
				Ultimate Generation - Passive Amplification Matrix: 0%
				Ultimate Generation Amplification Matrix: 10%
			}

			Bastion
			{
				Healing Dealt: 10%
				Reconfigure Cooldown Time: 0%
				Ultimate Generation - Combat Configuration: Artillery: 0%
				Ultimate Generation - Passive Configuration: Artillery: 0%
				Ultimate Generation Configuration: Artillery: 10%
			}

			Brigitte
			{
				Ultimate Generation - Combat Rally: 0%
				Ultimate Generation - Passive Rally: 0%
				Ultimate Generation Rally: 10%
			}

			Cassidy
			{
				Magnetic Grenade Cooldown Time: 30%
				Ultimate Generation - Combat Deadeye: 0%
				Ultimate Generation - Passive Deadeye: 0%
				Ultimate Generation Deadeye: 10%
			}

			D.Va
			{
				Boosters Cooldown Time: 0%
				Boosters Knockback Scalar: 0%
				Call Mech Knockback Scalar: 400%
				Defense Matrix Maximum Time: 500%
				Defense Matrix Recharge Rate: 500%
				Micro Missiles Cooldown Time: 0%
				Projectile Speed: 500%
				Self Destruct Knockback Scalar: 200%
				Spawn Without Mech: On
				Ultimate Generation - Combat Self-Destruct: 0%
				Ultimate Generation - Passive Self-Destruct: 0%
				Ultimate Generation Self-Destruct: 10%
			}

			Doomfist
			{
				Damage Dealt: 500%
				Meteor Strike Knockback Scalar: 300%
				Power Block Cooldown Time: 10%
				Projectile Speed: 500%
				Rocket Punch Cooldown Time: 10%
				Rocket Punch Knockback Scalar: 300%
				Seismic Slam Cooldown Time: 10%
				Ultimate Duration: 300%
				Ultimate Generation - Combat Meteor Strike: 0%
				Ultimate Generation - Passive Meteor Strike: 0%
				Ultimate Generation Meteor Strike: 10%
			}

			Echo
			{
				Projectile Speed: 500%
				Ultimate Generation - Combat Duplicate: 0%
				Ultimate Generation - Passive Duplicate: 0%
				Ultimate Generation Duplicate: 10%
			}

			Genji
			{
				Damage Dealt: 500%
				Projectile Speed: 250%
				Ultimate Duration: 300%
				Ultimate Generation - Combat Dragonblade: 0%
				Ultimate Generation - Passive Dragonblade: 0%
				Ultimate Generation Dragonblade: 10%
			}

			Hanzo
			{
				Projectile Gravity: 0%
				Projectile Speed: 70%
				Storm Arrows Quantity: 12
				Ultimate Generation - Combat Dragonstrike: 0%
				Ultimate Generation - Passive Dragonstrike: 0%
				Ultimate Generation Dragonstrike: 10%
			}

			Junkrat
			{
				Frag Launcher Knockback Scalar: 0%
				Projectile Speed: 500%
				Ultimate Generation - Combat RIP-Tire: 0%
				Ultimate Generation - Passive RIP-Tire: 0%
				Ultimate Generation RIP-Tire: 10%
			}

			Kiriko
			{
				Damage Dealt: 500%
			}

			Lifeweaver
			{
				Ammunition Clip Size Scalar: 200%
				Healing Dealt: 500%
				Life Grip and Healing Blossom Range: 200%
				Life Grip Cooldown Time: 50%
				Petal Platform Health: 500%
				Projectile Speed: 500%
				Rejuvenating Dash Healing: 500%
				Tree of Life Health: 300%
				Weapons Enabled: Thorn Volley Only
			}

			Lúcio
			{
				Projectile Speed: 500%
				Ultimate Generation - Combat Sound Barrier: 0%
				Ultimate Generation - Passive Sound Barrier: 0%
				Ultimate Generation Sound Barrier: 10%
			}

			Mei
			{
				Blizzard Freeze Minimum: 0%
				Blizzard Freeze Rate Scalar: 500%
				Freeze Stacking: On
				Ultimate Generation - Combat Blizzard: 0%
				Ultimate Generation - Passive Blizzard: 0%
				Ultimate Generation Blizzard: 10%
				Weapon Freeze Duration Scalar: 500%
				Weapon Freeze Minimum: 0%
				Weapon Freeze Rate Scalar: 500%
			}

			Mercy
			{
				Damage Dealt: 500%
				Projectile Speed: 250%
				Ultimate Generation - Combat Valkyrie: 0%
				Ultimate Generation - Passive Valkyrie: 0%
				Ultimate Generation Valkyrie: 10%
			}

			Moira
			{
				Biotic Energy Maximum: 500%
				Biotic Energy Recharge Rate: 500%
				Biotic Orb Max Damage Scalar: 500%
				Biotic Orb Max Healing Scalar: 500%
				Healing Dealt: 200%
				Healing Received: 10%
				Projectile Speed: 0%
				Ultimate Duration: 300%
				Ultimate Generation - Combat Coalescence: 0%
				Ultimate Generation - Passive Coalescence: 0%
				Ultimate Generation Coalescence: 10%
			}

			Orisa
			{
				Projectile Speed: 300%
				Ultimate Generation - Combat Terra Surge: 0%
				Ultimate Generation - Passive Terra Surge: 0%
				Ultimate Generation Terra Surge: 10%
			}

			Pharah
			{
				Damage Dealt: 500%
				Hover Jets Recharge Rate: 200%
				Hover Jets Vertical Speed Scalar: 55%
				Projectile Speed: 500%
				Rocket Launcher Knockback Scalar: 0%
				Ultimate Generation - Combat Barrage: 0%
				Ultimate Generation - Passive Barrage: 0%
				Ultimate Generation Barrage: 10%
			}

			Ramattra
			{
				Ultimate Duration: 500%
			}

			Reaper
			{
				Ultimate Generation - Combat Death Blossom: 0%
				Ultimate Generation - Passive Death Blossom: 0%
				Ultimate Generation Death Blossom: 10%
				Wraith Form Cooldown Time: 20%
			}

			Reinhardt
			{
				Barrier Field Cooldown Time: 0%
				Barrier Field Recharge Rate: 500%
				Charge Cooldown Time: 50%
				Charge Knockback Scalar: 300%
				Fire Strike Cooldown Time: 300%
				Rocket Hammer Knockback Scalar: 0%
				Ultimate Generation - Combat Earthshatter: 0%
				Ultimate Generation - Passive Earthshatter: 0%
				Ultimate Generation Earthshatter: 10%
			}

			Roadhog
			{
				Chain Hook Cooldown Time: 0%
				Healing Dealt: 500%
				Healing Received: 500%
				Pig Pen Cooldown Time: 150%
				Ultimate Generation - Combat Whole Hog: 0%
				Ultimate Generation - Passive Whole Hog: 0%
				Ultimate Generation Whole Hog: 80%
				Whole Hog Knockback Scalar: 0%
			}

			Sigma
			{
				Experimental Barrier Cooldown Time: 0%
				Experimental Barrier Recharge Rate: 500%
				Jump Vertical Speed: 800%
				Movement Gravity: 25%
				Projectile Gravity: 0%
				Projectile Speed: 500%
				Ultimate Generation - Combat Gravitic Flux: 0%
				Ultimate Generation - Passive Gravitic Flux: 0%
				Ultimate Generation Gravitic Flux: 80%
			}

			Sojourn
			{
				Damage Dealt: 500%
				Railgun Alt Fire Energy Charge Rate: 500%
			}

			Soldier: 76
			{
				Healing Dealt: 500%
				Healing Received: 500%
				Helix Rockets Cooldown Time: 30%
				Helix Rockets Knockback Scalar: 400%
				Ultimate Duration: 500%
				Ultimate Generation - Combat Tactical Visor: 0%
				Ultimate Generation - Passive Tactical Visor: 0%
				Ultimate Generation Tactical Visor: 10%
			}

			Sombra
			{
				Ultimate Generation - Combat EMP: 0%
				Ultimate Generation - Passive EMP: 0%
				Ultimate Generation EMP: 10%
			}

			Symmetra
			{
				Sentry Turret Cooldown Time: 10%
				Ultimate Generation - Combat Photon Barrier: 0%
				Ultimate Generation - Passive Photon Barrier: 0%
				Ultimate Generation Photon Barrier: 10%
			}

			Torbjörn
			{
				Deploy Turret Cooldown Time: 0%
				Overload Duration Scalar: 500%
				Projectile Speed: 500%
				Ultimate Duration: 500%
				Ultimate Generation - Combat Molten Core: 0%
				Ultimate Generation - Passive Molten Core: 0%
				Ultimate Generation Molten Core: 10%
			}

			Tracer
			{
				Ultimate Generation - Combat Pulse Bomb: 0%
				Ultimate Generation - Passive Pulse Bomb: 0%
				Ultimate Generation Pulse Bomb: 10%
			}

			Widowmaker
			{
				Damage Dealt: 500%
				Infinite Ultimate Duration: On
				Ultimate Generation - Combat Infra-Sight: 0%
				Ultimate Generation - Passive Infra-Sight: 0%
				Ultimate Generation Infra-Sight: 10%
			}

			Winston
			{
				Movement Gravity: 80%
				No Ammunition Requirement: On
				Primal Rage Melee Knockback Scalar: 25%
				Ultimate Generation - Combat Primal Rage: 0%
				Ultimate Generation - Passive Primal Rage: 0%
				Ultimate Generation Primal Rage: 10%
			}

			Wrecking Ball
			{
				Grappling Claw Knockback Scalar: 400%
				Infinite Ultimate Duration: On
				Minefield Knockback Scalar: 400%
				Projectile Gravity: 10%
				Ultimate Duration: 500%
				Ultimate Generation - Combat Minefield: 0%
				Ultimate Generation - Passive Minefield: 0%
				Ultimate Generation Minefield: 10%
			}

			Zarya
			{
				Damage Dealt: 500%
				Particle Barrier Cooldown Time: 50%
				Particle Cannon Secondary Knockback Scalar: 0%
				Projected Barrier Cooldown Time: 50%
				Ultimate Generation - Combat Graviton Surge: 0%
				Ultimate Generation - Passive Graviton Surge: 0%
				Ultimate Generation Graviton Surge: 10%
			}

			Zenyatta
			{
				Healing Dealt: 500%
				Projectile Speed: 500%
				Ultimate Generation - Combat Transcendence: 0%
				Ultimate Generation - Passive Transcendence: 0%
				Ultimate Generation Transcendence: 10%
			}

			enabled heroes
			{
				Cassidy
			}
		}

		Team 2
		{
			Health: 500%
			Ultimate Generation: 10%

			Ana
			{
				Biotic Grenade: Off
				Quick Melee: Off
				Sleep Dart: Off
				Ultimate Ability Nano Boost: Off
			}

			Ashe
			{
				Coach Gun Cooldown Time: 0%
				Coach Gun Knockback Scalar Enemy: 300%
				Coach Gun Knockback Scalar Self: 0%
				Damage Dealt: 300%
				Damage Received: 20%
				Dynamite Cooldown Time: 0%
				Dynamite Fuse Time Scalar: 1%
				Healing Received: 500%
				Health: 500%
				Infinite Ultimate Duration: On
				No Ammunition Requirement: On
				Ultimate Generation - Combat B.O.B.: 90%
				Ultimate Generation - Passive B.O.B.: 500%
				Ultimate Generation B.O.B.: 90%
			}

			Baptiste
			{
				Healing Dealt: 490%
			}

			Bastion
			{
				Healing Dealt: 10%
				Ultimate Generation Configuration: Artillery: 10%
			}

			Brigitte
			{
				Barrier Shield Cooldown Time: 0%
				Barrier Shield Recharge Rate: 500%
				Damage Received: 45%
				Healing Dealt: 500%
				Healing Received: 10%
				Health: 500%
				Movement Speed: 50%
				Shield Bash Cooldown Time: 50%
				Shield Bash Knockback Scalar: 300%
				Ultimate Generation Rally: 10%
			}

			Cassidy
			{
				Magnetic Grenade Cooldown Time: 30%
			}

			D.Va
			{
				Spawn Without Mech: On
			}

			Doomfist
			{
				Movement Speed: 70%
				Ultimate Generation Meteor Strike: 10%
			}

			Genji
			{
				Ultimate Generation Dragonblade: 10%
			}

			Hanzo
			{
				Damage Dealt: 500%
				Health: 500%
				Movement Gravity: 25%
				Projectile Gravity: 500%
				Projectile Speed: 70%
				Sonic Arrow Cooldown Time: 0%
				Spawn With Ultimate Ready: On
				Storm Arrows Cooldown Time: 0%
				Storm Arrows Quantity: 8
				Ultimate Generation - Combat Dragonstrike: 500%
				Ultimate Generation - Passive Dragonstrike: 500%
				Ultimate Generation Dragonstrike: 500%
			}

			Lúcio
			{
				Damage Dealt: 500%
				Healing Dealt: 200%
				Healing Received: 30%
				Health: 300%
				Movement Speed: 120%
				Projectile Speed: 10%
				Soundwave Knockback Scalar: 300%
				Ultimate Generation - Passive Sound Barrier: 500%
				Ultimate Generation Sound Barrier: 150%
			}

			Mei
			{
				Blizzard Freeze Minimum: 0%
			}

			Mercy
			{
				Ultimate Generation Valkyrie: 10%
			}

			Moira
			{
				Biotic Energy Maximum: 500%
				Biotic Energy Recharge Rate: 500%
				Biotic Orb Cooldown Time: 50%
				Biotic Orb Max Damage Scalar: 500%
				Biotic Orb Max Healing Scalar: 500%
				Damage Dealt: 500%
				Damage Received: 90%
				Fade Cooldown Time: 50%
				Healing Dealt: 200%
				Healing Received: 10%
				Health: 500%
				Jump Vertical Speed: 800%
				Movement Gravity: 25%
				Movement Speed: 180%
				Projectile Speed: 0%
				Ultimate Duration: 200%
				Ultimate Generation - Combat Coalescence: 150%
				Ultimate Generation - Passive Coalescence: 150%
				Ultimate Generation Coalescence: 150%
			}

			Pharah
			{
				Ammunition Clip Size Scalar: 25%
				Damage Dealt: 500%
				Damage Received: 500%
				Health: 10%
				Hover Jets Maximum Time: 500%
				Hover Jets Recharge Rate: 500%
				Hover Jets Vertical Speed Scalar: 75%
				Movement Gravity: 50%
				Projectile Speed: 85%
				Ultimate Generation Barrage: 10%
			}

			Reaper
			{
				Ammunition Clip Size Scalar: 25%
				Healing Dealt: 10%
				Health: 500%
				No Ammunition Requirement: On
				Ultimate Generation Death Blossom: 10%
			}

			Reinhardt
			{
				Barrier Field Recharge Rate: 500%
				Charge Knockback Scalar: 300%
				Damage Dealt: 300%
				Damage Received: 50%
				Health: 500%
				Jump Vertical Speed: 25%
				Movement Gravity: 400%
				Movement Speed: 150%
				Rocket Hammer Knockback Scalar: 400%
				Ultimate Generation - Combat Earthshatter: 150%
				Ultimate Generation - Passive Earthshatter: 300%
				Ultimate Generation Earthshatter: 200%
			}

			Roadhog
			{
				Ammunition Clip Size Scalar: 250%
				Damage Dealt: 250%
				Damage Received: 35%
				Health: 500%
				Movement Speed: 80%
				Pig Pen Cooldown Time: 150%
				Ultimate Generation - Combat Whole Hog: 80%
				Ultimate Generation - Passive Whole Hog: 80%
				Ultimate Generation Whole Hog: 80%
				Whole Hog Knockback Scalar: 150%
			}

			Sigma
			{
				Accretion Cooldown Time: 50%
				Accretion Knockback Scalar: 300%
				Damage Dealt: 500%
				Damage Received: 10%
				Experimental Barrier Cooldown Time: 0%
				Experimental Barrier Recharge Rate: 500%
				Healing Received: 10%
				Health: 500%
				Kinetic Grasp Cooldown Time: 50%
				Movement Speed: 50%
				Projectile Gravity: 0%
				Projectile Speed: 500%
				Ultimate Generation - Combat Gravitic Flux: 80%
				Ultimate Generation - Passive Gravitic Flux: 80%
				Ultimate Generation Gravitic Flux: 80%
			}

			Sojourn
			{
				Railgun Alt Fire Energy Charge Rate: 500%
			}

			Torbjörn
			{
				Damage Dealt: 500%
				Damage Received: 500%
				Healing Received: 10%
				Health: 10%
				Jump Vertical Speed: 25%
				Movement Gravity: 400%
				Movement Speed: 50%
				No Ammunition Requirement: On
				Projectile Speed: 10%
				Ultimate Generation Molten Core: 10%
			}

			Widowmaker
			{
				Ultimate Generation Infra-Sight: 10%
			}

			Winston
			{
				Ammunition Clip Size Scalar: 25%
				Barrier Projector: Off
				Jump Pack Cooldown Time: 0%
				Jump Pack Knockback Scalar: 0%
				Jump Vertical Speed: 150%
				Primal Rage Melee Knockback Scalar: 25%
			}

			Wrecking Ball
			{
				Damage Dealt: 200%
				Health: 50%
				Infinite Ultimate Duration: On
				Minefield Knockback Scalar: 400%
				Movement Gravity: 25%
				Projectile Gravity: 500%
				Projectile Speed: 500%
				Roll Always Active: On
				Spawn With Ultimate Ready: On
				Ultimate Generation - Combat Minefield: 500%
				Ultimate Generation - Passive Minefield: 500%
				Ultimate Generation Minefield: 500%
			}

			Zarya
			{
				Damage Dealt: 120%
				Ultimate Generation Graviton Surge: 10%
			}

			Zenyatta
			{
				Projectile Speed: 500%
			}

			enabled heroes
			{
				Moira
			}
		}

		General
		{
			Ability Cooldown Time: 50%

			Junker Queen
			{
				Damage Dealt: 320%
				Healing Received: 20%
			}
		}
	}

	extensions
	{
		Debuff Status Effects
		Energy Explosion Effects
		Kinetic Explosion Effects
		Explosion Sounds
		Play More Effects
		Spawn More Dummy Bots
	}
}

variables
{
	global:
		0: Round
		1: Kills
		2: BoxOn
		3: Init
		4: EasterEggEffects
		5: Changing
		6: Overloading
		7: Debugging
		8: Lockdown
		9: PurgeEffects
		10: Lightning
		11: DoorsRight1
		12: DoorsLeft1
		13: DoorsRight2
		14: DoorsLeft2
		15: IceParts
		16: FireParts
		17: WindParts
		18: LightningParts
		19: BlockedEffects
		20: Fire
		21: BlockedVectors
		22: BowParts
		23: Ice
		24: SpawnPoints
		25: Wind
		26: GenL
		27: Box
		28: DoorVectors
		29: AutoDebug
		30: PurgeVectors
		31: GenR
		32: WeaponVectors
		33: Players
		34: Purging
		35: Insta
		36: Max
		37: Nuke
		38: Double
		39: Dub
		40: PositionDrops
		41: PowerUps
		42: Rolling
		43: PerkVectors
		44: Charging
		45: TeleArray
		46: BlockedDoors
		47: MagicVectors
		48: Shadow
		49: ShadowParts
		50: Venom
		51: VenomParts
		52: BowVectors
		53: LockdownArray
		54: LoopControl
		55: BoxLocations
		56: ShadowVectors
		57: iceUpgrades
		58: iceVectors
		59: iceBool
		60: iceValues
		61: fireUpgrades
		62: fireVectors
		63: fireValues
		64: fireBool
		65: fireCopy
		66: fireCode
		67: windUpgrades
		68: windVectors
		69: windValues
		70: windCopy
		71: lightningUpgrades
		72: lightningVectors
		73: lightningValues
		74: lightningBool
		75: lightningCopy
		76: lightningSums
		77: shadowUpgrades
		78: shadowVectors
		79: shadowValues
		80: shadowCopy
		81: shadowSums
		82: venomUpgrades

	player:
		0: Points
		1: Dead
		2: FRA
		3: FRB
		4: BurstA
		5: BurstB
		6: Routing
		7: Speed
		8: Swash
		9: Reset
		10: Cycle
		12: DamageRank
		13: Ghostly
		14: GhostlyCD
		15: DmgShotP
		17: PHD
		18: Grav
		19: MuleKick
		20: ScavScotch
		21: Tele
		22: Tombstone
		23: Galva
		24: PHDCD
		25: IceEssence
		26: Ammo
		27: PerkLimit
		28: QuickRevive
		29: Juggernog
		30: WidowsWine
		31: EPop
		32: StaminaUp
		33: DoubleTap
		34: ElectricCherry
		35: DTON
		36: Deadshot
		37: Grenade
		38: SpeedCola
		39: Pack
		40: Sprint
		41: Ready
		42: MaxAmmo
		43: AV
		44: Clip
		45: Heroes
		46: HeroLimit
		47: FireEssence
		48: Storage
		49: Switching
		50: Repack
		51: Packing
		52: AmmoPrice
		53: ShadowEssence
		54: Choosing
		55: Weapons
		56: VenomEssence
		57: WindEssence
		58: LightningEssence
		59: VictimVector
		60: Slabs
		61: Charges
		62: Kills
		63: DownCheck
		64: Downs
		65: Shadow
		66: UCK
		67: Ice
		68: Fire
		69: Wind
		70: Lightning
		71: Venom
		72: ShadowIndex
		73: WonderWeapons
		74: Vampiric
		75: DmgShotS
		76: Toggle
		77: AltarKills
		78: VectorFetch
		79: VectorSet
		80: SizeSet
		81: VisualSet
}

subroutines
{
	0: BoxCycle
	1: SpawnResets
	2: PurchaseExtension
	3: MapSetup
	5: HeroSwitch
	6: HeroStats
	7: PlayerDown
	8: EssenceReset
	9: EssenceClaim
	10: HeroBuy
	11: AmmoCheck
	12: WeaponEffects
	13: EquationSet
	14: ElementalPop
	15: EssenceZero
	16: EssenceHUD
	17: SoulBox
	18: TabletSouls
	19: EasterEggSetup
	20: EasterEggPurchase
	21: BowStepsKills
	22: BowPlace
	23: BowPlaceResets
	24: AltarUpgrade
	25: AltarPlace
	26: AltarFail
	27: EESetupExtension
	28: BowBuild
	29: GauntletRun
	30: MoiraMelee
}

disabled rule("=======Playtesting & Crash Failsafe=======")
{
	event
	{
		Ongoing - Global;
	}
}

disabled rule("Crash Prevention")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global.Overloading == False;
		Server Load Average >= 250;
	}

	actions
	{
		Wait(3, Abort When False);
		Global.Overloading = True;
		Destroy Dummy Bot(Team 2, Number Of Players(Team 2) - 1);
		Set Slow Motion(10);
		Wait(0.500, Ignore Condition);
		Set Slow Motion(100);
		Wait(2, Ignore Condition);
		Global.Overloading = False;
		Destroy Dummy Bot(Team 2, Number Of Players(Team 2) - 1);
		Loop If Condition Is True;
	}
}

disabled rule("=======Core Mechanics & Setup=======")
{
	event
	{
		Ongoing - Global;
	}
}

disabled rule("Global Setup (Vectors, Variables, & Arrays)")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global.Round == Null;
		Number Of Living Players(Team 1) >= 1;
	}
}

disabled rule("Global Setup (Effects)")
{
	event
	{
		Subroutine;
		MapSetup;
	}
}

rule("Enemy Statistics")
{
	event
	{
		Subroutine;
		EquationSet;
	}

	actions
	{
		Disable Built-In Game Mode Respawning(All Players(Team 2));
		Global.ShadowVectors[26] = Global.Round >= 20 ? 105 : (Global.Round >= 10 ? 60 + 2 * Global.Round : (Global.Round >= 4 ? 60 : 30));
		Global.ShadowVectors[27] = 100 * Global.Round + 9.250 ^ (10000 * (Global.Round ^ (1 / 10000) - 1));
		Global.ShadowVectors[28] = 10000 / (Global.Round / 2 + 1.200 ^ (Global.Round - 10));
		Global.ShadowVectors[29] = Global.Round * (Number Of Players(Team 1) + 180 / Number Of Players(Team 2));
		Global.ShadowVectors[30] = 6 / Global.Round;
		Wait(0.100, Ignore Condition);
		Set Move Speed(All Players(Team 2), Global.ShadowVectors[26]);
		Set Max Health(All Players(Team 2), Global.ShadowVectors[27]);
		Set Damage Received(All Players(Team 2), Global.ShadowVectors[28]);
		Set Damage Dealt(All Players(Team 2), Global.ShadowVectors[29]);
		Start Forcing Dummy Bot Name(Players On Hero(Hero(Reaper), Team 2), Custom String("Zombie"));
		Respawn(All Dead Players(Team 2));
		Heal(Players On Hero(Hero(Reaper), Team 2), Null, 125000);
	}
}

rule("Easter Egg Setup")
{
	event
	{
		Subroutine;
		EasterEggSetup;
	}

	actions
	{
		All Players(Team 1).AltarKills = 31;
		"Ice Mechanics"
		Global.iceUpgrades = Empty Array;
		Global.iceUpgrades[0] = False;
		Global.iceUpgrades[1] = 0;
		Global.iceUpgrades[2] = 0;
		Global.iceUpgrades[3] = Vector(0, 0, 0);
		Global.iceUpgrades[4] = 0;
		Global.iceUpgrades[5] = 10;
		"Ice Vectors"
		Global.iceVectors = Empty Array;
		Global.iceVectors[0] = Vector(-93, 5, -180);
		Global.iceVectors[1] = Vector(-96.500, 5, -176.500);
		Global.iceVectors[2] = Vector(-100, 5, -173);
		Global.iceVectors[3] = Vector(-103.500, 5, -169.500);
		Global.iceVectors[4] = Vector(-107, 5, -166);
		Global.iceVectors[5] = Vector(-110.500, 5, -162.500);
		Global.iceVectors[6] = Vector(-114, 5, -159);
		Global.iceVectors[7] = Vector(-117.500, 5, -155.500);
		Global.iceVectors[8] = Vector(-121, 5, -152);
		Global.iceVectors[9] = Vector(-124.500, 5, -148.500);
		Global.iceVectors[10] = Vector(-128, 5, -145);
		Global.iceVectors[11] = Vector(-131.500, 5, -141.500);
		Global.iceVectors[12] = Vector(-24.441, 7.429, -89.752);
		Global.iceVectors[13] = Vector(53.749, 5.423, -67.105);
		Global.iceVectors[14] = Vector(172.474, 28.925, -63.186);
		Global.iceVectors[15] = Vector(-93.865, 5.277, -159.426);
		"Ice Riddle"
		Global.iceBool = Empty Array;
		Global.iceValues = Empty Array;
		Global.iceUpgrades[1] = 0;
		While(Global.iceUpgrades[1] < 12);
			Global.iceValues[Global.iceUpgrades[1]] = Global.iceUpgrades[1];
			Global.iceBool[Global.iceUpgrades[1]] = False;
			Global.iceUpgrades[1] += 1;
			Wait(0.100, Ignore Condition);
		End;
		Global.iceUpgrades[2] = Random Value In Array(Global.iceValues);
		"Ice Code"
		Create In-World Text(All Players(Team 1), Global.iceUpgrades[2] == 0 ? Custom String("°") : (
			Global.iceUpgrades[2] == 1 ? Custom String("•") : (Global.iceUpgrades[2] == 2 ? Custom String(":") : (
			Global.iceUpgrades[2] == 3 ? Custom String("•°") : (Global.iceUpgrades[2] == 4 ? Custom String("••") : (
			Global.iceUpgrades[2] == 5 ? Custom String("•:") : (Global.iceUpgrades[2] == 6 ? Custom String(":°") : (
			Global.iceUpgrades[2] == 7 ? Custom String(":•") : (Global.iceUpgrades[2] == 8 ? Custom String(": :") : (
			Global.iceUpgrades[2] == 9 ? Custom String("•°°") : (Global.iceUpgrades[2] == 10 ? Custom String("•°•") : Custom String(
			"•°:"))))))))))), Global.iceVectors[15], 4, Clip Against Surfaces, Visible To and String, Color(Blue), Visible Always);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		"Ice Effects [0]"
		Create Effect(All Players(Team 1), Ring, Color(Blue), Global.iceVectors[0], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Orb, Global.iceBool[0] == False ? Color(White) : Color(Blue), Global.iceVectors[0], 1,
			Visible To and Color);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Ice Effects [1]"
		Create Effect(All Players(Team 1), Ring, Color(Blue), Global.iceVectors[1], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Orb, Global.iceBool[1] == False ? Color(White) : Color(Blue), Global.iceVectors[1], 1,
			Visible To and Color);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Ice Effects [2]"
		Create Effect(All Players(Team 1), Ring, Color(Blue), Global.iceVectors[2], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Orb, Global.iceBool[2] == False ? Color(White) : Color(Blue), Global.iceVectors[2], 1,
			Visible To and Color);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Ice Effects [3]"
		Create Effect(All Players(Team 1), Ring, Color(Blue), Global.iceVectors[3], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Orb, Global.iceBool[3] == False ? Color(White) : Color(Blue), Global.iceVectors[3], 1,
			Visible To and Color);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Ice Effects [4] "
		Create Effect(All Players(Team 1), Ring, Color(Blue), Global.iceVectors[4], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Orb, Global.iceBool[4] == False ? Color(White) : Color(Blue), Global.iceVectors[4], 1,
			Visible To and Color);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Ice Effects [5]"
		Create Effect(All Players(Team 1), Ring, Color(Blue), Global.iceVectors[5], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Orb, Global.iceBool[5] == False ? Color(White) : Color(Blue), Global.iceVectors[5], 1,
			Visible To and Color);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Ice Effects [6]"
		Create Effect(All Players(Team 1), Ring, Color(Blue), Global.iceVectors[6], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Orb, Global.iceBool[6] == False ? Color(White) : Color(Blue), Global.iceVectors[6], 1,
			Visible To and Color);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Ice Effects [7]"
		Create Effect(All Players(Team 1), Ring, Color(Blue), Global.iceVectors[7], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Orb, Global.iceBool[7] == False ? Color(White) : Color(Blue), Global.iceVectors[7], 1,
			Visible To and Color);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Ice Effects [8]"
		Create Effect(All Players(Team 1), Ring, Color(Blue), Global.iceVectors[8], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Orb, Global.iceBool[8] == False ? Color(White) : Color(Blue), Global.iceVectors[8], 1,
			Visible To and Color);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Ice Effects [9]"
		Create Effect(All Players(Team 1), Ring, Color(Blue), Global.iceVectors[9], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Orb, Global.iceBool[9] == False ? Color(White) : Color(Blue), Global.iceVectors[9], 1,
			Visible To and Color);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Ice Effects [10]"
		Create Effect(All Players(Team 1), Ring, Color(Blue), Global.iceVectors[10], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Orb, Global.iceBool[10] == False ? Color(White) : Color(Blue), Global.iceVectors[10], 1,
			Visible To and Color);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Ice Effects [11]"
		Create Effect(All Players(Team 1), Ring, Color(Blue), Global.iceVectors[11], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Orb, Global.iceBool[11] == False ? Color(White) : Color(Blue), Global.iceVectors[11], 1,
			Visible To and Color);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Graveyards"
		Create Effect(All Players(Team 1), Light Shaft, Color(Blue),
			Global.IceParts == 4 ? Global.MagicVectors[3] : Global.MagicVectors[0], 3, Visible To Position and Radius);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Cloud, Color(Blue), Global.IceParts == 4 ? Global.MagicVectors[3] : Global.MagicVectors[0], 3,
			Visible To Position and Radius);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Upgrade Sphere"
		Create Effect(All Players(Team 1), Sphere, Color(Blue),
			Global.iceUpgrades[0] == True ? Global.PerkVectors[11] : Global.MagicVectors[0], Global.iceUpgrades[5],
			Visible To Position and Radius);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Sparkles, Color(Blue),
			Global.iceUpgrades[0] == True ? Global.PerkVectors[11] : Global.MagicVectors[0], Global.iceUpgrades[5],
			Visible To Position and Radius);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Ice Altar"
		Create In-World Text(All Players(Team 1), Custom String("Altar of Ull"), Global.PerkVectors[11], 1, Clip Against Surfaces,
			Visible To, Color(Blue), Default Visibility);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		Create Effect(All Players(Team 1), Ring, Color(Blue), Global.PerkVectors[11], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Sparkles, Color(Blue), Global.PerkVectors[11], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Orb, Color(Blue), Global.IceParts == 6 ? Global.PerkVectors[11] : (
			Global.ShadowVectors[44] == 2 && Global.ShadowVectors[47] == True ? Global.PerkVectors[11] : Global.MagicVectors[0]), 2,
			Visible To Position and Radius);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Fire Mechanics"
		Global.fireUpgrades = Empty Array;
		Global.fireUpgrades[0] = False;
		Global.fireUpgrades[1] = 0;
		Global.fireUpgrades[2] = 0;
		Global.fireUpgrades[3] = Vector(0, 0, 0);
		Global.fireUpgrades[4] = 0;
		Global.fireUpgrades[5] = 40;
		"Fire Vectors"
		Global.fireVectors = Empty Array;
		Global.fireVectors[0] = Vector(210.216, 28.925, -62.381);
		Global.fireVectors[1] = Vector(222.715, 28.925, -62.381);
		Global.fireVectors[2] = Vector(224.693, 28.925, -56.836);
		Global.fireVectors[3] = Vector(224.693, 28.925, -40.473);
		Global.fireVectors[4] = Vector(224.693, 28.925, -25.357);
		Global.fireVectors[5] = Vector(217.874, 28.925, -19.300);
		Global.fireVectors[6] = Vector(204.726, 28.925, -19.300);
		Global.fireVectors[7] = Vector(-55, 8, 21);
		Global.fireVectors[8] = Vector(-60, 8, 21);
		Global.fireVectors[9] = Vector(-50, 8, 21);
		Global.fireVectors[10] = Vector(-55, 8, 26);
		Global.fireVectors[11] = Vector(-55, 8, 16);
		Global.fireVectors[17] = Vector(179, 18, -63);
		Global.fireVectors[12] = Vector(184, 18, -64);
		Global.fireVectors[14] = Vector(189, 18, -64);
		Global.fireVectors[13] = Vector(194, 18, -63);
		Global.fireVectors[15] = Vector(199, 18, -60);
		Global.fireVectors[18] = Vector(204, 18, -55);
		Global.fireVectors[16] = Vector(202, 18, -45);
		"Fire Values"
		Global.fireValues = Empty Array;
		Global.fireValues[0] = 11;
		Global.fireValues[1] = 5;
		Global.fireValues[2] = 9;
		Global.fireValues[3] = 7;
		Global.fireValues[4] = 6;
		Global.fireValues[5] = 3;
		Global.fireValues[6] = 4;
		"Fire Riddle"
		Global.fireBool = Empty Array;
		Global.fireCopy = Empty Array;
		Global.fireUpgrades[1] = 0;
		While(Global.fireUpgrades[1] < 6);
			Global.fireCopy[Global.fireUpgrades[1]] = Global.fireValues[Global.fireUpgrades[1]];
			Global.fireBool[Global.fireUpgrades[1]] = False;
			Global.fireUpgrades[1] += 1;
			Wait(0.100, Ignore Condition);
		End;
		"Fire Code"
		Global.fireCode = Empty Array;
		Global.fireUpgrades[1] = 0;
		While(Global.fireUpgrades[1] < 4);
			Global.fireCode[Global.fireUpgrades[1]] = Random Value In Array(Global.fireCopy);
			Modify Global Variable(fireCopy, Remove From Array By Value, Global.fireCode[Global.fireUpgrades[1]]);
			Global.fireUpgrades[1] += 1;
			Wait(0.100, Ignore Condition);
		End;
		"Fire Effects [0]"
		Create Effect(All Players(Team 1), Ring, Color(Red), Global.fireVectors[0], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create In-World Text(All Players(Team 1), Custom String("11"), Global.fireVectors[0], 2, Clip Against Surfaces,
			Visible To and Color, Global.fireBool[0] == True ? Color(Red) : Color(White), Default Visibility);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		"Fire Effects [1]"
		Create Effect(All Players(Team 1), Ring, Color(Red), Global.fireVectors[1], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create In-World Text(All Players(Team 1), Custom String("5"), Global.fireVectors[1], 2, Clip Against Surfaces,
			Visible To and Color, Global.fireBool[1] == True ? Color(Red) : Color(White), Default Visibility);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		"Fire Effects [2]"
		Create Effect(All Players(Team 1), Ring, Color(Red), Global.fireVectors[2], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create In-World Text(All Players(Team 1), Custom String("9"), Global.fireVectors[2], 2, Clip Against Surfaces,
			Visible To and Color, Global.fireBool[2] == True ? Color(Red) : Color(White), Default Visibility);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		"Fire Effects [3]"
		Create Effect(All Players(Team 1), Ring, Color(Red), Global.fireVectors[3], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create In-World Text(All Players(Team 1), Custom String("7"), Global.fireVectors[3], 2, Clip Against Surfaces,
			Visible To and Color, Global.fireBool[3] == True ? Color(Red) : Color(White), Default Visibility);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		"Fire Effects [4]"
		Create Effect(All Players(Team 1), Ring, Color(Red), Global.fireVectors[4], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create In-World Text(All Players(Team 1), Custom String("6"), Global.fireVectors[4], 2, Clip Against Surfaces,
			Visible To and Color, Global.fireBool[4] == True ? Color(Red) : Color(White), Default Visibility);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		"Fire Effects [5]"
		Create Effect(All Players(Team 1), Ring, Color(Red), Global.fireVectors[5], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create In-World Text(All Players(Team 1), Custom String("3"), Global.fireVectors[5], 2, Clip Against Surfaces,
			Visible To and Color, Global.fireBool[5] == True ? Color(Red) : Color(White), Default Visibility);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		"Fire Effects [6]"
		Create Effect(All Players(Team 1), Ring, Color(Red), Global.fireVectors[6], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create In-World Text(All Players(Team 1), Custom String("4"), Global.fireVectors[6], 2, Clip Against Surfaces,
			Visible To and Color, Global.fireBool[6] == True ? Color(Red) : Color(White), Default Visibility);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		"Fire Effects [7]"
		Create Effect(All Players(Team 1), Ring, Color(Red), Global.fireVectors[7], 5, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Sparkles, Color(Red), Global.fireVectors[7], 5, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Fire Effects [8]"
		Create Effect(All Players(Team 1), Orb, Global.fireUpgrades[5] < 10 ? Color(Red) : Color(White), Global.fireVectors[8], 1,
			Visible To and Color);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Fire Effects [9]"
		Create Effect(All Players(Team 1), Orb, Global.fireUpgrades[5] < 20 ? Color(Red) : Color(White), Global.fireVectors[9], 1,
			Visible To and Color);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Fire Effects [10]"
		Create Effect(All Players(Team 1), Orb, Global.fireUpgrades[5] < 30 ? Color(Red) : Color(White), Global.fireVectors[10], 1,
			Visible To and Color);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Fire Effects [11]"
		Create Effect(All Players(Team 1), Orb, Global.fireUpgrades[5] < 40 ? Color(Red) : Color(White), Global.fireVectors[11], 1,
			Visible To and Color);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Fire Code [12]"
		Create In-World Text(All Players(Team 1), Custom String("•°:"), Global.fireVectors[12], 4, Clip Against Surfaces,
			Visible To and Color, Is True For Any(Global.fireCode, Current Array Element == 11) ? Color(Red) : Color(White),
			Visible Always);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		"Fire Code [13]"
		Create In-World Text(All Players(Team 1), Custom String("•:"), Global.fireVectors[13], 4, Clip Against Surfaces,
			Visible To and Color, Is True For Any(Global.fireCode, Current Array Element == 5) ? Color(Red) : Color(White),
			Visible Always);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		"Fire Code [14]"
		Create In-World Text(All Players(Team 1), Custom String("•°°"), Global.fireVectors[14], 4, Clip Against Surfaces,
			Visible To and Color, Is True For Any(Global.fireCode, Current Array Element == 9) ? Color(Red) : Color(White),
			Visible Always);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		"Fire Code [15]"
		Create In-World Text(All Players(Team 1), Custom String(":•"), Global.fireVectors[15], 4, Clip Against Surfaces,
			Visible To and Color, Is True For Any(Global.fireCode, Current Array Element == 7) ? Color(Red) : Color(White),
			Visible Always);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		"Fire Code [16]"
		Create In-World Text(All Players(Team 1), Custom String(":°"), Global.fireVectors[16], 4, Clip Against Surfaces,
			Visible To and Color, Is True For Any(Global.fireCode, Current Array Element == 6) ? Color(Red) : Color(White),
			Visible Always);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		"Fire Code [17]"
		Create In-World Text(All Players(Team 1), Custom String("•°"), Global.fireVectors[17], 4, Clip Against Surfaces,
			Visible To and Color, Is True For Any(Global.fireCode, Current Array Element == 3) ? Color(Red) : Color(White),
			Visible Always);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		"Fire Code [18]"
		Create In-World Text(All Players(Team 1), Custom String("••"), Global.fireVectors[18], 4, Clip Against Surfaces,
			Visible To and Color, Is True For Any(Global.fireCode, Current Array Element == 4) ? Color(Red) : Color(White),
			Visible Always);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		"Upgrade Sphere"
		Create Effect(All Players(Team 1), Sphere, Color(Red),
			Global.fireUpgrades[0] == True ? Global.PerkVectors[13] : Global.MagicVectors[0], Global.fireUpgrades[5],
			Visible To Position and Radius);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Sparkles, Color(Red),
			Global.fireUpgrades[0] == True ? Global.PerkVectors[13] : Global.MagicVectors[0], Global.fireUpgrades[5],
			Visible To Position and Radius);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Fire Altar"
		Create In-World Text(All Players(Team 1), Custom String("Altar of Kagutsuchi"), Global.PerkVectors[13], 1, Clip Against Surfaces,
			Visible To, Color(Red), Default Visibility);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		Create Effect(All Players(Team 1), Ring, Color(Red), Global.PerkVectors[13], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Sparkles, Color(Red), Global.PerkVectors[13], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Orb, Color(Red), Global.FireParts == 6 ? Global.PerkVectors[13] : (
			Global.ShadowVectors[44] == 2 && Global.ShadowVectors[48] == True ? Global.PerkVectors[13] : Global.MagicVectors[0]), 2,
			Visible To Position and Radius);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Wind Mechanics"
		Global.windUpgrades = Empty Array;
		Global.windUpgrades[0] = False;
		Global.windUpgrades[1] = 0;
		Global.windUpgrades[2] = 0;
		Global.windUpgrades[3] = Vector(0, 0, 0);
		Global.windUpgrades[4] = 0;
		Global.windUpgrades[5] = 16;
		"Wind Vectors"
		Global.windVectors = Empty Array;
		Global.windVectors[0] = Vector(64.500, 7.500, -90);
		Global.windVectors[1] = Vector(64.500, 7.500, -86);
		Global.windVectors[2] = Vector(64.500, 7.500, -82);
		Global.windVectors[3] = Vector(64.500, 7.500, -78);
		Global.windVectors[5] = Vector(117.290, 14.491, -58.118);
		Global.windVectors[4] = Vector(62.839, 13.513, -83.053);
		Global.windVectors[6] = Vector(82.911, 5.752, -92.023);
		Global.windVectors[7] = Vector(98.440, 10.312, -25.384);
		Global.windVectors[8] = Vector(78.887, 8.341, -60.956);
		"Wind Values"
		Global.windValues = Empty Array;
		Global.windValues[0] = 0;
		Global.windValues[1] = 1;
		Global.windValues[2] = 2;
		Global.windValues[3] = 3;
		"Wind Code"
		Global.windCopy = Empty Array;
		Global.windUpgrades[1] = 0;
		While(Global.windUpgrades[1] < 4);
			Global.windCopy[Global.windUpgrades[1]] = Random Value In Array(Global.windValues);
			Global.windUpgrades[1] += 1;
			Wait(0.100, Ignore Condition);
		End;
		Global.windUpgrades[2] = Random Value In Array(Global.windValues);
		"Wind Effects [0]"
		Create Effect(All Players(Team 1), Ring, Color(Yellow), Global.windVectors[0], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create In-World Text(All Players(Team 1), Global.windCopy[0] == 0 ? Custom String("^") : (Global.windCopy[0] == 1 ? Custom String(
			"I") : (Global.windCopy[0] == 2 ? Custom String("II") : Custom String("LI"))), Global.windVectors[0], 3, Clip Against Surfaces,
			Visible To and String, Color(Yellow), Default Visibility);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		"Wind Effects [1]"
		Create Effect(All Players(Team 1), Ring, Color(Yellow), Global.windVectors[1], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create In-World Text(All Players(Team 1), Global.windCopy[1] == 0 ? Custom String("L") : (Global.windCopy[1] == 1 ? Custom String(
			"IL") : (Global.windCopy[1] == 2 ? Custom String("LL") : Custom String("^"))), Global.windVectors[1], 3, Clip Against Surfaces,
			Visible To and String, Color(Yellow), Default Visibility);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		"Wind Effects [2]"
		Create Effect(All Players(Team 1), Ring, Color(Yellow), Global.windVectors[2], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create In-World Text(All Players(Team 1), Global.windCopy[2] == 0 ? Custom String("Ib") : (Global.windCopy[2] == 1 ? Custom String(
			"Lb") : (Global.windCopy[2] == 2 ? Custom String("^") : Custom String("b"))), Global.windVectors[2], 3, Clip Against Surfaces,
			Visible To and String, Color(Yellow), Default Visibility);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		"Wind Effects [3]"
		Create Effect(All Players(Team 1), Ring, Color(Yellow), Global.windVectors[3], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create In-World Text(All Players(Team 1), Global.windCopy[3] == 0 ? Custom String("I^") : (Global.windCopy[3] == 1 ? Custom String(
			"L^") : (Global.windCopy[3] == 2 ? Custom String("b^") : Custom String("^"))), Global.windVectors[3], 3, Clip Against Surfaces,
			Visible To and String, Color(Yellow), Default Visibility);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		"Wind Effects [4]"
		Create In-World Text(All Players(Team 1), Global.windUpgrades[2] == 0 ? Custom String("° | : | :• | ••") : (
			Global.windUpgrades[2] == 1 ? Custom String("• | :° | •°: | : :") : (Global.windUpgrades[2] == 2 ? Custom String(
			"•: | •°• | ° | ••° ") : Custom String("•°° | ° | •° | ° "))), Global.windVectors[4], 4, Clip Against Surfaces,
			Visible To and String, Color(Yellow), Default Visibility);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		"Longshots"
		Create Effect(All Players(Team 1), Ring, Color(Yellow), Global.WindParts == 4 ? Global.windVectors[5] : Global.MagicVectors[0], 3,
			Visible To Position and Radius);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Sparkles, Color(Yellow), Global.WindParts == 4 ? Global.windVectors[5] : Global.MagicVectors[0],
			3, Visible To Position and Radius);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Sphere, Color(Yellow), Global.WindParts == 4 ? Global.windUpgrades[3] : Global.MagicVectors[0],
			5, Visible To Position and Radius);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Upgrade Sphere"
		Create Effect(All Players(Team 1), Sphere, Color(Yellow),
			Global.windUpgrades[0] == True ? Global.PerkVectors[15] : Global.MagicVectors[0], Global.windUpgrades[5],
			Visible To Position and Radius);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Sparkles, Color(Yellow),
			Global.windUpgrades[0] == True ? Global.PerkVectors[15] : Global.MagicVectors[0], Global.windUpgrades[5],
			Visible To Position and Radius);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Wind Altar"
		Create In-World Text(All Players(Team 1), Custom String("Altar of Boreas"), Global.PerkVectors[15], 1, Clip Against Surfaces,
			Visible To, Color(Yellow), Default Visibility);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		Create Effect(All Players(Team 1), Ring, Color(Yellow), Global.PerkVectors[15], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Sparkles, Color(Yellow), Global.PerkVectors[15], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Orb, Color(Yellow), Global.WindParts == 6 ? Global.PerkVectors[15] : (
			Global.ShadowVectors[44] == 2 && Global.ShadowVectors[49] == True ? Global.PerkVectors[15] : Global.MagicVectors[0]), 2,
			Visible To Position and Radius);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Lightning Mechanics"
		Global.lightningUpgrades = Empty Array;
		Global.lightningUpgrades[0] = False;
		Global.lightningUpgrades[1] = 0;
		Global.lightningUpgrades[2] = 0;
		Global.lightningUpgrades[3] = Vector(0, 0, 0);
		Global.lightningUpgrades[4] = 0;
		Global.lightningUpgrades[5] = 3;
		Global.lightningUpgrades[6] = 3;
		Global.lightningUpgrades[7] = 0;
		"Lightning Vectors"
		Global.lightningVectors = Empty Array;
		Global.lightningVectors[0] = Vector(-32, 6, -80);
		Global.lightningVectors[1] = Vector(-31, 6, -82);
		Global.lightningVectors[2] = Vector(-30, 6, -80);
		Global.lightningVectors[3] = Vector(-29, 6, -82);
		Global.lightningVectors[4] = Vector(-28, 6, -80);
		Global.lightningVectors[5] = Vector(-26, 6, -80);
		Global.lightningVectors[6] = Vector(-25, 6, -82);
		Global.lightningVectors[7] = Vector(-24, 6, -80);
		Global.lightningVectors[8] = Vector(-23, 6, -82);
		Global.lightningVectors[9] = Vector(-22, 6, -80);
		Global.lightningVectors[10] = Vector(-21, 6, -82);
		Global.lightningVectors[11] = Vector(-20, 6, -80);
		Global.lightningVectors[12] = Vector(-24.595, 7.475, -87.071);
		Global.lightningVectors[13] = Vector(-2.772, 13.860, -79.560);
		Global.lightningVectors[14] = Vector(-7.696, 7.452, -59.264);
		Global.lightningVectors[15] = Vector(-32.770, 11.425, -93.372);
		Global.lightningVectors[16] = Vector(-3.957, 8.269, 61.857);
		Global.lightningVectors[17] = Vector(21.032, 7.425, 26.301);
		Global.lightningVectors[18] = Vector(29.663, 5.425, -94.847);
		Global.lightningVectors[19] = Vector(-148.922, 5.277, -116.654);
		"Lightning Values"
		Global.lightningValues = Empty Array;
		Global.lightningValues[0] = 12;
		Global.lightningValues[1] = 13;
		Global.lightningValues[2] = 14;
		Global.lightningValues[3] = 15;
		"Lightning Sums"
		Global.lightningSums = Empty Array;
		Global.lightningSums[0] = 17;
		Global.lightningSums[1] = 22;
		Global.lightningSums[2] = 18;
		Global.lightningSums[3] = 12;
		Global.lightningUpgrades[2] = Random Value In Array(Global.lightningSums);
		Modify Global Variable(lightningSums, Remove From Array By Value, Global.lightningUpgrades[2]);
		"Lightning Bool"
		Global.lightningBool = Empty Array;
		Global.lightningUpgrades[1] = 0;
		While(Global.lightningUpgrades[1] < 12);
			Global.lightningBool[Global.lightningUpgrades[1]] = False;
			Global.lightningUpgrades[1] += 1;
			Wait(0.100, Ignore Condition);
		End;
		"Lightning Copy"
		Global.lightningCopy = Empty Array;
		Global.lightningUpgrades[1] = 0;
		While(Global.lightningUpgrades[1] < 6);
			Global.lightningCopy[Global.lightningUpgrades[1]] = Random Value In Array(Global.lightningValues);
			Global.lightningUpgrades[1] += 1;
			Wait(0.100, Ignore Condition);
		End;
		"Lightning Effects [0-1]"
		Create Effect(All Players(Team 1), Light Shaft, Global.lightningBool[0] == False ? Color(White) : Color(Purple),
			Global.lightningVectors[0], 1, Visible To and Color);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Light Shaft, Global.lightningBool[1] == False ? Color(Gray) : Color(Purple),
			Global.lightningVectors[1], 1, Visible To and Color);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Lightning Effects [2-3]"
		Create Effect(All Players(Team 1), Light Shaft, Global.lightningBool[2] == False ? Color(White) : Color(Purple),
			Global.lightningVectors[2], 1, Visible To and Color);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Light Shaft, Global.lightningBool[3] == False ? Color(Gray) : Color(Purple),
			Global.lightningVectors[3], 1, Visible To and Color);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Lightning Effects [4-5]"
		Create Effect(All Players(Team 1), Light Shaft, Global.lightningBool[4] == False ? Color(White) : Color(Purple),
			Global.lightningVectors[4], 1, Visible To and Color);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Light Shaft, Global.lightningBool[5] == False ? Color(White) : Color(Purple),
			Global.lightningVectors[5], 1, Visible To and Color);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Lightning Effects [6-7]"
		Create Effect(All Players(Team 1), Light Shaft, Global.lightningBool[6] == False ? Color(Gray) : Color(Purple),
			Global.lightningVectors[6], 1, Visible To and Color);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Light Shaft, Global.lightningBool[7] == False ? Color(White) : Color(Purple),
			Global.lightningVectors[7], 1, Visible To and Color);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Lightning Effects [8-9]"
		Create Effect(All Players(Team 1), Light Shaft, Global.lightningBool[8] == False ? Color(Gray) : Color(Purple),
			Global.lightningVectors[8], 1, Visible To and Color);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Light Shaft, Global.lightningBool[9] == False ? Color(White) : Color(Purple),
			Global.lightningVectors[9], 1, Visible To and Color);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Lightning Effects [10-11]"
		Create Effect(All Players(Team 1), Light Shaft, Global.lightningBool[10] == False ? Color(Gray) : Color(Purple),
			Global.lightningVectors[10], 1, Visible To and Color);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Light Shaft, Global.lightningBool[11] == False ? Color(White) : Color(Purple),
			Global.lightningVectors[11], 1, Visible To and Color);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Lightning Effects [12]"
		Create In-World Text(All Players(Team 1), Global.lightningUpgrades[2] == 17 ? Custom String("C# Major") : (
			Global.lightningUpgrades[2] == 22 ? Custom String("B Minor") : (Global.lightningUpgrades[2] == 18 ? Custom String(
			"D Major Dim") : Custom String("G Sus 4"))), Global.lightningVectors[12], 3, Clip Against Surfaces, Visible To and String,
			Color(Purple), Default Visibility);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		"Lightning Effects [13]"
		Create In-World Text(All Players(Team 1), Global.lightningUpgrades[2] == 12 ? Custom String("b^") : (
			Global.lightningUpgrades[2] == 13 ? Custom String("bI") : (Global.lightningUpgrades[2] == 14 ? Custom String("bL")
			: Custom String("bb"))), Global.LightningParts == 4 ? Global.lightningVectors[13] : Global.MagicVectors[0], 3,
			Clip Against Surfaces, Visible To Position and String, Color(Purple), Default Visibility);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		"Lightning Effects [14]"
		Create Effect(All Players(Team 1), Ring, Color(Purple), Global.lightningVectors[14], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create In-World Text(All Players(Team 1), Global.lightningCopy[0] == 12 ? Custom String("••°") : (
			Global.lightningCopy[0] == 13 ? Custom String("•••") : (Global.lightningCopy[0] == 14 ? Custom String("••:") : Custom String(
			"•:°"))), Global.lightningVectors[14], 4, Clip Against Surfaces, Visible To and String, Color(Purple), Default Visibility);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		"Lightning Effects [15]"
		Create Effect(All Players(Team 1), Ring, Color(Purple), Global.lightningVectors[15], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create In-World Text(All Players(Team 1), Global.lightningCopy[1] == 12 ? Custom String("••°") : (
			Global.lightningCopy[1] == 13 ? Custom String("•••") : (Global.lightningCopy[1] == 14 ? Custom String("••:") : Custom String(
			"•:°"))), Global.lightningVectors[15], 4, Clip Against Surfaces, Visible To and String, Color(Purple), Default Visibility);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		"Lightning Effects [16]"
		Create Effect(All Players(Team 1), Ring, Color(Purple), Global.lightningVectors[16], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create In-World Text(All Players(Team 1), Global.lightningCopy[2] == 12 ? Custom String("••°") : (
			Global.lightningCopy[2] == 13 ? Custom String("•••") : (Global.lightningCopy[2] == 14 ? Custom String("••:") : Custom String(
			"•:°"))), Global.lightningVectors[16], 4, Clip Against Surfaces, Visible To and String, Color(Purple), Default Visibility);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		"Lightning Effects [17]"
		Create Effect(All Players(Team 1), Ring, Color(Purple), Global.lightningVectors[17], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create In-World Text(All Players(Team 1), Global.lightningCopy[3] == 12 ? Custom String("••°") : (
			Global.lightningCopy[3] == 13 ? Custom String("•••") : (Global.lightningCopy[3] == 14 ? Custom String("••:") : Custom String(
			"•:°"))), Global.lightningVectors[17], 4, Clip Against Surfaces, Visible To and String, Color(Purple), Default Visibility);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		"Lightning Effects [18]"
		Create Effect(All Players(Team 1), Ring, Color(Purple), Global.lightningVectors[18], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create In-World Text(All Players(Team 1), Global.lightningCopy[4] == 12 ? Custom String("••°") : (
			Global.lightningCopy[4] == 13 ? Custom String("•••") : (Global.lightningCopy[4] == 14 ? Custom String("••:") : Custom String(
			"•:°"))), Global.lightningVectors[18], 4, Clip Against Surfaces, Visible To and String, Color(Purple), Default Visibility);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		"Lightning Effects [19]"
		Create Effect(All Players(Team 1), Ring, Color(Purple), Global.lightningVectors[19], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create In-World Text(All Players(Team 1), Global.lightningCopy[5] == 12 ? Custom String("••°") : (
			Global.lightningCopy[5] == 13 ? Custom String("•••") : (Global.lightningCopy[5] == 14 ? Custom String("••:") : Custom String(
			"•:°"))), Global.lightningVectors[19], 4, Clip Against Surfaces, Visible To and String, Color(Purple), Default Visibility);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		"Upgrade Sphere"
		Create Effect(All Players(Team 1), Sphere, Color(Purple),
			Global.lightningUpgrades[0] == True ? Global.PerkVectors[17] : Global.MagicVectors[0], Global.lightningUpgrades[5],
			Visible To Position and Radius);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Sparkles, Color(Purple),
			Global.lightningUpgrades[0] == True ? Global.PerkVectors[17] : Global.MagicVectors[0], Global.lightningUpgrades[5],
			Visible To Position and Radius);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Lightning Altar"
		Create In-World Text(All Players(Team 1), Custom String("Altar of Kimat"), Global.PerkVectors[17], 1, Clip Against Surfaces,
			Visible To, Color(Purple), Default Visibility);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		Create Effect(All Players(Team 1), Ring, Color(Purple), Global.PerkVectors[17], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Sparkles, Color(Purple), Global.PerkVectors[17], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Orb, Color(Purple), Global.LightningParts == 6 ? Global.PerkVectors[17] : (
			Global.ShadowVectors[44] == 2 && Global.ShadowVectors[50] == True ? Global.PerkVectors[17] : Global.MagicVectors[0]), 2,
			Visible To Position and Radius);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Call Subroutine(EESetupExtension);
	}
}

rule("Easter Egg Setup Extension")
{
	event
	{
		Subroutine;
		EESetupExtension;
	}

	actions
	{
		"Shadow Mechanics"
		Global.shadowUpgrades = Empty Array;
		Global.shadowUpgrades[0] = False;
		Global.shadowUpgrades[1] = 0;
		Global.shadowUpgrades[2] = 0;
		Global.shadowUpgrades[3] = Vector(0, 0, 0);
		Global.shadowUpgrades[4] = 0;
		Global.shadowUpgrades[5] = 3;
		"Shadow Vectors"
		Global.shadowVectors = Empty Array;
		Global.shadowVectors[0] = Vector(-16, 8, 53);
		Global.shadowVectors[1] = Vector(-20, 8, 53);
		Global.shadowVectors[2] = Vector(-24, 8, 53);
		Global.shadowVectors[3] = Vector(-84.991, 5.275, -55.325);
		Global.shadowVectors[4] = Vector(-141.516, 5.425, -91.521);
		Global.shadowVectors[5] = Vector(-140.748, 5.425, -143.370);
		Global.shadowVectors[6] = Vector(-76.127, 5.425, -157.745);
		"Shadow Values"
		Global.shadowValues = Empty Array;
		Global.shadowUpgrades[1] = 0;
		While(Global.shadowUpgrades[1] < 10);
			Global.shadowValues[Global.shadowUpgrades[1]] = Global.shadowUpgrades[1];
			Global.shadowUpgrades[1] += 1;
			Wait(0.100, Ignore Condition);
		End;
		"Shadow Copy"
		Global.shadowCopy = Empty Array;
		Global.shadowUpgrades[1] = 0;
		While(Global.shadowUpgrades[1] < 3);
			Global.shadowCopy[Global.shadowUpgrades[1]] = Random Value In Array(Global.shadowValues);
			Global.shadowUpgrades[1] += 1;
			Wait(0.100, Ignore Condition);
		End;
		"Shadow Sums"
		Global.shadowSums = Empty Array;
		Global.shadowSums[0] = 103;
		Global.shadowSums[1] = 198;
		Global.shadowSums[2] = 238;
		Global.shadowSums[3] = 133;
		Global.shadowUpgrades[2] = Random Value In Array(Global.shadowSums);
		"Shadow Effects [0]"
		Create Effect(All Players(Team 1), Sphere, Color(Black), Global.shadowVectors[0], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create In-World Text(All Players(All Teams), Global.shadowCopy[0], Global.shadowVectors[0], 3, Clip Against Surfaces,
			Visible To and String, Color(Gray), Default Visibility);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		"Shadow Effects [1]"
		Create Effect(All Players(Team 1), Sphere, Color(Black), Global.shadowVectors[1], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create In-World Text(All Players(All Teams), Global.shadowCopy[1], Global.shadowVectors[1], 3, Clip Against Surfaces,
			Visible To and String, Color(Gray), Default Visibility);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		"Shadow Effects [2]"
		Create Effect(All Players(Team 1), Sphere, Color(Black), Global.shadowVectors[2], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create In-World Text(All Players(All Teams), Global.shadowCopy[2], Global.shadowVectors[2], 3, Clip Against Surfaces,
			Visible To and String, Color(Gray), Default Visibility);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		"Shadow Effects [3]"
		Create Effect(All Players(Team 1), Sphere, Color(White), Global.shadowVectors[3], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create In-World Text(All Players(Team 1), Global.shadowUpgrades[2] == 103 ? Custom String("•°:••") : (
			Global.shadowUpgrades[2] == 198 ? Custom String(":••°°") : (Global.shadowUpgrades[2] == 238 ? Custom String(": : :•°")
			: Custom String("••: :•"))), Global.shadowVectors[3], 3, Clip Against Surfaces, Visible To and String, Color(Black),
			Default Visibility);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		"Shadow Effects [4]"
		Create Effect(All Players(Team 1), Ring, Color(Black), Global.shadowVectors[4], 3, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create In-World Text(All Players(All Teams), Custom String("I"), Global.shadowVectors[4], 3, Clip Against Surfaces, Visible To,
			Color(Gray), Default Visibility);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		"Shadow Effects [5]"
		Create Effect(All Players(Team 1), Ring, Color(Black), Global.shadowVectors[5], 3, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create In-World Text(All Players(All Teams), Custom String("L"), Global.shadowVectors[5], 3, Clip Against Surfaces, Visible To,
			Color(Gray), Default Visibility);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		"Shadow Effects [6]"
		Create Effect(All Players(Team 1), Ring, Color(Black), Global.shadowVectors[6], 3, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create In-World Text(All Players(All Teams), Custom String("b"), Global.shadowVectors[6], 3, Clip Against Surfaces, Visible To,
			Color(Gray), Default Visibility);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		"Upgrade Sphere"
		Create Effect(All Players(Team 1), Sphere, Color(Black),
			Global.shadowUpgrades[0] == True ? Global.PerkVectors[19] : Global.MagicVectors[0], Global.shadowUpgrades[5],
			Visible To Position and Radius);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Sparkles, Color(Black),
			Global.shadowUpgrades[0] == True ? Global.PerkVectors[19] : Global.MagicVectors[0], Global.shadowUpgrades[5],
			Visible To Position and Radius);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Shadow Altar"
		Create In-World Text(All Players(Team 1), Custom String("Altar of Erebus"), Global.PerkVectors[19], 1, Clip Against Surfaces,
			Visible To, Color(Black), Default Visibility);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		Create Effect(All Players(Team 1), Ring, Color(Black), Global.PerkVectors[19], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Sparkles, Color(Black), Global.PerkVectors[19], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Orb, Color(Black), Global.ShadowParts == 6 ? Global.PerkVectors[19] : (
			Global.ShadowVectors[44] == 2 && Global.ShadowVectors[51] == True ? Global.PerkVectors[19] : Global.MagicVectors[0]), 2,
			Visible To Position and Radius);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Venom Mechanics"
		Global.venomUpgrades = Empty Array;
		Global.venomUpgrades[0] = False;
		Global.venomUpgrades[5] = 31;
		"Upgrade Sphere"
		Create Effect(All Players(Team 1), Sphere, Color(Green),
			Global.venomUpgrades[0] == True ? Global.PerkVectors[21] : Global.MagicVectors[0], Global.venomUpgrades[5],
			Visible To Position and Radius);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Sparkles, Color(Green),
			Global.venomUpgrades[0] == True ? Global.PerkVectors[21] : Global.MagicVectors[0], Global.venomUpgrades[5],
			Visible To Position and Radius);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Venom Altar"
		Create In-World Text(All Players(Team 1), Custom String("Altar of Manasa"), Global.PerkVectors[21], 1, Clip Against Surfaces,
			Visible To, Color(Green), Default Visibility);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Text ID);
		Create Effect(All Players(Team 1), Ring, Color(Green), Global.PerkVectors[21], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Sparkles, Color(Green), Global.PerkVectors[21], 2, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(Team 1), Orb, Color(Green), Global.VenomParts == 6 ? Global.PerkVectors[21] : (
			Global.ShadowVectors[44] == 2 && Global.ShadowVectors[52] == True ? Global.PerkVectors[21] : Global.MagicVectors[0]), 2,
			Visible To Position and Radius);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
	}
}

rule("Player Joined")
{
	event
	{
		Player Joined Match;
		Team 1;
		All;
	}

	conditions
	{
		Is Dummy Bot(Event Player) == False;
	}

	actions
	{
		If(Number Of Players(Team 1) > 3);
			While(Number Of Players(Team 2) > 10);
				Destroy Dummy Bot(Team 2, Number Of Players(Team 2) - 1);
				Wait(0.500, Ignore Condition);
			End;
		End;
		Wait Until(Has Spawned(Event Player) == True, 99999);
		Wait Until(Global.Round >= 1, 60);
		Set Status(Event Player, Null, Invincible, 30);
		Wait(1, Ignore Condition);
		Create HUD Text(Event Player, String("{0}: {1}", Custom String("Stored Weapon"), Hero Icon String(Event Player.Heroes[0])), Null,
			String("{0} {1} {2}", Custom String("Press"), Input Binding String(Button(Ultimate)), Custom String("to switch")), Left, 5,
			Color(Yellow), Color(Yellow), Color(Yellow), Visible To and String, Visible Always);
		Create HUD Text(Event Player, String("{0}: {1}", Custom String("Sprint"), Event Player.Sprint), String("{0} {1}", Custom String(
			"Hold"), Input Binding String(Button(Interact))), Null, Left, 6, Color(Yellow), Color(Yellow), Color(Black),
			Visible To and String, Visible Always);
		Create HUD Text(Event Player, String("{0}: {1}", Custom String("Perk Slots Left"), Event Player.PerkLimit), Null, Null, Right, 0,
			Color(Yellow), Color(Yellow), Color(Yellow), Visible To and String, Visible Always);
		Event Player.GhostlyCD = False;
		Event Player.DamageRank = 0;
		Event Player.Vampiric = Empty Array;
		Event Player.Vampiric[0] = 0;
		Event Player.Vampiric[1] = False;
		Event Player.Vampiric[2] = 0;
		Event Player.Vampiric[3] = 0;
		Event Player.Vampiric[4] = 0;
		Event Player.Juggernog = 0;
		Event Player.WidowsWine = 0;
		Event Player.QuickRevive = 0;
		Event Player.EPop = 0;
		Event Player.SpeedCola = 0;
		Event Player.StaminaUp = 0;
		Event Player.DoubleTap = 0;
		Event Player.Deadshot = 0;
		Event Player.ElectricCherry = 0;
		Event Player.Ghostly = 0;
		Event Player.PHD = 0;
		Event Player.Tombstone = 0;
		Event Player.MuleKick = 0;
		Event Player.ScavScotch = 0;
		Event Player.Cycle = 0;
		Event Player.Sprint = 100;
		Event Player.Points = 500 * Global.Round;
		Event Player.HeroLimit = 1;
		Event Player.DTON = 0;
		Event Player.PerkLimit = 4;
		Event Player.MaxAmmo = False;
		Event Player.Packing = False;
		Event Player.Choosing = False;
		Event Player.Switching = 1;
		Event Player.Ready = False;
		Event Player.Heroes = Empty Array;
		Event Player.Storage = Empty Array;
		Event Player.Dead = 0;
		Event Player.Routing = False;
		Event Player.Galva = False;
		Event Player.IceEssence = 0;
		Event Player.FireEssence = 0;
		Event Player.WindEssence = 0;
		Event Player.LightningEssence = 0;
		Event Player.ShadowEssence = 0;
		Event Player.VenomEssence = 0;
		Event Player.Charges = 0;
		Event Player.Downs = False;
		Event Player.Kills = 0;
		Event Player.UCK = 0;
		Event Player.Pack = Global.Round >= 15 ? 3 : 1;
		Event Player.Repack = Global.Round >= 35 ? 5 : (Global.Round >= 30 ? 4 : (Global.Round >= 25 ? 3 : (Global.Round >= 20 ? 2 : 1)));
		Start Forcing Player To Be Hero(Event Player, Global.Round >= 60 ? Hero(Genji) : (Global.Round >= 50 ? Hero(Junker Queen) : (
			Global.Round >= 35 ? Hero(Lifeweaver) : (Global.Round >= 20 ? Hero(Ana) : (Global.Round >= 10 ? Hero(Soldier: 76) : (
			Global.Round >= 5 ? Hero(Ramattra) : Hero(Cassidy)))))));
		Set Melee Enabled(Event Player, False);
		disabled Disable Built-In Game Mode Respawning(Event Player);
		Teleport(Event Player, Global.ShadowVectors[53]);
		Disable Game Mode HUD(Event Player);
		Set Status(Event Player, Null, Unkillable, 9999);
		Call Subroutine(HeroSwitch);
		Disable Messages(Event Player);
		Disable Game Mode In-World UI(Event Player);
		Clear Status(Event Player, Knocked Down);
		Set Max Health(Event Player, 500);
		Heal(Event Player, Null, 100000);
		Set Respawn Max Time(Event Player, 60);
		Enable Built-In Game Mode Respawning(Event Player);
		Event Player.MaxAmmo = True;
		Start Damage Modification(All Players(Team 2), Event Player, Event Player.DamageRank + 100, Receivers Damagers and Damage Percent);
		Event Player.Slabs[0] = False;
		disabled Create HUD Text(Event Player, Custom String("Ammo: {0} / {1}", Event Player.Ammo, Event Player.AV), Null, Null, Left, 4,
			Event Player.Pack == 3 ? Color(Red) : Color(Yellow), Color(White), Color(White), Visible To String and Color,
			Default Visibility);
	}
}

disabled rule("Player Left")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global.Players != Number Of Players(Team 1);
		Global.AutoDebug == False;
	}

	actions
	{
		Wait(5, Abort When False);
		Global.AutoDebug = True;
		Small Message(All Players(All Teams), Custom String("Auto Debug"));
		Set Slow Motion(100);
		Wait Until(Global.BoxOn == False, 10);
		Global.BoxOn = False;
		Wait Until(Global.Purging == False, 30);
		Global.Purging = False;
		If(Global.Round > 10);
			While(Number Of Players(Team 2) < (Number Of Players(Team 1) < 3 ? 18 : (Number Of Players(Team 1) < 5 ? 14 : 10)));
				Create Dummy Bot(Hero(Reaper), Team 2, -1, Random Value In Array(Global.SpawnPoints), Vector(0, 0, 0));
				Wait(0.100, Ignore Condition);
			End;
			Call Subroutine(EquationSet);
		End;
		Call Subroutine(SpawnResets);
		Call Subroutine(EssenceReset);
		Global.Rolling = False;
		Global.Insta = 0;
		Global.Double = 0;
		Global.Max = 0;
		Global.Nuke = 0;
		Global.Dub = 1;
		Global.Charging = False;
		Start Scaling Player(Players On Hero(Hero(Pharah), Team 2), 0.250, False);
		Start Scaling Player(Players On Hero(Hero(Reinhardt), Team 2), 1.300, False);
		Start Scaling Player(Players On Hero(Hero(Roadhog), Team 2), 1.150, False);
		Start Scaling Player(Players On Hero(Hero(Ashe), Team 2), 1.050, False);
		Start Scaling Player(Players On Hero(Hero(Hanzo), Team 2), 0.500, False);
		Start Scaling Player(Players On Hero(Hero(Reaper), Team 2), 1, False);
		Wait(0.100, Ignore Condition);
		Global.Players = Number Of Players(Team 1);
		Global.AutoDebug = False;
		Wait Until(Global.Changing == False, 10);
		Global.Changing = False;
	}
}

disabled rule("Progression Damage")
{
	event
	{
		Player Dealt Damage;
		Team 1;
		All;
	}

	conditions
	{
		Attacker != Victim;
		Event Player.DTON <= 0;
		Is Alive(Victim) == True;
	}

	actions
	{
		Wait(0.100, Abort When False);
		"Variables"
		Event Player.Points += 10 * Global.Dub + 10 * Event Player.DoubleTap;
		Abort If(Is Dead(Victim) == True);
		"Vampiric Leech"
		Heal(Event Player, Null, 50 * Event Player.Vampiric[0]);
		"Instakill"
		If(Global.Insta == 1);
			If(Hero Of(Victim) == Hero(Reaper) && Victim.WonderWeapons == 0);
				Kill(Victim, Event Player);
				Victim.WonderWeapons = 1;
				Abort;
			End;
		End;
		"Galvaknuckles"
		If(Is Meleeing(Event Player) == True);
			If(Event Player.Galva == True && Victim.WonderWeapons == 0);
				Play Effect(All Players(Team 1), Winston Jump Pack Landing Effect, Color(Team 2), Position Of(Victim), 7);
				Play Effect(All Players(All Teams), Pharah Concussive Blast Sound, Color(Team 2), Position Of(Event Player), 200);
				Players Within Radius(Victim, 1.500, Team 2, Surfaces).WonderWeapons = 1;
				Set Status(Players Within Radius(Victim, 1.500, Team 2, Surfaces), Event Player, Knocked Down, 1);
				Apply Impulse(Players Within Radius(Victim, 1.500, Team 2, Surfaces), Up, 5, To World, Cancel Contrary Motion);
				Apply Impulse(Players Within Radius(Victim, 1.500, Team 2, Surfaces), Direction Towards(Event Player, Victim), 25, To World,
					Cancel Contrary Motion);
				Damage(Players Within Radius(Victim, 1.500, Team 2, Surfaces), Event Player, 1500 / Event Player.DamageRank);
				Abort;
			End;
		End;
		"Failsafes"
		Event Player.DTON += 1;
		"Effects"
		Call Subroutine(WeaponEffects);
		"Elemental Pop Mechanics"
		If(Event Player.EPop >= 1);
			Call Subroutine(ElementalPop);
		End;
		"Deadshot Mechanic"
		If(Event Player.Deadshot >= 1);
			If(Event Was Critical Hit == False && Is Alive(Victim) == True);
				If(Event Player.Toggle != 1);
					Set Facing(Event Player, Direction Towards(Eye Position(Event Player), Eye Position(Victim)), To World);
				End;
			End;
		End;
		Event Player.DTON -= 1;
	}
}

disabled rule("Progression Kills")
{
	event
	{
		Player Dealt Final Blow;
		Team 1;
		All;
	}

	conditions
	{
		Is Alive(Event Player) == True;
	}

	actions
	{
		Event Player.VictimVector = Position Of(Victim);
		Wait(0.100, Ignore Condition);
		"Points"
		If(Event Was Critical Hit == True);
			Event Player.Points += 110 * Global.Dub + 20 * Event Player.Deadshot;
		Else;
			Event Player.Points += 60 * Global.Dub;
		End;
		"Vampiric Leech"
		Heal(Event Player, Null, 400 * Event Player.Vampiric[0]);
		"Effects"
		Skip If(Is Meleeing(Event Player) == True, 1);
		Call Subroutine(WeaponEffects);
		"Steps"
		Skip If(Hero Of(Event Player) != Hero(Hanzo), 1);
		Call Subroutine(BowStepsKills);
		"Ult Charge"
		Skip If(Event Player.UCK >= 100, 1);
		Event Player.UCK += 1 + Event Player.SpeedCola;
		Set Ultimate Charge(Event Player, Event Player.UCK <= 100 ? Event Player.UCK : 100);
		"Scavenger's Scotch Mechanic"
		If(Event Player.ScavScotch >= 1);
			If(Random Real(0, 20) <= 2);
				Event Player.Points += 25;
				Event Player.Ammo += 5;
			End;
		End;
		"Soul Box"
		Skip If(Global.ShadowVectors[12] == True, 1);
		Call Subroutine(SoulBox);
		"Tablets"
		Skip If(Event Player.Slabs[1] == 4, 1);
		Call Subroutine(TabletSouls);
		"Power Ups"
		Abort If(Global.Rolling == True);
		If(Global.PowerUps > 0);
			Global.ShadowVectors[42] = Position Of(Victim);
			Global.ShadowVectors[40] = Random Value In Array(Global.Box);
			Global.ShadowVectors[41] = Index Of Array Value(Global.Box, Global.ShadowVectors[40]);
			If(Global.ShadowVectors[41] < 5);
				Global.PositionDrops = Global.ShadowVectors[42];
				Global.Rolling = True;
				Global.PowerUps -= 1;
				If(Global.ShadowVectors[41] == 4);
					Global.Max = 2;
					Abort;
				End;
				If(Global.ShadowVectors[41] == 3);
					Global.Insta = 2;
					Abort;
				End;
				If(Global.ShadowVectors[41] == 2);
					Global.Nuke = 2;
					Abort;
				End;
				If(Global.ShadowVectors[41] == 1);
					Global.Double = 2;
					Abort;
				End;
				If(Global.ShadowVectors[41] == 0);
					Global.Max = 2;
					Abort;
				End;
			End;
		End;
	}
}

disabled rule("Progression Deaths")
{
	event
	{
		Player Died;
		Team 2;
		All;
	}

	conditions
	{
		Event Was Environment == False;
		Global.Changing == False;
	}

	actions
	{
		"Effect Resets"
		Event Player.Lightning = 0;
		Event Player.Speed = 200;
		Event Player.Fire = 0;
		Event Player.Ice = 0;
		Event Player.Venom = 0;
		"Kill Resets"
		Clear Status(Event Player, Knocked Down);
		Clear Status(Event Player, Asleep);
		Clear Status(Event Player, Rooted);
		Clear Status(Event Player, Stunned);
		Clear Status(Event Player, Hacked);
		Stop Facing(Event Player);
		Stop Forcing Throttle(Event Player);
		Set Gravity(Event Player, 100);
		Stop All Damage Over Time(Event Player);
		Set Move Speed(Event Player, Global.ShadowVectors[26]);
		"Special Zombie Kill"
		If(Hero Of(Event Player) != Hero(Reaper));
			Skip If(Hero Of(Event Player) != Hero(Moira), 1);
			Call Subroutine(MoiraMelee);
			Attacker.Points += 500 * Global.Dub;
			Stop Forcing Player To Be Hero(Event Player);
			Stop Forcing Dummy Bot Name(Event Player);
			Stop Holding Button(Event Player, Button(Secondary Fire));
			Stop Holding Button(Event Player, Button(Primary Fire));
			Stop Holding Button(Event Player, Button(Jump));
			Stop Scaling Player(Event Player);
			Start Forcing Dummy Bot Name(Players On Hero(Hero(Reaper), Team 2), Custom String("Zombie"));
		End;
		"General Progression"
		If(Global.Kills > 1);
			Global.Kills -= 1;
			Wait(Global.ShadowVectors[30], Ignore Condition);
			Abort If(Global.Kills <= Number Of Living Players(Team 2));
			Respawn(Event Player);
		"Round Change"
		Else If(Global.Kills <= 1);
			Global.Changing = True;
			Global.Kills -= 1;
			Kill(Players On Hero(Hero(Reaper), Team 2), Null);
			All Players(Team 1).Points += 250 * Global.Dub;
			Global.Round += 1;
			Wait Until(Global.Round == Global.Init + 1, 1);
			Wait(1, Ignore Condition);
			Big Message(All Players(All Teams), String("{0} {1}", Custom String("Round"), Global.Round));
			If(Global.Lockdown == True);
				Teleport(All Players(Team 1), Vector(162.438, 12.424, -43.688));
			End;
			Global.Lockdown = False;
			Respawn(All Dead Players(Team 1));
			Clear Status(All Living Players(Team 1), Knocked Down);
			Clear Status(All Living Players(Team 1), Phased Out);
			Set Status(All Players(Team 1), Null, Unkillable, 9999);
			Heal(All Players(Team 1), Null, 9999);
			Wait(5, Ignore Condition);
			"Enemy Statistics"
			Global.Kills = (4 + Number Of Players(Team 1)) * Global.Round;
			Create Dummy Bot(Hero(Reaper), Team 2, -1, Random Value In Array(Global.SpawnPoints), Vector(0, 0, 0));
			Call Subroutine(EquationSet);
			Wait(1, Ignore Condition);
			"Special Enemy Spawns"
			If(Global.Round / 3 == Round To Integer(Global.Round / 3, Down));
				If(Global.Round >= 6);
					Start Forcing Player To Be Hero(Players In Slot(17, Team 2), Hero(Pharah));
					Start Forcing Player To Be Hero(Players In Slot(1, Team 2), Hero(Pharah));
					Start Forcing Dummy Bot Name(Players On Hero(Hero(Pharah), Team 2), Custom String("Bug"));
				End;
				If(Global.Round >= 21);
					Start Forcing Player To Be Hero(Players In Slot(12, Team 2), Hero(Pharah));
					Start Forcing Player To Be Hero(Players In Slot(13, Team 2), Hero(Pharah));
					Start Forcing Player To Be Hero(Players In Slot(14, Team 2), Hero(Pharah));
					Start Forcing Dummy Bot Name(Players On Hero(Hero(Pharah), Team 2), Custom String("Bug"));
				End;
				If(Global.Round >= 21);
					Start Forcing Player To Be Hero(Players In Slot(8, Team 2), Hero(Reinhardt));
					Start Forcing Player To Be Hero(Players In Slot(9, Team 2), Hero(Reinhardt));
					Start Forcing Dummy Bot Name(Players On Hero(Hero(Reinhardt), Team 2), Custom String("Megaton"));
				End;
			End;
			If(Global.Round / 4 == Round To Integer(Global.Round / 4, Down));
				If(Global.Round >= 8);
					Start Forcing Player To Be Hero(Players In Slot(2, Team 2), Hero(Roadhog));
					Start Forcing Dummy Bot Name(Players On Hero(Hero(Roadhog), Team 2), Custom String("Panzer"));
				End;
				If(Global.Round >= 20);
					Start Forcing Player To Be Hero(Players In Slot(10, Team 2), Hero(Roadhog));
					Start Forcing Player To Be Hero(Players In Slot(11, Team 2), Hero(Roadhog));
					Start Forcing Dummy Bot Name(Players On Hero(Hero(Roadhog), Team 2), Custom String("Panzer"));
				End;
			End;
			If(Global.Round / 7 == Round To Integer(Global.Round / 7, Down));
				If(Global.Round >= 28);
					Start Forcing Player To Be Hero(Players In Slot(0, Team 2), Hero(Sigma));
					Start Forcing Dummy Bot Name(Players On Hero(Hero(Sigma), Team 2), Custom String("Arbiter"));
				End;
			End;
			If(Global.Round / 6 == Round To Integer(Global.Round / 6, Down));
				If(Global.Round >= 30);
					Start Forcing Player To Be Hero(Players In Slot(3, Team 2), Hero(Ashe));
					Start Forcing Player To Be Hero(Players In Slot(4, Team 2), Hero(Ashe));
					Start Forcing Dummy Bot Name(Players On Hero(Hero(Ashe), Team 2), Custom String("Huntress"));
				End;
			End;
			If(Global.Round / 5 == Round To Integer(Global.Round / 5, Down));
				If(Global.Round >= 15);
					Start Forcing Player To Be Hero(Players In Slot(5, Team 2), Hero(Brigitte));
					Start Forcing Dummy Bot Name(Players On Hero(Hero(Brigitte), Team 2), Custom String("Witch"));
				End;
				If(Global.Round >= 25);
					Start Forcing Player To Be Hero(Players In Slot(6, Team 2), Hero(Hanzo));
					Start Forcing Player To Be Hero(Players In Slot(7, Team 2), Hero(Hanzo));
					Start Forcing Player To Be Hero(Players In Slot(15, Team 2), Hero(Hanzo));
					Start Forcing Player To Be Hero(Players In Slot(16, Team 2), Hero(Hanzo));
					Start Forcing Dummy Bot Name(Players On Hero(Hero(Hanzo), Team 2), Custom String("Bomber"));
				End;
			End;
			"Lockdowns"
			If(Global.Round / 8 == Round To Integer(Global.Round / 8, Down));
				Big Message(All Players(All Teams), Custom String("Prepare for Lockdown"));
				All Players(Team 1).MaxAmmo = True;
				Wait(5, Ignore Condition);
				Global.Lockdown = True;
				Global.LoopControl = 0;
				Teleport(All Players(Team 1), Random Value In Array(Global.LockdownArray));
				While(Global.LoopControl < Number Of Players(Team 1));
					Teleport(Players In Slot(Global.LoopControl, Team 1), Random Value In Array(Global.LockdownArray));
					Global.LoopControl += 1;
				End;
				Global.LoopControl = 0;
				While(Global.LoopControl < Number Of Players(Team 2));
					Teleport(Players In Slot(Global.LoopControl, Team 2), Random Value In Array(Global.LockdownArray));
					Global.LoopControl += 1;
				End;
			End;
			"New Round Start Initiations"
			Global.Purging = False;
			Global.Init = Global.Round;
			Global.Changing = False;
			All Players(Team 1).Grenade = 4;
			Global.PowerUps = 2;
			Wait(1, Ignore Condition);
			Call Subroutine(SpawnResets);
			Start Scaling Player(Players On Hero(Hero(Pharah), Team 2), 0.250, False);
			Start Scaling Player(Players On Hero(Hero(Reinhardt), Team 2), 1.300, False);
			Start Scaling Player(Players On Hero(Hero(Roadhog), Team 2), 1.150, False);
			Start Scaling Player(Players On Hero(Hero(Ashe), Team 2), 1.050, False);
			Start Scaling Player(Players On Hero(Hero(Hanzo), Team 2), 0.500, False);
			Start Scaling Player(Players On Hero(Hero(Reaper), Team 2), 1, False);
			Skip If(Global.ShadowVectors[44] != 2, 1);
			Call Subroutine(BowPlaceResets);
			Abort If(Global.ShadowVectors[44] != 1);
			Skip If(Global.WindParts != 3, 2);
			Global.windUpgrades[5] = 16;
			Global.windUpgrades[2] = Random Value In Array(Global.windValues);
			If(Global.VenomParts == 3);
				If(Global.ShadowVectors[13] >= 120);
					Global.VenomParts = 4;
					Global.ShadowVectors[45] += 1;
					Big Message(All Players(Team 1), Custom String("Manasa has graciously accepted the collected souls"));
				End;
			Else If(Global.VenomParts == 4);
				If(Is True For Any(All Players(Team 1), Current Array Element.Slabs[1] == 4));
					Global.VenomParts = 5;
					Global.ShadowVectors[45] += 1;
					Big Message(All Players(Team 1), Custom String("Manasa is pleased with the tablets purity"));
				End;
			End;
		End;
	}
}

disabled rule("Time Set")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Match Time < 60;
	}

	actions
	{
		If(Is Assembling Heroes == False);
			Set Match Time(3599);
		Else If(Is Assembling Heroes == True);
			Set Match Time(3);
		End;
	}
}

disabled rule("Defeat")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Is True For All(All Players(Team 1), Is Dead(Current Array Element) || Current Array Element.Downs) == True;
		Global.Round >= 1;
	}

	actions
	{
		Wait(4, Abort When False);
		Clear Status(All Players(Team 1), Knocked Down);
		Big Message(All Players(All Teams), String("{0} {1} {2}", String("Survived"), Global.Round, String("Rounds")));
		Declare Team Victory(Team 2);
		Wait(36, Ignore Condition);
		Restart Match;
	}
}

disabled rule("=======Enemy AI=======")
{
	event
	{
		Ongoing - Global;
	}
}

rule("Spawn Points")
{
	event
	{
		Subroutine;
		SpawnResets;
	}

	actions
	{
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-93.817, -2.976, -76.581));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-93.817, -2.976, -76.581));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-98.657, -2.739, -68.798));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-98.657, -2.739, -68.798));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-98.657, -2.739, -68.798));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-100.035, -2.733, -76.147));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-100.035, -2.733, -76.147));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-100.035, -2.733, -76.147));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-100.035, -2.733, -76.147));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-94.310, -2.758, -73.227));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-94.310, -2.758, -73.227));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-89.435, -2.724, -84.523));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-81.135, 6.005, -41.418));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-83.197, 1.732, -46.890));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-92.440, 8.913, -33.398));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-101.648, 0.929, -33.269));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-89.241, -0.071, -59.422));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-89.180, -0.031, -47.594));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-105.470, -2.071, -35.607));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-106.119, -2.071, -55.460));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-109.003, -2.733, -65.423));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-109.003, -2.733, -65.423));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-113.978, -2.733, -33.636));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-113.978, -2.733, -33.636));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-71.792, 1.754, -41.689));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-54.617, 2.275, -47.312));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-78.251, 5.389, -30.976));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-77.699, 5.925, -42.522));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-49.412, 3.425, -51.001));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-71.792, 1.754, -41.689));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-54.617, 2.275, -47.312));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-78.251, 5.389, -30.976));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-77.699, 5.925, -42.522));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-49.412, 3.425, -51.001));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-68.190, 1.759, -42.377));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-68.190, 1.759, -42.377));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-67.076, 1.307, -30.184));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-56.141, 1.366, -21.751));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-45.154, 1.447, -21.754));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-46.966, 10.740, -36.881));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-48.961, 1.516, -41.903));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-36.427, 3.424, -49.467));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-67.076, 1.307, -30.184));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-56.141, 1.366, -21.751));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-45.154, 1.447, -21.754));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-46.966, 10.740, -36.881));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-48.961, 1.516, -41.903));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-36.427, 3.424, -49.467));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-84.210, 2.178, -28.810));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-89.537, 8.278, -5.424));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-94.224, 9.297, -30.043));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-70.909, 1.168, -15.510));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-58.385, 6.445, -13.715));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-67.782, 6.370, -14.879));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-75.683, 4.102, -4.754));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-93.298, 4.665, 12.545));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-80.007, 1.584, 8.547));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-84.632, 2.997, -11.217));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-60.044, 4.352, -3.752));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-45.163, 4.346, -10.583));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-106.640, 2.496, -23.822));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-104.500, 3.443, -6.800));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-102.824, 2.496, 3.071));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-109.596, 3.496, 11.273));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-103.667, 8.354, -6.039));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-106.640, 2.496, -23.822));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-104.500, 3.443, -6.800));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-102.824, 2.496, 3.071));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-109.596, 3.496, 11.273));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-103.667, 8.354, -6.039));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-106.640, 2.496, -23.822));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-104.500, 3.443, -6.800));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-36.137, 10.425, -12.682));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-59.413, 6.382, -16.904));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-34.206, 10.425, -34.067));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-36.137, 10.425, -12.682));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-59.413, 6.382, -16.904));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-34.206, 10.425, -34.067));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-36.137, 10.425, -12.682));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-59.413, 6.382, -16.904));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-34.206, 10.425, -34.067));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-36.137, 10.425, -12.682));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-59.413, 6.382, -16.904));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-34.206, 10.425, -34.067));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-2.983, 15.914, -23.900));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-30.116, 3.918, -29.211));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-3.680, 6.091, -20.547));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-9.864, 1.342, -26.854));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(6.629, 7.726, -35.371));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-25.681, 13.560, -50.466));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(5.526, 7.810, -26.273));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-4.276, 6.081, -26.379));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-11.354, 7.660, -17.283));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-10.105, 7.550, -40.007));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-31.384, 10.614, -33.282));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-28.590, 10.199, -17.656));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-34.868, 40.613, -77.467));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-20.566, 40.613, -74.632));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-7.879, 40.613, -72.182));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-5.995, 40.613, -90.035));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-29.738, 40.613, -92.300));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-34.765, 40.613, -61.969));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-34.868, 40.613, -77.467));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-20.566, 40.613, -74.632));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-7.879, 40.613, -72.182));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-5.995, 40.613, -90.035));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-29.738, 40.613, -92.300));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-34.765, 40.613, -61.969));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-166.262, 1.496, 5.591));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-166.262, 1.496, 5.591));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-164.564, 1.496, 12.354));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-164.623, 1.496, 31.300));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-164.623, 1.496, 31.300));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-164.623, 1.496, 31.300));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-162.890, 1.496, 40.127));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-162.890, 1.496, 40.127));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-161.534, 1.496, 48.650));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-177.826, 11, 37.840));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-179.164, 11, 37.343));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-177.826, 11, 37.840));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-133.065, 9.737, 13.240));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-137.616, 8.496, 31.256));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-130.729, 1.496, 45.418));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-131.743, 2.457, 28.560));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-131.989, 0.519, 14.964));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-145.816, 2.536, 34.687));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-157.069, -1.506, 21.994));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-114.244, 0.516, 15.808));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-115.925, 7.522, 6.296));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-131.089, 2.425, -4.613));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-149.086, 3.538, 2.226));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-148.427, 9, 23.906));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-46.492, 1.307, 25.662));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-46.492, 1.307, 25.662));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-46.492, 9, 25.662));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-53.512, 1.353, 24.411));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-53.512, 1.353, 24.411));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-53.512, 1.353, 24.411));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-53.512, 1.353, 24.411));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-39.050, 1.491, 24.737));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-39.050, 1.491, 24.737));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-39.050, 1.491, 24.737));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-42.115, 1.405, 29.518));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-42.115, 1.405, 29.518));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(15.230, 7.460, 15.444));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-9.472, 18.237, 5.643));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-4.438, 15.324, 17.597));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-26.526, 7.588, 1.365));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-2.244, 6.712, -0.722));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(1.723, 8.198, 0.021));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(25.169, 5.425, -4.170));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-11.372, 1.689, 6.176));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-24.870, 4.747, 19.394));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-24.152, 1.496, 3.789));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(7.354, 4.123, 8.205));
		Modify Global Variable(SpawnPoints, Append To Array, Vector(-16.442, 7.425, -1.565));
	}
}

disabled rule("Zombie Attack")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		Reaper;
	}

	conditions
	{
		Distance Between(Event Player, Closest Player To(Event Player, Team 1)) < 2;
		Is Alive(Event Player) == True;
	}

	actions
	{
		If(Ultimate Charge Percent(Event Player) < 100);
			Wait(1, Abort When False);
			Press Button(Event Player, Button(Primary Fire));
			Loop If Condition Is True;
		Else;
			Press Button(Event Player, Button(Ultimate));
			Loop If Condition Is True;
		End;
	}
}

rule("Zombie Damage")
{
	event
	{
		Player Dealt Damage;
		Team 2;
		Reaper;
	}

	conditions
	{
		Distance Between(Victim, Attacker) < 2;
	}

	actions
	{
		Damage(Victim, Null, Max Health(Victim) * (0.250 / (1 + Victim.Juggernog)) - Event Damage);
		Wait(2, Ignore Condition);
	}
}

rule("Enemy Movement")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		All;
	}

	conditions
	{
		Is Alive(Event Player) == True;
	}

	actions
	{
		Stop Facing(Event Player);
		Stop Forcing Throttle(Event Player);
		Wait(0.100, Ignore Condition);
		Start Forcing Throttle(Event Player, 1, 1, 0, 1, 0, 1);
		Start Facing(Event Player, Direction Towards(Eye Position(Event Player), Eye Position(Sorted Array(Filtered Array(
			All Living Players(Team 1), Current Array Element.Downs == False), Distance Between(Event Player, Current Array Element))[0])),
			480, To World, Direction and Turn Rate);
		Wait(5, Ignore Condition);
		If(Speed Of(Event Player) < 2);
			Apply Impulse(Event Player, Up, 10, To Player, Cancel Contrary Motion);
			Apply Impulse(Event Player, Forward, 5, To Player, Cancel Contrary Motion);
		End;
		Loop If Condition Is True;
	}
}

rule("Enemies Stuck")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		All;
	}

	conditions
	{
		Is Alive(Event Player) == True;
		Is True For All(Filtered Array(All Living Players(Team 1), Has Status(Current Array Element, Knocked Down) == False),
			Is In Line of Sight(Event Player, Current Array Element, Barriers Do Not Block LOS)) == False;
	}

	actions
	{
		Wait(2, Abort When False);
		Teleport(Event Player, Random Value In Array(Filtered Array(Global.SpawnPoints, Is In Line of Sight(Current Array Element,
			Closest Player To(Current Array Element, Team 1), Barriers Do Not Block LOS) == True)));
		Loop If Condition Is True;
	}
}

disabled rule("Enemies Under Player")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		All;
	}

	conditions
	{
		Vertical Facing Angle Of(Event Player) < -70;
		Is Alive(Event Player) == True;
		Has Status(Event Player, Stunned) == False;
	}

	actions
	{
		Apply Impulse(Event Player, World Vector Of(Vector(Random Integer(-10, 10), 0, Random Integer(-10, 10)), Event Player, Rotation),
			25, To World, Cancel Contrary Motion);
		Wait(0.500, Ignore Condition);
		Apply Impulse(Event Player, Up, 25, To World, Cancel Contrary Motion);
	}
}

disabled rule("Special Enemy Attacks")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		All;
	}

	conditions
	{
		Hero Of(Event Player) != Hero(Reaper);
		Is Alive(Event Player) == True;
	}

	actions
	{
		Wait(1, Abort When False);
		If(Hero Of(Event Player) == Hero(Moira) || Hero Of(Event Player) == Hero(D.Va));
			Skip If(Hero Of(Event Player) == Hero(Moira), 2);
			Start Holding Button(Event Player, Button(Primary Fire));
			Wait(2, Ignore Condition);
			Start Holding Button(Event Player, Button(Secondary Fire));
			Wait(4, Ignore Condition);
			Stop Holding Button(Event Player, Button(Secondary Fire));
			Press Button(Event Player, Button(Ability 2));
			Wait(0.250, Ignore Condition);
			Press Button(Event Player, Button(Secondary Fire));
			Wait(0.100, Ignore Condition);
			Press Button(Event Player, Button(Ability 1));
			While(Ultimate Charge Percent(Event Player) == 100);
				Wait(0.500, Ignore Condition);
				Press Button(Event Player, Button(Ultimate));
			End;
			Set Gravity(Event Player, 10);
			Press Button(Event Player, Button(Jump));
			Loop If Condition Is True;
			Abort;
		End;
		Stop Holding Button(Event Player, Button(Primary Fire));
		Stop Holding Button(Event Player, Button(Secondary Fire));
		If(Hero Of(Event Player) == Hero(Pharah));
			Start Holding Button(Event Player, Button(Primary Fire));
			Start Holding Button(Event Player, Button(Jump));
		Else If(Hero Of(Event Player) == Hero(Brigitte));
			Set Status(Players Within Radius(Event Player, 5, Team 1, Surfaces), Null, Hacked, 5);
			Start Holding Button(Event Player, Button(Secondary Fire));
			Wait(3, Ignore Condition);
			Stop Holding Button(Event Player, Button(Secondary Fire));
			Wait(0.500, Abort When False);
			Start Holding Button(Event Player, Button(Primary Fire));
			Wait(10, Ignore Condition);
			Set Ultimate Charge(All Players(Team 2), 100);
			Wait(1, Ignore Condition);
			Press Button(All Players(Team 2), Button(Ultimate));
			Loop If Condition Is True;
		Else;
			If(Ultimate Charge Percent(Event Player) < 100);
				If(Hero Of(Event Player) == Hero(Ashe));
					Start Holding Button(Event Player, Button(Secondary Fire));
					Wait(0.250, Abort When False);
					Press Button(Event Player, Button(Primary Fire));
					Wait(0.650, Abort When False);
					Press Button(Event Player, Button(Primary Fire));
					Wait(0.650, Abort When False);
					Press Button(Event Player, Button(Primary Fire));
					Wait(0.650, Abort When False);
					Press Button(Event Player, Button(Primary Fire));
					Wait(0.650, Abort When False);
					Stop Holding Button(Event Player, Button(Secondary Fire));
					Wait(0.250, Abort When False);
					Press Button(Event Player, Button(Ability 2));
					Wait(0.100, Abort When False);
					Press Button(Event Player, Button(Primary Fire));
					Wait(0.250, Abort When False);
					Press Button(Event Player, Button(Primary Fire));
					Wait(0.250, Abort When False);
					Press Button(Event Player, Button(Primary Fire));
					Wait(0.250, Abort When False);
					Press Button(Event Player, Button(Primary Fire));
					Wait(0.250, Abort When False);
					Press Button(Event Player, Button(Ability 1));
					Loop If Condition Is True;
				End;
				If(Hero Of(Event Player) == Hero(Reinhardt));
					Start Holding Button(Event Player, Button(Primary Fire));
					Wait(8, Abort When False);
					Stop Holding Button(Event Player, Button(Primary Fire));
					Wait(0.200, Abort When False);
					Start Holding Button(Event Player, Button(Secondary Fire));
					Wait(3, Abort When False);
					Stop Holding Button(Event Player, Button(Secondary Fire));
					Loop If Condition Is True;
				End;
				If(Hero Of(Event Player) == Hero(Hanzo));
					If(Is On Ground(Event Player) == True && Global.Kills > 4);
						Apply Impulse(Event Player, Up, 70, To World, Cancel Contrary Motion);
						Set Gravity(Event Player, 0);
						Loop If Condition Is True;
					Else;
						Start Holding Button(Event Player, Button(Primary Fire));
						Press Button(Event Player, Button(Ability 1));
						Wait(1.500, Ignore Condition);
						Stop Holding Button(Event Player, Button(Primary Fire));
						Wait(1, Ignore Condition);
						Press Button(Event Player, Button(Primary Fire));
						Wait(1, Abort When False);
						Press Button(Event Player, Button(Primary Fire));
						Wait(1, Abort When False);
						Press Button(Event Player, Button(Primary Fire));
						Wait(1, Abort When False);
						Press Button(Event Player, Button(Primary Fire));
						Wait(1, Abort When False);
						Press Button(Event Player, Button(Primary Fire));
						Wait(1, Abort When False);
						Press Button(Event Player, Button(Ability 2));
						Wait(0.250, Abort When False);
						Press Button(Event Player, Button(Primary Fire));
						Wait(0.250, Abort When False);
						Press Button(Event Player, Button(Primary Fire));
						Wait(0.250, Abort When False);
						Press Button(Event Player, Button(Primary Fire));
						Wait(0.250, Abort When False);
						Press Button(Event Player, Button(Primary Fire));
						Wait(0.250, Abort When False);
						Press Button(Event Player, Button(Primary Fire));
						Wait(0.250, Abort When False);
						Press Button(Event Player, Button(Primary Fire));
						Wait(0.250, Abort When False);
						Press Button(Event Player, Button(Primary Fire));
						Wait(0.250, Abort When False);
						Press Button(Event Player, Button(Primary Fire));
						Wait(0.250, Abort When False);
						Start Holding Button(Event Player, Button(Primary Fire));
						Wait(1.500, Ignore Condition);
						Stop Holding Button(Event Player, Button(Primary Fire));
						Loop If Condition Is True;
					End;
				End;
				If(Hero Of(Event Player) == Hero(Sigma));
					Start Holding Button(Event Player, Button(Primary Fire));
					Wait(6, Ignore Condition);
					Stop Holding Button(Event Player, Button(Primary Fire));
					Wait(0.200, Ignore Condition);
					Start Holding Button(Event Player, Button(Secondary Fire));
					Wait(1.200, Ignore Condition);
					Stop Holding Button(Event Player, Button(Secondary Fire));
					Wait(0.500, Abort When False);
					Press Button(Event Player, Button(Ability 1));
					Wait(2, Abort When False);
					Press Button(Event Player, Button(Secondary Fire));
					Wait(0.200, Ignore Condition);
					Press Button(Event Player, Button(Ability 2));
					Loop If Condition Is True;
				End;
				If(Hero Of(Event Player) == Hero(Roadhog));
					Start Holding Button(Event Player, Button(Primary Fire));
					Wait(5.100, Ignore Condition);
					Stop Holding Button(Event Player, Button(Primary Fire));
					Wait(0.200, Ignore Condition);
					Press Button(Event Player, Button(Ability 2));
					Wait(2.500, Abort When False);
					Press Button(Event Player, Button(Secondary Fire));
					Wait(0.850, Abort When False);
					Press Button(Event Player, Button(Ability 1));
					Wait(0.850, Abort When False);
					Press Button(Event Player, Button(Primary Fire));
					Wait(0.150, Abort When False);
					Press Button(Event Player, Button(Melee));
					Loop If Condition Is True;
				End;
			Else If(Ultimate Charge Percent(Event Player) == 100);
				Wait(0.250, Abort When False);
				Press Button(Event Player, Button(Ultimate));
				If(Hero Of(Event Player) == Hero(Reinhardt));
					Wait(0.850, Ignore Condition);
					Press Button(Event Player, Button(Ability 2));
					Wait(1.500, Ignore Condition);
					Press Button(Event Player, Button(Ability 1));
				End;
				If(Hero Of(Event Player) == Hero(Hanzo));
					Set Ultimate Charge(Event Player, 100);
					Wait(1, Ignore Condition);
					Press Button(Event Player, Button(Ultimate));
				End;
				Loop If Condition Is True;
			End;
		End;
	}
}

disabled rule("Respawn Failsafe")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		All;
	}

	conditions
	{
		Is Dead(Event Player) == True;
	}

	actions
	{
		If(Hero Of(Event Player) != Hero(Reaper));
			Wait(5, Abort When False);
			Teleport(Event Player, Random Value In Array(Global.SpawnPoints));
			Wait(1, Ignore Condition);
			Resurrect(Event Player);
			Heal(Event Player, Null, 100000);
			Abort;
		End;
		Wait(15, Abort When False);
		If(Global.Kills > Number Of Living Players(Team 2));
			Respawn(Event Player);
		Else;
			Wait(50, Abort When False);
			Stop Forcing Player To Be Hero(All Dead Players(Team 2));
			Stop Forcing Dummy Bot Name(All Dead Players(Team 2));
			Start Forcing Dummy Bot Name(Players On Hero(Hero(Reaper), Team 2), Custom String("Zombie"));
			Stop Holding Button(All Dead Players(Team 2), Button(Secondary Fire));
			Stop Holding Button(All Dead Players(Team 2), Button(Primary Fire));
			Stop Holding Button(All Dead Players(Team 2), Button(Jump));
			Stop Scaling Player(All Dead Players(Team 2));
			Respawn(All Dead Players(Team 2));
			Call Subroutine(SpawnResets);
		End;
	}
}

disabled rule("Spawn Reset")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is In Spawn Room(Event Player) == True;
		Global.Round > 1;
	}

	actions
	{
		Teleport(Event Player, Vector(-160.100, 1.290, 99.440));
		Abort If(Team Of(Event Player) == Team 1);
		Heal(Event Player, Null, 100000);
		If(Count Of(Global.SpawnPoints) > 0);
			Teleport(Event Player, Random Value In Array(Global.SpawnPoints));
		Else;
			Teleport(Event Player, Closest Player To(Event Player, Team 1));
			Apply Impulse(Event Player, Backward, 35, To Player, Cancel Contrary Motion);
			Call Subroutine(SpawnResets);
		End;
		"Speed Resets (Spawn)"
		Event Player.Speed = 200;
		Set Move Speed(Event Player, Global.ShadowVectors[26]);
	}
}

disabled rule("Lockdown Failsafe")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global.Lockdown == True;
	}

	actions
	{
		If(Global.PurgeVectors[6] < 30);
			Global.ShadowVectors[13] -= Global.PurgeVectors[6];
			Global.PurgeVectors[6] = 0;
		End;
		If(Global.PurgeVectors[8] < 30);
			Global.ShadowVectors[13] -= Global.PurgeVectors[8];
			Global.PurgeVectors[8] = 0;
		End;
		If(Global.PurgeVectors[10] < 30);
			Global.ShadowVectors[13] -= Global.PurgeVectors[10];
			Global.PurgeVectors[10] = 0;
		End;
		If(Global.PurgeVectors[12] < 30);
			Global.ShadowVectors[13] -= Global.PurgeVectors[12];
			Global.PurgeVectors[12] = 0;
		End;
		Wait(30, Abort When False);
		All Players(Team 1).MaxAmmo = True;
		Teleport(All Players(Team 1), Random Value In Array(Global.LockdownArray));
		Global.LoopControl = 0;
		While(Global.LoopControl < Number Of Players(Team 1));
			Teleport(Players In Slot(Global.LoopControl, Team 1), Random Value In Array(Global.LockdownArray));
			Global.LoopControl += 1;
		End;
		Global.LoopControl = 0;
		While(Global.LoopControl < Number Of Players(Team 2));
			Teleport(Players In Slot(Global.LoopControl, Team 2), Random Value In Array(Global.LockdownArray));
			Global.LoopControl += 1;
		End;
		Loop If Condition Is True;
	}
}

disabled rule("Weapon Effects")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		All;
	}

	conditions
	{
		Event Player.WonderWeapons == 1;
	}

	actions
	{
		Wait(0.200, Ignore Condition);
		Event Player.WonderWeapons = 0;
	}
}

rule("=======Elemental Bow Effects=======")
{
	event
	{
		Ongoing - Global;
	}
}

disabled rule("Ice Freeze")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		All;
	}

	conditions
	{
		Event Player.Ice >= 1;
	}

	actions
	{
		If(Event Player.Ice == 1);
			Set Move Speed(Event Player, 45);
			Wait(2, Ignore Condition);
			Loop If(Event Player.Ice > 1);
			Event Player.Ice = 0;
			Set Move Speed(Event Player, Global.ShadowVectors[26]);
		End;
		If(Event Player.Ice == 2);
			Set Move Speed(Event Player, 15);
			Wait(2, Ignore Condition);
			Loop If(Event Player.Ice > 2);
			Event Player.Ice = 0;
			Set Move Speed(Event Player, Global.ShadowVectors[26]);
		End;
		If(Event Player.Ice >= 3);
			Set Status(Event Player, Global.ShadowVectors[8], Frozen, 5);
			Wait(5, Abort When False);
			Damage(Event Player, Global.ShadowVectors[8], 1000 * Global.ShadowVectors[8].IceEssence);
			Play Effect(All Players(All Teams), Zarya Particle Cannon Explosion Effect, Color(Team 1), Position Of(Event Player), 1);
			Play Effect(All Players(All Teams), Widowmaker Venom Mine Explosion Sound, Color(Team 2), Position Of(Event Player), 200);
			Wait(1, Ignore Condition);
			Event Player.Ice = 0;
			Set Move Speed(Event Player, Global.ShadowVectors[26]);
		End;
	}
}

disabled rule("Fire Burn")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		All;
	}

	conditions
	{
		Event Player.Fire >= 1;
	}

	actions
	{
		If(Is Dead(Event Player) == True || Has Status(Event Player, Burning) == True);
			Wait(3, Ignore Condition);
			Event Player.Fire = 0;
		Else;
			Set Status(Event Player, Global.ShadowVectors[9], Burning, 3);
			Start Damage Over Time(Event Player, Global.ShadowVectors[9], 3, 150 * Global.ShadowVectors[9].FireEssence);
			Wait(3, Abort When False);
			Play Effect(All Players(All Teams), Bad Pickup Effect, Color(Red), Position Of(Event Player), 2);
			Play Effect(All Players(All Teams), Bastion Tank Cannon Explosion Sound, Color(Team 2), Position Of(Event Player), 200);
			Damage(Event Player, Global.ShadowVectors[9], 200 * Global.ShadowVectors[9].FireEssence);
			Clear Status(Event Player, Burning);
			Wait(1, Ignore Condition);
			Event Player.Fire = 0;
		End;
	}
}

disabled rule("Wind Impulse")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		All;
	}

	conditions
	{
		Event Player.Wind >= 1;
	}

	actions
	{
		Apply Impulse(Event Player, Up, 5, To World, Cancel Contrary Motion);
		Set Status(Event Player, Global.ShadowVectors[10], Knocked Down, 1.750);
		Apply Impulse(Event Player, Direction Towards(Global.ShadowVectors[10], Event Player), 35, To World, Cancel Contrary Motion);
		Wait(0.200, Ignore Condition);
		Play Effect(All Players(All Teams), Good Pickup Effect, Color(Yellow), Position Of(Event Player), 12);
		Damage(Event Player, Global.ShadowVectors[10], 500 * Global.ShadowVectors[10].WindEssence);
		Wait(1, Ignore Condition);
		Event Player.Wind = 0;
	}
}

disabled rule("Lightning Stun")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		All;
	}

	conditions
	{
		Event Player.Lightning >= 1;
	}

	actions
	{
		If(Is Dead(Event Player) == True);
			Event Player.Lightning = 0;
		Else;
			Wait(0.200, Abort When False);
			Set Status(Event Player, Null, Unkillable, 2.500);
			While(Event Player.Lightning > 1 && Health(Event Player) > 1);
				Event Player.Lightning -= 1;
				Play Effect(All Players(All Teams), Bad Pickup Effect, Color(Purple), Position Of(Event Player), 3);
				Set Status(Event Player, Global.ShadowVectors[11], Stunned, 0.500);
				Wait(0.100, Ignore Condition);
				Play Effect(All Players(All Teams), Sombra Translocator Disappear Effect, Color(Team 1), Position Of(Event Player), 5);
				Damage(Players Within Radius(Event Player, 2 * Global.ShadowVectors[11].LightningEssence, Team 2, Surfaces),
					Global.ShadowVectors[11], 20 * Global.ShadowVectors[11].LightningEssence);
				Wait(0.100, Ignore Condition);
			End;
			Clear Status(Event Player, Unkillable);
			Damage(Event Player, Global.ShadowVectors[11], 50 * Global.ShadowVectors[11].LightningEssence);
			Wait(1, Ignore Condition);
			Event Player.Lightning = 0;
		End;
	}
}

disabled rule("Venom Poison")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		All;
	}

	conditions
	{
		Event Player.Venom >= 1;
	}

	actions
	{
		Skip If(Global.ShadowVectors[14] == True || Event Player.Venom < 5, 1);
		Global.ShadowVectors[22] += 1 * Global.ShadowVectors[5].VenomEssence;
		If(Is Dead(Event Player) == True || Event Player.Venom == 1);
			Wait(2, Ignore Condition);
			Event Player.Venom = 0;
		Else;
			If(Global.ShadowVectors[22] >= 12);
				Global.ShadowVectors[25] = True;
			End;
			Wait(0.200, Abort When False);
			Start Forcing Player Outlines(Event Player, All Players(All Teams), True, Color(Green), Always);
			Set Status(Event Player, Null, Unkillable, 5);
			While(Event Player.Venom > 1 && Health(Event Player) > 1);
				Play Effect(All Players(All Teams), DVa Micro Missiles Explosion Effect, Color(Team 1), Position Of(Event Player), 50);
				Play Effect(All Players(All Teams), Hanzo Sonic Arrow Initial Pulse Sound, Color(Team 1), Position Of(Event Player), 200);
				Damage(Event Player, Global.ShadowVectors[5], 40);
				Wait(0.500, Ignore Condition);
				Event Player.Venom -= 1;
			End;
			Play Effect(All Players(All Teams), Bad Explosion, Color(Green), Position Of(Event Player), 3);
			Players Within Radius(Event Player, 5, Team 2, Surfaces).Venom = 1;
			Clear Status(Event Player, Unkillable);
			Damage(Players Within Radius(Event Player, 5, Team 2, Surfaces), Global.ShadowVectors[5],
				100 * Global.ShadowVectors[5].VenomEssence);
			Set Status(Players Within Radius(Event Player, 5, Team 2, Surfaces), Global.ShadowVectors[5], Asleep, 2);
			Set Move Speed(Event Player, Global.ShadowVectors[26]);
			Stop Forcing Player Outlines(Event Player, All Players(All Teams));
			Wait(1, Ignore Condition);
			Event Player.Venom = 0;
		End;
	}
}

disabled rule("Venom Snakes")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global.ShadowVectors[25] == True;
		Global.ShadowVectors[5].Ammo >= 1;
	}

	actions
	{
		Play Effect(All Players(All Teams), Lúcio Sound Barrier Cast Effect, Color(Team 1), Position Of(Global.ShadowVectors[5]), 200);
		Play Effect(All Players(All Teams), Lúcio Sound Barrier Cast Sound, Color(Team 2), Position Of(Global.ShadowVectors[5]), 200);
		While(Global.ShadowVectors[22] > 0 && Global.ShadowVectors[5].Ammo > 0);
			Global.ShadowVectors[19] = 0;
			Global.ShadowVectors[14] = True;
			While(Global.ShadowVectors[19] < 4);
				Global.ShadowVectors[21] = 15 + Global.ShadowVectors[19];
				Global.ShadowVectors[Global.ShadowVectors[21]] = Sorted Array(All Living Players(Team 2), Distance Between(Global.ShadowVectors[5],
					Current Array Element))[Global.ShadowVectors[19]];
				Play Effect(All Players(All Teams), Good Explosion, Color(Green), Global.ShadowVectors[Global.ShadowVectors[21]], 5);
				Play Effect(All Players(All Teams), Hanzo Sonic Arrow Initial Pulse Sound, Color(Team 1),
					Global.ShadowVectors[Global.ShadowVectors[21]], 200);
				Set Status(Global.ShadowVectors[Global.ShadowVectors[21]], Global.ShadowVectors[5], Stunned, 2.500);
				Set Status(Global.ShadowVectors[Global.ShadowVectors[21]], Global.ShadowVectors[5], Rooted, 3);
				Global.ShadowVectors[19] += 1;
				Global.ShadowVectors[5].Ammo -= 1;
				Wait(0.400, Ignore Condition);
			End;
			Global.ShadowVectors[19] = 0;
			Wait(0.500, Ignore Condition);
			Play Effect(All Players(All Teams), DVa Self Destruct Explosion Effect, Color(Team 1), Position Of(Global.ShadowVectors[5]), 200);
			While(Global.ShadowVectors[19] < 4);
				Global.ShadowVectors[21] = 15 + Global.ShadowVectors[19];
				Global.ShadowVectors[20] = 300 * Global.ShadowVectors[5].VenomEssence;
				Play Effect(All Players(All Teams), Bad Pickup Effect, Color(Green), Global.ShadowVectors[Global.ShadowVectors[21]], 5);
				Heal(Global.ShadowVectors[5], Global.ShadowVectors[5], Global.ShadowVectors[20]);
				Damage(Global.ShadowVectors[Global.ShadowVectors[21]], Global.ShadowVectors[5], Global.ShadowVectors[20]);
				Set Status(Global.ShadowVectors[Global.ShadowVectors[21]], Global.ShadowVectors[5], Asleep, 3);
				Global.ShadowVectors[19] += 1;
				Wait(0.100, Ignore Condition);
			End;
			Global.ShadowVectors[22] -= 4;
			Global.ShadowVectors[15] = Global.MagicVectors[0];
			Global.ShadowVectors[16] = Global.MagicVectors[0];
			Global.ShadowVectors[17] = Global.MagicVectors[0];
			Global.ShadowVectors[18] = Global.MagicVectors[0];
			Global.ShadowVectors[14] = False;
			Wait(0.250, Ignore Condition);
		End;
		Play Effect(All Players(All Teams), Sombra EMP Explosion Sound, Color(Team 2), Position Of(Global.ShadowVectors[5]), 200);
		Global.ShadowVectors[25] = False;
		Global.ShadowVectors[22] = 0;
		All Players(Team 2).Venom = 0;
		Set Move Speed(All Players(Team 2), Global.ShadowVectors[26]);
	}
}

disabled rule("Shadow Pull")
{
	event
	{
		Ongoing - Each Player;
		Team 2;
		All;
	}

	conditions
	{
		Event Player.Shadow >= 1;
	}

	actions
	{
		While(Global.ShadowVectors[0] >= 0);
			Wait(0.500, Ignore Condition);
			Apply Impulse(Event Player, Direction Towards(Event Player, Global.ShadowVectors[Event Player.Shadow]), 12, To World,
				Cancel Contrary Motion);
			Damage(Event Player, Global.ShadowVectors[4], 20 * Global.ShadowVectors[4].ShadowEssence);
			Global.ShadowVectors[0] -= 5;
		End;
		Damage(Event Player, Global.ShadowVectors[4], 200 * Global.ShadowVectors[4].ShadowEssence);
		Play Effect(All Players(All Teams), Tracer Recall Disappear Effect, Color(Team 2), Global.ShadowVectors[Event Player.Shadow],
			1000);
		Play Effect(All Players(All Teams), Moira Fade Disappear Sound, Color(Team 2), Global.ShadowVectors[Event Player.Shadow], 200);
		Play Effect(All Players(All Teams), Pharah Concussive Blast Sound, Color(Team 2), Global.ShadowVectors[Event Player.Shadow], 200);
		Play Effect(All Players(All Teams), Symmetra Teleporter Reappear Sound, Color(Team 2), Global.ShadowVectors[Event Player.Shadow],
			200);
		Play Effect(All Players(All Teams), Tracer Recall Disappear Sound, Color(Team 2), Global.ShadowVectors[Event Player.Shadow], 200);
		Global.ShadowVectors[Event Player.Shadow] = Global.MagicVectors[0];
		Wait(1, Ignore Condition);
		All Players(Team 2).Shadow = 0;
		Global.ShadowVectors[1] = Global.MagicVectors[0];
		Global.ShadowVectors[2] = Global.MagicVectors[0];
		Global.ShadowVectors[3] = Global.MagicVectors[0];
		Global.ShadowVectors[0] = 300 * Global.ShadowVectors[4].ShadowEssence;
		Wait(2, Ignore Condition);
	}
}

disabled rule("Shadow Portals")
{
	event
	{
		Player Dealt Damage;
		Team 1;
		Hanzo;
	}

	conditions
	{
		Event Player.ShadowEssence >= 1;
		Is Meleeing(Event Player) == False;
		Event Player.Ammo >= 1;
		Victim.Shadow == 0;
	}

	actions
	{
		Global.ShadowVectors[0] += 15 * Event Player.ShadowEssence;
		Play Effect(All Players(All Teams), Bad Pickup Effect, Color(Black), Position Of(Victim), 5);
		If(Event Player.ShadowIndex > 3 || Event Player.ShadowIndex < 1);
			Event Player.ShadowIndex = 1;
		End;
		If(Global.ShadowVectors[Event Player.ShadowIndex] == Global.MagicVectors[0]);
			Global.ShadowVectors[7] = Vector(X Component Of(Position Of(Victim)), 1.500 + Y Component Of(Position Of(Victim)), Z Component Of(
				Position Of(Victim)));
			Play Effect(All Players(All Teams), Sigma Hypersphere Implosion Effect, Color(Team 2), Global.ShadowVectors[7], 1000);
			Play Effect(All Players(All Teams), Orisa Halt Implosion Sound, Color(Team 2), Global.ShadowVectors[7], 200);
			Play Effect(All Players(All Teams), Moira Fade Disappear Effect, Color(Team 1), Global.ShadowVectors[7], 5);
			Damage(Victim, Event Player, 225 * Event Player.ShadowEssence);
			Wait(0.500, Ignore Condition);
			Players Within Radius(Global.ShadowVectors[7], 3, Team 2, Surfaces).Shadow = Event Player.ShadowIndex;
			Global.ShadowVectors[Event Player.ShadowIndex] = Global.ShadowVectors[7];
			Event Player.ShadowIndex += 1;
		Else;
			Victim.Shadow = Event Player.ShadowIndex;
			Event Player.ShadowIndex += 1;
			Play Effect(All Players(All Teams), Sigma Hypersphere Implosion Effect, Color(Team 2), Position Of(Victim), 1000);
			Play Effect(All Players(All Teams), Orisa Halt Implosion Sound, Color(Team 2), Position Of(Victim), 70);
			Play Effect(All Players(All Teams), Moira Fade Disappear Effect, Color(Team 1), Position Of(Victim), 5);
		End;
	}
}

disabled rule("Shadow Triangle")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		(Global.ShadowVectors[2] || Global.ShadowVectors[3]) != Global.ShadowVectors[1];
		(Is In Line of Sight(Global.ShadowVectors[1], Global.ShadowVectors[2], Barriers Do Not Block LOS) && Is In Line of Sight(
			Global.ShadowVectors[1], Global.ShadowVectors[3], Barriers Do Not Block LOS)) == True;
		Global.ShadowVectors[0] >= 0;
	}

	actions
	{
		If(Global.ShadowParts == 4);
			If(Distance Between(Global.ShadowVectors[1], Global.shadowVectors[4]) <= 4);
				Global.shadowUpgrades[5] -= 1;
				Play Effect(All Players(All Teams), Buff Impact Sound, Color(Team 1), Global.shadowVectors[4], 1);
				Destroy Effect(Global.EasterEggEffects[140]);
				Destroy In-World Text(Global.EasterEggEffects[141]);
				Global.shadowVectors[4] = Global.PerkVectors[19];
			Else If(Distance Between(Global.ShadowVectors[2], Global.shadowVectors[5]) <= 4);
				Global.shadowUpgrades[5] -= 1;
				Play Effect(All Players(All Teams), Buff Impact Sound, Color(Team 1), Global.shadowVectors[5], 1);
				Destroy Effect(Global.EasterEggEffects[142]);
				Destroy In-World Text(Global.EasterEggEffects[143]);
				Global.shadowVectors[5] = Global.PerkVectors[19];
			Else If(Distance Between(Global.ShadowVectors[3], Global.shadowVectors[6]) <= 4);
				Global.shadowUpgrades[5] -= 1;
				Play Effect(All Players(All Teams), Buff Impact Sound, Color(Team 1), Global.shadowVectors[6], 1);
				Destroy Effect(Global.EasterEggEffects[144]);
				Destroy In-World Text(Global.EasterEggEffects[145]);
				Global.shadowVectors[6] = Global.PerkVectors[19];
			End;
			If(Global.shadowUpgrades[5] <= 0);
				Big Message(All Players(All Teams), Custom String("Erebus favors a new Shadow Master"));
				Global.ShadowParts = 5;
				Global.ShadowVectors[45] += 1;
			End;
		End;
		Global.ShadowVectors[6] = Vector((X Component Of(Global.ShadowVectors[1]) + X Component Of(Global.ShadowVectors[2])
			+ X Component Of(Global.ShadowVectors[3])) / 3, (Y Component Of(Global.ShadowVectors[1]) + Y Component Of(
			Global.ShadowVectors[2]) + Y Component Of(Global.ShadowVectors[3])) / 3, (Z Component Of(Global.ShadowVectors[1])
			+ Z Component Of(Global.ShadowVectors[2]) + Z Component Of(Global.ShadowVectors[3])) / 3);
		While(Global.ShadowVectors[0] > 0);
			Wait(0.500, Ignore Condition);
			Players Within Radius(Global.ShadowVectors[6], 20, Filtered Array(All Living Players(Team 2), Current Array Element.Shadow == 0),
				Surfaces).Shadow = 6;
			Damage(Players Within Radius(Global.ShadowVectors[6], 20, Team 2, Surfaces), Global.ShadowVectors[4],
				200 * Global.ShadowVectors[4].ShadowEssence);
			Play Effect(All Players(All Teams), Sigma Hypersphere Implosion Effect, Color(Team 1), Global.ShadowVectors[6], 1000);
			Play Effect(All Players(All Teams), Moira Fade Disappear Effect, Color(Team 1), Global.ShadowVectors[6], 5);
			Global.ShadowVectors[0] -= 5;
		End;
		Global.ShadowVectors[1] = Global.MagicVectors[0];
		Global.ShadowVectors[2] = Global.MagicVectors[0];
		Global.ShadowVectors[3] = Global.MagicVectors[0];
		Play Effect(All Players(All Teams), Tracer Recall Disappear Effect, Color(Team 2), Global.ShadowVectors[6], 1000);
		Play Effect(All Players(All Teams), Moira Fade Disappear Sound, Color(Team 2), Global.ShadowVectors[6], 200);
		Play Effect(All Players(All Teams), Pharah Concussive Blast Sound, Color(Team 2), Global.ShadowVectors[6], 200);
		Play Effect(All Players(All Teams), Symmetra Teleporter Reappear Sound, Color(Team 2), Global.ShadowVectors[6], 200);
		Play Effect(All Players(All Teams), Tracer Recall Disappear Sound, Color(Team 2), Global.ShadowVectors[6], 200);
		Wait(0.100, Ignore Condition);
		Global.ShadowVectors[6] = Global.MagicVectors[0];
		Wait(0.200, Ignore Condition);
		All Players(Team 2).Shadow = 0;
		Global.ShadowVectors[0] = 300 * Global.ShadowVectors[4].ShadowEssence;
	}
}

disabled rule("=======Map Interactions=======")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}
}

disabled rule("Purchases")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Interact)) == True;
		Is Moving(Event Player) == False;
		Is Alive(Event Player) == True;
		Has Status(Event Player, Knocked Down) == False;
	}

	actions
	{
		"Purchase Box [1]"
		If(Distance Between(Event Player, Global.MagicVectors[1]) <= 2);
			If(Global.BoxOn == False);
				If(Event Player.Points >= 950 && Event Player.Choosing == False);
					If(Event Player.HeroLimit < 2);
						Modify Player Variable(Event Player, Heroes, Append To Array, Hero Of(Event Player));
						Modify Player Variable(Event Player, Heroes, Append To Array, Event Player.Ammo);
						Modify Player Variable(Event Player, Heroes, Append To Array, Event Player.Pack);
						Modify Player Variable(Event Player, Heroes, Append To Array, Event Player.Repack);
						Modify Player Variable(Event Player, Heroes, Append To Array, Event Player.AV);
						Event Player.HeroLimit += 1;
					End;
					Global.BoxOn = True;
					While(Event Player.Cycle < 8 - Event Player.SpeedCola);
						Call Subroutine(BoxCycle);
					End;
					Event Player.Cycle = 0;
					While(Event Player.Weapons[0] == Hero Of(Event Player) || Event Player.Weapons[0] == Event Player.Heroes[0]);
						Event Player.Weapons = Empty Array;
						Modify Player Variable(Event Player, Weapons, Append To Array, Random Value In Array(Global.Box));
					End;
					If(Event Player.Weapons[0] == Hero(Hanzo));
						Play Effect(All Players(All Teams), Bad Explosion, Color(Gray), Global.MagicVectors[1], 5);
						Play Effect(All Players(All Teams), Sombra Logo Effect, Color(Team 2), Global.MagicVectors[1], 5);
						Play Effect(All Players(All Teams), Lúcio Sound Barrier Cast Sound, Color(Team 2), Global.MagicVectors[1], 5);
						Wait(1.500, Ignore Condition);
						Global.MagicVectors[1] = Random Value In Array(Global.BoxLocations);
						Big Message(All Players(Team 1), Custom String("Mystery Box has moved"));
						Global.BoxOn = False;
						Event Player.Weapons = Empty Array;
						Abort;
					Else;
						Event Player.Points -= 950;
						Event Player.Choosing = True;
						Preload Hero(Event Player, Event Player.Weapons[0]);
						Big Message(Event Player, Custom String("Press Interact for Mystery Box Weapon"));
						Wait Until(Event Player.Choosing == False, 10);
						Global.BoxOn = False;
						Event Player.Choosing = False;
						Event Player.Weapons = Empty Array;
						Abort;
					End;
				End;
			End;
		End;
		"Purchase Pack [2]"
		If(Distance Between(Global.MagicVectors[2], Event Player) <= 2);
			If(Global.GenL + Global.GenR == 6 && Event Player.Pack == 1);
				If(Event Player.Points >= 5000 && Event Player.Packing == False);
					Abort If(Hero Of(Event Player) == Hero(Hanzo));
					Event Player.Switching = 1;
					Event Player.Packing = True;
					Disallow Button(Event Player, Button(Primary Fire));
					Create Beam Effect(All Players(Team 1), Good Beam, Global.MagicVectors[2], Event Player, Color(Red),
						Visible To Position and Radius);
					Wait(1, Ignore Condition);
					Destroy Effect(Last Created Entity);
					Create Beam Effect(All Players(Team 1), Good Beam, Global.MagicVectors[2], Event Player, Color(Orange),
						Visible To Position and Radius);
					Wait(1, Ignore Condition);
					Destroy Effect(Last Created Entity);
					Create Beam Effect(All Players(Team 1), Good Beam, Global.MagicVectors[2], Event Player, Color(Lime Green),
						Visible To Position and Radius);
					Wait(1, Ignore Condition);
					Destroy Effect(Last Created Entity);
					Create Beam Effect(All Players(Team 1), Bad Beam, Global.MagicVectors[2], Event Player, Color(Purple),
						Visible To Position and Radius);
					Wait(1, Ignore Condition);
					Destroy Effect(Last Created Entity);
					Create Beam Effect(All Players(Team 1), Bad Beam, Global.MagicVectors[2], Event Player, Color(Blue),
						Visible To Position and Radius);
					Wait(1, Ignore Condition);
					Destroy Effect(Last Created Entity);
					Create Beam Effect(All Players(Team 1), Bad Beam, Global.MagicVectors[2], Event Player, Color(White),
						Visible To Position and Radius);
					Wait(1, Ignore Condition);
					Destroy Effect(Last Created Entity);
					Event Player.Points -= 5000;
					Event Player.Pack = 3;
					Allow Button(Event Player, Button(Primary Fire));
					Heal(Event Player, Null, 99999);
					Call Subroutine(HeroSwitch);
					Event Player.Ammo = Event Player.AV;
					Event Player.Packing = False;
					Abort;
				End;
			End;
		End;
		"Purchase Perk Slot [4]"
		If(Distance Between(Global.MagicVectors[4], Event Player) <= 2);
			If(Event Player.Points >= 11500);
				Event Player.Points -= 11500;
				Event Player.PerkLimit += 1;
				Abort;
			End;
		End;
		"Ice Bow [5]"
		If(Distance Between(Global.MagicVectors[5], Event Player) <= 2);
			If(Global.IceParts >= 3 && Event Player.IceEssence == 0);
				If(Global.Ice == 1);
					Global.ShadowVectors[38] = 0;
					Call Subroutine(EssenceClaim);
					Call Subroutine(EssenceZero);
					Big Message(All Players(All Teams), String("{0} {1}", Event Player, Custom String("Claimed Ice Bow")));
					Global.ShadowVectors[8] = Event Player;
					Event Player.IceEssence = Global.IceParts >= 7 ? 3 : 1;
					Event Player.Pack = Global.IceParts == 7 ? 3 : 1;
					Global.Ice = 2;
					Call Subroutine(EssenceClaim);
					Abort;
				End;
			End;
		End;
		"Fire Bow [6]"
		If(Distance Between(Global.MagicVectors[6], Event Player) <= 2);
			If(Global.FireParts >= 3 && Event Player.FireEssence == 0);
				If(Global.Fire == 1);
					Global.ShadowVectors[38] = 1;
					Call Subroutine(EssenceClaim);
					Call Subroutine(EssenceZero);
					Big Message(All Players(All Teams), String("{0} {1}", Event Player, Custom String("Claimed Fire Bow")));
					Global.ShadowVectors[9] = Event Player;
					Event Player.FireEssence = Global.FireParts >= 7 ? 3 : 1;
					Event Player.Pack = Global.FireParts == 7 ? 3 : 1;
					Global.Fire = 2;
					Call Subroutine(EssenceClaim);
					Abort;
				End;
			End;
		End;
		"Wind Bow [7]"
		If(Distance Between(Global.MagicVectors[7], Event Player) <= 2);
			If(Global.WindParts >= 3 && Event Player.WindEssence == 0);
				If(Global.Wind == 1);
					Global.ShadowVectors[38] = 2;
					Call Subroutine(EssenceClaim);
					Call Subroutine(EssenceZero);
					Big Message(All Players(All Teams), String("{0} {1}", Event Player, Custom String("Claimed Wind Bow")));
					Global.ShadowVectors[10] = Event Player;
					Event Player.WindEssence = Global.WindParts >= 7 ? 3 : 1;
					Event Player.Pack = Global.WindParts == 7 ? 3 : 1;
					Global.Wind = 2;
					Call Subroutine(EssenceClaim);
					Abort;
				End;
			End;
		End;
		"Lightning Bow [8]"
		If(Distance Between(Global.MagicVectors[8], Event Player) <= 2);
			If(Global.LightningParts >= 3 && Event Player.LightningEssence == 0);
				If(Global.Lightning == 1);
					Global.ShadowVectors[38] = 3;
					Call Subroutine(EssenceClaim);
					Call Subroutine(EssenceZero);
					Big Message(All Players(All Teams), String("{0} {1}", Event Player, Custom String("Claimed Lightning Bow")));
					Global.ShadowVectors[11] = Event Player;
					Event Player.LightningEssence = Global.LightningParts >= 7 ? 3 : 1;
					Event Player.Pack = Global.LightningParts == 7 ? 3 : 1;
					Global.Lightning = 2;
					Call Subroutine(EssenceClaim);
					Abort;
				End;
			End;
		End;
		"Shadow Bow [9]"
		If(Distance Between(Global.MagicVectors[9], Event Player) <= 2);
			If(Global.ShadowParts >= 3 && Event Player.ShadowEssence == 0);
				If(Global.Shadow == 1);
					Global.ShadowVectors[38] = 4;
					Call Subroutine(EssenceClaim);
					Call Subroutine(EssenceZero);
					Big Message(All Players(All Teams), String("{0} {1}", Event Player, Custom String("Claimed Shadow Bow")));
					Global.ShadowVectors[4] = Event Player;
					Event Player.ShadowIndex = 1;
					Event Player.ShadowEssence = Global.ShadowParts >= 7 ? 3 : 1;
					Event Player.Pack = Global.ShadowParts == 7 ? 3 : 1;
					Global.Shadow = 2;
					Call Subroutine(EssenceClaim);
					Abort;
				End;
			End;
		End;
		"Venom Bow [10]"
		If(Distance Between(Global.MagicVectors[10], Event Player) <= 2);
			If(Global.VenomParts >= 3 && Event Player.VenomEssence == 0);
				If(Global.Venom == 1);
					Global.ShadowVectors[38] = 5;
					Call Subroutine(EssenceClaim);
					Call Subroutine(EssenceZero);
					Big Message(All Players(All Teams), String("{0} {1}", Event Player, Custom String("Claimed Venom Bow")));
					Global.ShadowVectors[5] = Event Player;
					Event Player.VenomEssence = Global.VenomParts >= 7 ? 3 : 1;
					Event Player.Pack = Global.VenomParts == 7 ? 3 : 1;
					Global.Venom = 2;
					Call Subroutine(EssenceClaim);
					Abort;
				End;
			End;
		End;
		"Purchase M14 (Ashe)"
		If(Distance Between(Global.WeaponVectors[0], Event Player) <= 2);
			If(Event Player.Points >= 250 && Event Player.Switching == 0);
				If(Hero Of(Event Player) == Hero(Ashe));
					Call Subroutine(AmmoCheck);
					Abort;
				Else If(Hero Of(Event Player) != Hero(Ashe) && Event Player.Points >= 500);
					Call Subroutine(HeroBuy);
					Start Forcing Player To Be Hero(Event Player, Hero(Ashe));
					Event Player.Points -= 500;
					Call Subroutine(HeroSwitch);
					Abort;
				End;
			End;
		End;
		"Purchase Olympia (Reaper)"
		If(Distance Between(Global.WeaponVectors[1], Event Player) <= 2);
			If(Event Player.Points >= 250 && Event Player.Switching == 0);
				If(Hero Of(Event Player) == Hero(Reaper));
					Call Subroutine(AmmoCheck);
					Abort;
				Else If(Hero Of(Event Player) != Hero(Reaper) && Event Player.Points >= 500);
					Call Subroutine(HeroBuy);
					Start Forcing Player To Be Hero(Event Player, Hero(Reaper));
					Event Player.Points -= 500;
					Call Subroutine(HeroSwitch);
					Abort;
				End;
			End;
		End;
		"Purchase LSAT (Orisa)"
		If(Distance Between(Global.WeaponVectors[2], Event Player) <= 2);
			If(Event Player.Points >= 1000 && Event Player.Switching == 0);
				If(Hero Of(Event Player) == Hero(Orisa));
					Call Subroutine(AmmoCheck);
					Abort;
				Else If(Hero Of(Event Player) != Hero(Orisa) && Event Player.Points >= 2000);
					Call Subroutine(HeroBuy);
					Start Forcing Player To Be Hero(Event Player, Hero(Orisa));
					Event Player.Points -= 2000;
					Call Subroutine(HeroSwitch);
					Abort;
				End;
			End;
		End;
		"Purchase MP5 (D.va) "
		If(Distance Between(Global.WeaponVectors[3], Event Player) <= 2);
			If(Event Player.Points >= 625 && Event Player.Switching == 0);
				If(Hero Of(Event Player) == Hero(D.Va));
					Call Subroutine(AmmoCheck);
					Abort;
				Else If(Hero Of(Event Player) != Hero(D.Va) && Event Player.Points >= 1250);
					Call Subroutine(HeroBuy);
					Start Forcing Player To Be Hero(Event Player, Hero(D.Va));
					Event Player.Points -= 1250;
					Call Subroutine(HeroSwitch);
					Abort;
				End;
			End;
		End;
		"Purchase M16 (Bap)"
		If(Distance Between(Global.WeaponVectors[4], Event Player) <= 2);
			If(Event Player.Points >= 1500 && Event Player.Switching == 0);
				If(Hero Of(Event Player) == Hero(Baptiste));
					Call Subroutine(AmmoCheck);
					Abort;
				Else If(Hero Of(Event Player) != Hero(Baptiste) && Event Player.Points >= 3000);
					Call Subroutine(HeroBuy);
					Start Forcing Player To Be Hero(Event Player, Hero(Baptiste));
					Event Player.Points -= 3000;
					Call Subroutine(HeroSwitch);
					Abort;
				End;
			End;
		End;
		"Purchase Remington (Roadhog)"
		If(Distance Between(Global.WeaponVectors[5], Event Player) <= 2);
			If(Event Player.Points >= 750 && Event Player.Switching == 0);
				If(Hero Of(Event Player) == Hero(Roadhog));
					Call Subroutine(AmmoCheck);
					Abort;
				Else If(Hero Of(Event Player) != Hero(Roadhog) && Event Player.Points >= 1500);
					Call Subroutine(HeroBuy);
					Start Forcing Player To Be Hero(Event Player, Hero(Roadhog));
					Event Player.Points -= 1500;
					Call Subroutine(HeroSwitch);
					Abort;
				End;
			End;
		End;
		"Purchase PDW (Sombra)"
		If(Distance Between(Global.WeaponVectors[6], Event Player) <= 2);
			If(Event Player.Points >= 500 && Event Player.Switching == 0);
				If(Hero Of(Event Player) == Hero(Sombra));
					Call Subroutine(AmmoCheck);
					Abort;
				Else If(Hero Of(Event Player) != Hero(Sombra) && Event Player.Points >= 1000);
					Call Subroutine(HeroBuy);
					Event Player.Points -= 1000;
					Start Forcing Player To Be Hero(Event Player, Hero(Sombra));
					Call Subroutine(HeroSwitch);
					Abort;
				End;
			End;
		End;
		"Purchase AN94 (Soldier)"
		If(Distance Between(Global.WeaponVectors[7], Event Player) <= 2);
			If(Event Player.Points >= 875 && Event Player.Switching == 0);
				If(Hero Of(Event Player) == Hero(Soldier: 76));
					Call Subroutine(AmmoCheck);
					Abort;
				Else If(Hero Of(Event Player) != Hero(Soldier: 76) && Event Player.Points >= 1750);
					Call Subroutine(HeroBuy);
					Start Forcing Player To Be Hero(Event Player, Hero(Soldier: 76));
					Event Player.Points -= 1750;
					Call Subroutine(HeroSwitch);
					Abort;
				End;
			End;
		End;
		"Purchase SVU (Ana)"
		If(Distance Between(Global.WeaponVectors[8], Event Player) <= 2);
			If(Event Player.Points >= 2000 && Event Player.Switching == 0);
				If(Hero Of(Event Player) == Hero(Ana));
					Call Subroutine(AmmoCheck);
					Abort;
				Else If(Hero Of(Event Player) != Hero(Ana) && Event Player.Points >= 4000);
					Call Subroutine(HeroBuy);
					Start Forcing Player To Be Hero(Event Player, Hero(Ana));
					Event Player.Points -= 4000;
					Call Subroutine(HeroSwitch);
					Abort;
				End;
			End;
		End;
		"Purchase Five-Seven (Torb)"
		If(Distance Between(Global.WeaponVectors[9], Event Player) <= 2);
			If(Event Player.Points >= 700 && Event Player.Switching == 0);
				If(Hero Of(Event Player) == Hero(Torbjörn));
					Call Subroutine(AmmoCheck);
					Abort;
				Else If(Hero Of(Event Player) != Hero(Torbjörn) && Event Player.Points >= 1400);
					Call Subroutine(HeroBuy);
					Start Forcing Player To Be Hero(Event Player, Hero(Torbjörn));
					Event Player.Points -= 1400;
					Call Subroutine(HeroSwitch);
					Abort;
				End;
			End;
		End;
		"Purchase Katana (Brig) "
		If(Distance Between(Global.WeaponVectors[11], Event Player) <= 2);
			If(Event Player.Points >= 5000 && Event Player.Switching == 0);
				Call Subroutine(HeroBuy);
				Start Forcing Player To Be Hero(Event Player, Hero(Brigitte));
				Event Player.Points -= 5000;
				Call Subroutine(HeroSwitch);
				Abort;
			End;
		End;
		"Purchase M1927 (Rammatra)"
		If(Distance Between(Global.WeaponVectors[12], Event Player) <= 2);
			If(Event Player.Points >= 1750 && Event Player.Switching == 0);
				If(Hero Of(Event Player) == Hero(Ramattra));
					Call Subroutine(AmmoCheck);
					Abort;
				Else If(Hero Of(Event Player) != Hero(Ramattra) && Event Player.Points >= 1750);
					Call Subroutine(HeroBuy);
					Start Forcing Player To Be Hero(Event Player, Hero(Ramattra));
					Event Player.Points -= 1750;
					Call Subroutine(HeroSwitch);
					Abort;
				End;
			End;
		End;
		"Purchase One Inch Punch"
		If(Distance Between(Global.PerkVectors[1], Event Player) <= 2);
			If(Global.ShadowVectors[12] == True && Event Player.Galva == False);
				Event Player.Galva = True;
				Set Melee Enabled(Event Player, True);
				Big Message(All Players(All Teams), Custom String("{0} Claimed Reward", Event Player));
				Abort;
			End;
		End;
		"Purchase Juggernog [0]"
		If(Distance Between(Global.PerkVectors[0], Event Player) <= 2);
			If(Event Player.Juggernog == 0);
				If(Event Player.Points >= 2500 && Event Player.PerkLimit > 0);
					Event Player.PerkLimit -= 1;
					Create HUD Text(Event Player, Custom String("Juggernog"), Null, Null, Right, 5, Color(Red), Color(Red), Color(Red),
						Visible To and String, Visible Always);
					Heal(Event Player, Null, 99999);
					Event Player.Points -= 2500;
					Event Player.Juggernog = 1;
					Wait(0.100, Ignore Condition);
					Set Max Health(Event Player, 1000 + 500 * Event Player.Juggernog);
					Set Knockback Received(Event Player, 200 / (Event Player.Juggernog + 1));
					Add Health Pool To Player(Event Player, Armor, 2000, True, False);
					Abort;
				End;
			End;
		End;
		"Purchase Deadshot [2]"
		If(Distance Between(Global.PerkVectors[2], Event Player) <= 2);
			If(Event Player.Points >= 1500 && Event Player.PerkLimit > 0);
				If(Event Player.Deadshot == 0);
					Event Player.Points -= 1500;
					Event Player.Deadshot = 1;
					Event Player.PerkLimit -= 1;
					Wait(0.100, Ignore Condition);
					Create HUD Text(Event Player, Custom String("Deadshot"), Null, Null, Right, 7, Color(White), Color(White), Color(White),
						Visible To and String, Visible Always);
					Abort;
				End;
			End;
		End;
		"Purchase WidowsWine [4]"
		If(Distance Between(Global.PerkVectors[4], Event Player) <= 2);
			If(Event Player.Points >= 4000 && Event Player.PerkLimit > 0);
				Abort If(Event Player.WidowsWine >= 1);
				Event Player.Points -= 4000;
				Event Player.WidowsWine = 1;
				Event Player.PerkLimit -= 1;
				Event Player.Grenade = 4;
				Wait(0.100, Ignore Condition);
				Set Damage Received(Event Player, 150 - 20 * Event Player.WidowsWine);
				Create HUD Text(Event Player, Custom String("Widows Wine"), Null, Null, Right, 9, Color(Purple), Color(Purple), Color(Purple),
					Visible To and String, Visible Always);
				Abort;
			End;
		End;
		"Purchase Elemental Pop [6]"
		If(Distance Between(Global.PerkVectors[6], Event Player) <= 2);
			If(Event Player.Points >= 4000 && Event Player.PerkLimit > 0);
				Abort If(Event Player.EPop >= 1);
				Event Player.Points -= 4000;
				Event Player.EPop = 1;
				Event Player.PerkLimit -= 1;
				Wait(0.100, Ignore Condition);
				Create HUD Text(Event Player, Custom String("Elemental Pop"), Null, Null, Right, 10, Color(Rose), Color(Rose), Color(Rose),
					Visible To and String, Visible Always);
				Abort;
			End;
		End;
		"Purchase DoubleTap [8]"
		If(Distance Between(Global.PerkVectors[8], Event Player) <= 2);
			If(Event Player.Points >= 2000 && Event Player.PerkLimit > 0);
				If(Event Player.DoubleTap == 0);
					Event Player.Points -= 2000;
					Event Player.DoubleTap = 1;
					Event Player.PerkLimit -= 1;
					Wait(0.100, Ignore Condition);
					Start Damage Modification(All Players(Team 2), Event Player, 250 * Event Player.DoubleTap, Receivers Damagers and Damage Percent);
					Start Healing Modification(All Players(Team 1), Event Player, 500 * Event Player.DoubleTap, Receivers Healers and Healing Percent);
					Set Projectile Speed(Event Player, 100 + 100 * Event Player.DoubleTap);
					Create HUD Text(Event Player, Custom String("Double Tap"), Null, Null, Right, 3, Color(Orange), Color(Orange), Color(Orange),
						Visible To and String, Visible Always);
					Abort;
				End;
			End;
		End;
		"Purchase Stamina-Up [10]"
		If(Distance Between(Global.PerkVectors[10], Event Player) <= 2);
			If(Event Player.Points >= 2000 && Event Player.PerkLimit > 0);
				Abort If(Event Player.StaminaUp >= 1);
				Event Player.Points -= 2000;
				Event Player.StaminaUp = 1;
				Event Player.PerkLimit -= 1;
				Wait(0.100, Ignore Condition);
				Set Move Speed(Event Player, Event Player.Speed * 100 + Event Player.StaminaUp * 10);
				Create HUD Text(Event Player, Custom String("Stamina-Up"), Null, Null, Right, 8, Color(Yellow), Color(Yellow), Color(Yellow),
					Visible To and String, Visible Always);
				Abort;
			End;
		End;
		"Purchase Electric Cherry [12]"
		If(Distance Between(Global.PerkVectors[12], Event Player) <= 2);
			If(Event Player.Points >= 1500 && Event Player.PerkLimit > 0);
				Abort If(Event Player.ElectricCherry >= 1);
				Event Player.Points -= 1500;
				Event Player.ElectricCherry = 1;
				Event Player.PerkLimit -= 1;
				Wait(0.100, Ignore Condition);
				Create HUD Text(Event Player, Custom String("Electric Cherry"), Null, Null, Right, 4, Color(Gray), Color(Gray), Color(Gray),
					Visible To and String, Visible Always);
				Abort;
			End;
		End;
		"Purchase Speed Cola [14]"
		If(Distance Between(Global.PerkVectors[14], Event Player) <= 2);
			If(Event Player.Points >= 3000 && Event Player.PerkLimit > 0);
				If(Event Player.SpeedCola == 0);
					Event Player.Points -= 3000;
					Event Player.SpeedCola = 1;
					Event Player.PerkLimit -= 1;
					Wait(0.100, Ignore Condition);
					Set Ability Cooldown(Event Player, Button(Ability 1), 12 - 2 * Event Player.SpeedCola);
					Set Ability Cooldown(Event Player, Button(Ability 2), 12 - 2 * Event Player.SpeedCola);
					Create HUD Text(Event Player, Custom String("Speed Cola"), Null, Null, Right, 6, Color(Lime Green), Color(Lime Green), Color(
						Lime Green), Visible To and String, Visible Always);
					Abort;
				End;
			End;
		End;
		"Purchase Quick Revive [16]"
		If(Distance Between(Global.PerkVectors[16], Event Player) <= 2);
			If(Event Player.Points >= 1500 && Event Player.PerkLimit > 0);
				Abort If(Event Player.QuickRevive >= 1);
				Event Player.Points -= 1500;
				Event Player.QuickRevive = 1;
				Event Player.PerkLimit -= 1;
				Wait(0.100, Ignore Condition);
				Add Health Pool To Player(Event Player, Shields, 1000, True, True);
				Create HUD Text(Event Player, Custom String("Quick Revive"), Null, Null, Right, 2, Color(Blue), Color(Blue), Color(Blue),
					Visible To and String, Visible Always);
				Abort;
			End;
		End;
		"Purchase Flopper [18]"
		If(Distance Between(Global.PerkVectors[18], Event Player) <= 2);
			If(Event Player.Points >= 1500 && Event Player.PerkLimit > 0);
				If(Event Player.PHD == 0);
					Event Player.Points -= 1500;
					Event Player.PHD = 1;
					Event Player.PHDCD = False;
					Event Player.PerkLimit -= 1;
					Wait(0.100, Ignore Condition);
					Create HUD Text(Event Player, Custom String("PHD Flopper"), Null, Null, Right, 14, Color(Violet), Color(Violet), Color(Violet),
						Visible To and String, Visible Always);
					Create HUD Text(Event Player, Event Player.PHDCD == False ? String("{0} {1} {2}", Custom String("Hold"), Input Binding String(
						Button(Crouch)), Custom String("in air!")) : String("{0}: {1}", Custom String("PHD Slam Charging"), Event Player.PHDCD), Null,
						Null, Left, 30, Event Player.PHDCD == False ? Color(Violet) : Color(Yellow), Color(Violet), Color(Violet),
						Visible To String and Color, Visible Always);
					Abort;
				End;
			End;
		End;
		"Purchase Ghostly Gin [20]"
		If(Distance Between(Global.PerkVectors[20], Event Player) <= 2);
			If(Event Player.Points >= 3000 && Event Player.PerkLimit > 0);
				If(Event Player.Ghostly == 0);
					Event Player.Points -= 3000;
					Event Player.Ghostly = 1;
					Event Player.PerkLimit -= 1;
					Event Player.GhostlyCD = False;
					Wait(0.100, Ignore Condition);
					Disable Movement Collision With Players(Event Player);
					Create HUD Text(Event Player, Custom String("Ghostly Gin"), Null, Null, Right, 12, Color(Sky Blue), Color(Sky Blue), Color(
						Sky Blue), Visible To and String, Visible Always);
					Abort;
				End;
			End;
		End;
		"Purchase Mule Kick [22]"
		If(Distance Between(Global.PerkVectors[22], Event Player) <= 2);
			If(Event Player.Points >= 4000 && Event Player.PerkLimit > 0);
				If(Event Player.MuleKick == 0);
					Event Player.Points -= 4000;
					Event Player.MuleKick = 1;
					Event Player.PerkLimit -= 1;
					Wait(0.100, Ignore Condition);
					Create HUD Text(Event Player, Custom String("Mule Kick"), Null, Null, Right, 15, Color(Green), Color(Green), Color(Green),
						Visible To and String, Visible Always);
					If(Event Player.HeroLimit >= 2);
						Modify Player Variable(Event Player, Heroes, Append To Array, Hero Of(Event Player));
						Modify Player Variable(Event Player, Heroes, Append To Array, Event Player.Ammo);
						Modify Player Variable(Event Player, Heroes, Append To Array, Event Player.Pack);
						Modify Player Variable(Event Player, Heroes, Append To Array, Event Player.Repack);
						Modify Player Variable(Event Player, Heroes, Append To Array, Event Player.AV);
						Event Player.HeroLimit += 1;
						Start Forcing Player To Be Hero(Event Player, Random Value In Array(Global.Box));
						Event Player.Pack = 1;
						Event Player.Repack = 1;
						Event Player.Switching = 1;
						Call Subroutine(HeroSwitch);
						Abort;
					Else If(Event Player.HeroLimit < 2);
						Modify Player Variable(Event Player, Heroes, Append To Array, Hero Of(Event Player));
						Modify Player Variable(Event Player, Heroes, Append To Array, Event Player.Ammo);
						Modify Player Variable(Event Player, Heroes, Append To Array, Event Player.Pack);
						Modify Player Variable(Event Player, Heroes, Append To Array, Event Player.Repack);
						Modify Player Variable(Event Player, Heroes, Append To Array, Event Player.AV);
						Event Player.HeroLimit += 1;
						Start Forcing Player To Be Hero(Event Player, Random Value In Array(Global.Box));
						Event Player.Pack = 1;
						Event Player.Repack = 1;
						Event Player.Switching = 1;
						Call Subroutine(HeroSwitch);
						Modify Player Variable(Event Player, Heroes, Append To Array, Hero Of(Event Player));
						Modify Player Variable(Event Player, Heroes, Append To Array, Event Player.Ammo);
						Modify Player Variable(Event Player, Heroes, Append To Array, Event Player.Pack);
						Modify Player Variable(Event Player, Heroes, Append To Array, Event Player.Repack);
						Modify Player Variable(Event Player, Heroes, Append To Array, Event Player.AV);
						Event Player.HeroLimit += 1;
						Start Forcing Player To Be Hero(Event Player, Random Value In Array(Global.Box));
						Event Player.Pack = 1;
						Event Player.Repack = 1;
						Event Player.Switching = 1;
						Call Subroutine(HeroSwitch);
						Abort;
					End;
					Abort;
				End;
			End;
		End;
		"Purchase Tombstone [24]"
		If(Distance Between(Global.PerkVectors[24], Event Player) <= 2);
			If(Event Player.Points >= 2000 && Event Player.PerkLimit > 0);
				If(Event Player.Tombstone == 0);
					Event Player.Points -= 2000;
					Event Player.Tombstone = 1;
					Event Player.PerkLimit -= 1;
					Wait(0.100, Ignore Condition);
					Enable Built-In Game Mode Respawning(Event Player);
					Set Respawn Max Time(Event Player, 30 / Event Player.Tombstone);
					Create HUD Text(Event Player, Custom String("Tombstone"), Null, Null, Right, 15, Color(Turquoise), Color(Turquoise), Color(
						Turquoise), Visible To and String, Visible Always);
					Enable Messages(Event Player);
					Abort;
				End;
			End;
		End;
		"Purchase Scavengers Scotch [26]"
		If(Distance Between(Global.PerkVectors[26], Event Player) <= 2);
			If(Event Player.Points >= 3000 && Event Player.PerkLimit > 0);
				If(Event Player.ScavScotch == 0);
					Event Player.Points -= 3000;
					Event Player.ScavScotch = 1;
					Event Player.PerkLimit -= 1;
					Wait(0.100, Ignore Condition);
					Create HUD Text(Event Player, Custom String("Scavenger's Scotch"), Null, Null, Right, 16, Color(Aqua), Color(Aqua), Color(Aqua),
						Visible To and String, Visible Always);
					Abort;
				End;
			End;
		End;
		"Purchase Vampiric [28]"
		If(Distance Between(Global.PerkVectors[28], Event Player) <= 2);
			If(Event Player.Points >= 4000 && Event Player.PerkLimit > 0);
				If(Event Player.Vampiric[0] == 0);
					Event Player.Points -= 4000;
					Event Player.Vampiric[0] = 1;
					Event Player.PerkLimit -= 1;
					Wait(0.100, Ignore Condition);
					Create HUD Text(Event Player, Custom String("Vampiric Voss"), Null, Null, Right, 17, Color(Turquoise), Color(Turquoise), Color(
						Turquoise), Visible To and String, Visible Always);
					Abort;
				End;
			End;
		End;
		"Tablet Quest [23]"
		If(Distance Between(Event Player, Global.PerkVectors[23]) <= 2);
			If(Event Player.Slabs[0] == False);
				Event Player.Slabs = Empty Array;
				Event Player.Slabs[0] = True;
				Event Player.Slabs[1] = 0;
				Event Player.Slabs[2] = 0;
				Event Player.Slabs[3] = False;
				Event Player.Slabs[4] = 0;
				Event Player.Slabs[5] = Global.MagicVectors[0];
				Event Player.Slabs[6] = 0;
				Create HUD Text(Event Player, Event Player.Slabs[1] == 4 ? Custom String("Air Strikes: {0}", Event Player.Slabs[4]) : (
					Event Player.Slabs[1] == 0 ? Custom String("Infested Tablet") : (Event Player.Slabs[1] == 1 ? (
					Event Player.Slabs[2] < 20 ? Custom String("Tablet Purifying: {0}/20", Event Player.Slabs[2]) : Custom String(
					"Tablet Purified")) : (Event Player.Slabs[1] == 2 ? (Event Player.Slabs[3] == True ? Custom String("Tablet Pure")
					: Custom String("Tablet Tainted")) : (Event Player.Slabs[1] == 3 ? (Event Player.Slabs[2] < 20 ? Custom String(
					"Tablet Charging: {0}/20", Event Player.Slabs[2]) : Custom String("Tablet Charged")) : Custom String(
					"Error: Tablet out of Index"))))), Event Player.Slabs[1] == 4 ? Custom String("Hold {0} & {1}", Input Binding String(Button(
					Melee)), Input Binding String(Button(Secondary Fire))) : Custom String("{0}/4 Steps Completed", Event Player.Slabs[1]), Null,
					Left, 50, Color(Gray), Color(Gray), Color(Gray), Visible To and String, Visible Always);
				Abort;
			Else If(Event Player.Slabs[0] == True);
				If(Event Player.Slabs[1] == 2 && Event Player.Slabs[3] == True);
					Event Player.Slabs[2] = 0;
					Event Player.Slabs[1] = 3;
					Abort;
				Else If(Event Player.Slabs[1] == 3 && Event Player.Slabs[2] >= 20);
					Event Player.Slabs[1] = 4;
					Event Player.Slabs[4] = 2;
					Abort;
				End;
			End;
		End;
		"Holy Water [25]"
		If(Distance Between(Event Player, Global.PerkVectors[25]) <= 2);
			If(Event Player.Slabs[0] == True);
				If(Event Player.Slabs[1] == 0);
					Event Player.Slabs[1] = 1;
					Abort;
				Else If(Event Player.Slabs[1] == 1 && Event Player.Slabs[2] >= 20);
					Event Player.Slabs[1] = 2;
					Event Player.Slabs[3] = True;
					Abort;
				Else If(Event Player.Slabs[1] == 2);
					Event Player.Slabs[3] = True;
					Small Message(Event Player, Custom String("Tablet Cleansed"));
					Abort;
				End;
			End;
		End;
		Call Subroutine(PurchaseExtension);
	}
}

disabled rule("Purchases Extended")
{
	event
	{
		Subroutine;
		PurchaseExtension;
	}

	actions
	{
		"BowParts"
		If(Is True For Any(Global.BowVectors, Distance Between(Event Player, Current Array Element) <= 2));
			Event Player.VectorFetch[2] = Sorted Array(Global.BowVectors, Distance Between(Event Player, Current Array Element))[0];
			Event Player.VectorFetch[3] = Index Of Array Value(Global.BowVectors, Event Player.VectorFetch[2]);
			Destroy Effect(Global.BowParts[Event Player.VectorFetch[3]]);
			Global.BowVectors[Event Player.VectorFetch[3]] = Global.MagicVectors[0];
			Global.ShadowVectors[45] += 1;
			Event Player.Points += 100 * Global.ShadowVectors[45];
			If(Global.ShadowVectors[45] >= 18);
				Global.ShadowVectors[44] = 1;
				Global.ShadowVectors[45] = 18;
			End;
			If(Event Player.VectorFetch[3] <= 2);
				If(Global.Ice == 0);
					Global.IceParts += 1;
					Big Message(All Players(All Teams), Custom String("{0} Found an Ice Bow Part", Event Player));
					Call Subroutine(BowBuild);
					Abort;
				End;
			Else If(Event Player.VectorFetch[3] <= 5);
				If(Global.Fire == 0);
					Global.FireParts += 1;
					Big Message(All Players(All Teams), Custom String("{0} Found a Fire Bow Part", Event Player));
					Call Subroutine(BowBuild);
					Abort;
				End;
			Else If(Event Player.VectorFetch[3] <= 8);
				If(Global.Wind == 0);
					Global.WindParts += 1;
					Big Message(All Players(All Teams), Custom String("{0} Found a Wind Bow Part", Event Player));
					Call Subroutine(BowBuild);
					Abort;
				End;
			Else If(Event Player.VectorFetch[3] <= 11);
				If(Global.Lightning == 0);
					Global.LightningParts += 1;
					Big Message(All Players(All Teams), Custom String("{0} Found a Lightning Bow Part", Event Player));
					Call Subroutine(BowBuild);
					Abort;
				End;
			Else If(Event Player.VectorFetch[3] <= 14);
				If(Global.Shadow == 0);
					Global.ShadowParts += 1;
					Big Message(All Players(All Teams), Custom String("{0} Found a Shadow Bow Part", Event Player));
					Call Subroutine(BowBuild);
					Abort;
				End;
			Else If(Event Player.VectorFetch[3] <= 17);
				If(Global.Venom == 0);
					Global.VenomParts += 1;
					Big Message(All Players(All Teams), Custom String("{0} Found a Venom Bow Part", Event Player));
					Call Subroutine(BowBuild);
					Abort;
				End;
			End;
		End;
		"Open Loading Zone [1] (2, 3)"
		If(Distance Between(Global.DoorVectors[1], Event Player) <= 2);
			If(Event Player.Points >= 2500 && Global.DoorsRight1 == 1);
				Destroy Effect(Global.BlockedDoors[2]);
				Destroy Effect(Global.BlockedEffects[0]);
				Destroy In-World Text(Global.BlockedDoors[3]);
				Event Player.Points -= 2500;
				Big Message(All Players(Team 1), Custom String("Loading Zone Opened"));
				Global.DoorsRight1 = 2;
				Wait(3, Ignore Condition);
				Call Subroutine(SpawnResets);
				Abort;
			End;
		End;
		"Open Rum Factory [3] (6, 7)"
		If(Distance Between(Global.DoorVectors[3], Event Player) <= 2);
			If(Event Player.Points >= 1500 && Global.DoorsRight1 == 3);
				Destroy Effect(Global.BlockedEffects[3]);
				Destroy Effect(Global.BlockedDoors[6]);
				Destroy In-World Text(Global.BlockedDoors[7]);
				Event Player.Points -= 1500;
				Big Message(All Players(Team 1), Custom String("Rum Factory Opened"));
				Global.DoorsRight1 = 4;
				Wait(3, Ignore Condition);
				Call Subroutine(SpawnResets);
				Abort;
			End;
		End;
		"Unlock Sea Wall [6] (12, 13)"
		If(Distance Between(Global.DoorVectors[6], Event Player) <= 2);
			If(Event Player.Points >= 2000 && Global.DoorsLeft1 == 1);
				Destroy Effect(Global.BlockedEffects[1]);
				Destroy Effect(Global.BlockedDoors[12]);
				Destroy In-World Text(Global.BlockedDoors[13]);
				Event Player.Points -= 2000;
				Big Message(All Players(Team 1), Custom String("Sea Wall Unlocked"));
				Global.DoorsLeft1 = 2;
				Wait(3, Ignore Condition);
				Call Subroutine(SpawnResets);
				Abort;
			End;
		End;
		"Unlock Cocina [11] (22, 23)"
		If(Distance Between(Global.DoorVectors[11], Event Player) <= 2);
			If(Event Player.Points >= 1000 && Global.DoorsLeft1 == 4);
				Destroy Effect(Global.BlockedEffects[2]);
				Destroy Effect(Global.BlockedDoors[22]);
				Destroy In-World Text(Global.BlockedDoors[23]);
				Event Player.Points -= 1000;
				Big Message(All Players(Team 1), Custom String("La Cocina Unlocked"));
				Global.DoorsLeft1 = 5;
				Wait(3, Ignore Condition);
				Call Subroutine(SpawnResets);
				Abort;
			End;
		End;
		"Purge Helipad (GR.1) (PE0, PE1)"
		If(Distance Between(Global.PurgeVectors[0], Event Player) <= 2 && Global.Purging == False);
			If(Event Player.Points >= 800 && Global.GenR == 0);
				Global.Purging = True;
				Destroy In-World Text(Global.PurgeEffects[1]);
				Big Message(All Players(Team 1), Custom String("Purging Atrium.."));
				Event Player.Points -= 800;
				Teleport(All Players(Team 2), Global.PurgeVectors[0]);
				Start Forcing Player To Be Hero(Players In Slot(0, Team 2), Hero(Brigitte));
				Start Forcing Dummy Bot Name(Players On Hero(Hero(Brigitte), Team 2), Custom String("Witch"));
				Wait(5, Ignore Condition);
				Global.GenR = 1;
				Destroy Effect(Global.PurgeEffects[0]);
				Big Message(All Players(Team 1), Custom String("Atrium Purged"));
				All Players(Team 1).Points += 200;
				Global.Purging = False;
				Abort;
			End;
		End;
		"Purge Loading Zone (GR.2) (PE2, PE3)"
		If(Distance Between(Global.PurgeVectors[1], Event Player) <= 2 && Global.Purging == False);
			If(Event Player.Points >= 800 && Global.GenR == 1);
				Global.Purging = True;
				Destroy In-World Text(Global.PurgeEffects[3]);
				Big Message(All Players(Team 1), Custom String("Purging Capitol.."));
				Event Player.Points -= 800;
				Teleport(All Players(Team 2), Global.PurgeVectors[1]);
				Start Forcing Player To Be Hero(Players In Slot(1, Team 2), Hero(Hanzo));
				Start Forcing Dummy Bot Name(Players On Hero(Hero(Hanzo), Team 2), Custom String("Bomber"));
				Wait(5, Ignore Condition);
				Global.GenR = 2;
				Destroy Effect(Global.PurgeEffects[2]);
				Big Message(All Players(Team 1), Custom String("Capitol Purged"));
				All Players(Team 1).Points += 200;
				Global.Purging = False;
				Abort;
			End;
		End;
		"Purge Rum Factory (GR.3) (PE4, PE5)"
		If(Distance Between(Global.PurgeVectors[2], Event Player) <= 2 && Global.Purging == False);
			If(Event Player.Points >= 800 && Global.GenR == 2);
				Global.Purging = True;
				Destroy In-World Text(Global.PurgeEffects[5]);
				Big Message(All Players(Team 1), Custom String("Purging Rum Factory.."));
				Event Player.Points -= 800;
				Teleport(All Players(Team 2), Global.PurgeVectors[2]);
				Start Forcing Player To Be Hero(Players In Slot(2, Team 2), Hero(Reinhardt));
				Start Forcing Dummy Bot Name(Players On Hero(Hero(Reinhardt), Team 2), Custom String("Megaton"));
				Wait(5, Ignore Condition);
				Global.GenR = 3;
				Destroy Effect(Global.PurgeEffects[4]);
				Big Message(All Players(Team 1), Custom String("Rum Factory Purged"));
				All Players(Team 1).Points += 200;
				Global.Purging = False;
				Skip If(Global.GenL < 1, 1);
				Destroy Effect(Global.BlockedEffects[5]);
				Skip If(Global.GenL < 3, 1);
				Destroy Effect(Global.BlockedEffects[4]);
				Abort;
			End;
		End;
		"Purge Sea Wall (GL.1) (PE6, PE7)"
		If(Distance Between(Global.PurgeVectors[3], Event Player) <= 2 && Global.Purging == False);
			If(Event Player.Points >= 800 && Global.GenL == 0);
				Global.Purging = True;
				Destroy In-World Text(Global.PurgeEffects[7]);
				Big Message(All Players(Team 1), Custom String("Purging Sea Wall.."));
				Event Player.Points -= 800;
				Teleport(All Players(Team 2), Global.PurgeVectors[3]);
				Start Forcing Player To Be Hero(Players In Slot(3, Team 2), Hero(Roadhog));
				Start Forcing Dummy Bot Name(Players On Hero(Hero(Roadhog), Team 2), Custom String("Panzer"));
				Wait(5, Ignore Condition);
				Global.GenL = 1;
				Destroy Effect(Global.PurgeEffects[6]);
				Big Message(All Players(Team 1), Custom String("Sea Wall Purged"));
				All Players(Team 1).Points += 200;
				Global.Purging = False;
				Skip If(Global.GenR < 3, 1);
				Destroy Effect(Global.BlockedEffects[5]);
				Abort;
			End;
		End;
		"Purge Suburbs (GL.2) (PE8, PE9)"
		If(Distance Between(Global.PurgeVectors[4], Event Player) <= 2 && Global.Purging == False);
			If(Event Player.Points >= 800 && Global.GenL == 1);
				Global.Purging = True;
				Destroy In-World Text(Global.PurgeEffects[9]);
				Big Message(All Players(Team 1), Custom String("Purging Suburbs.."));
				Event Player.Points -= 800;
				Teleport(All Players(Team 2), Global.PurgeVectors[4]);
				Start Forcing Player To Be Hero(Players In Slot(4, Team 2), Hero(Sigma));
				Start Forcing Dummy Bot Name(Players On Hero(Hero(Sigma), Team 2), Custom String("Arbiter"));
				Wait(5, Ignore Condition);
				Global.GenL = 2;
				Destroy Effect(Global.PurgeEffects[8]);
				Big Message(All Players(Team 1), Custom String("Suburbs Purged"));
				All Players(Team 1).Points += 200;
				Global.Purging = False;
				Abort;
			End;
		End;
		"Purge Capitol Drive (GL.3) (PE10, PE11)"
		If(Distance Between(Global.PurgeVectors[5], Event Player) <= 2 && Global.Purging == False);
			If(Event Player.Points >= 800 && Global.GenL == 2);
				Global.Purging = True;
				Destroy In-World Text(Global.PurgeEffects[11]);
				Big Message(All Players(Team 1), Custom String("Purging Downtown.."));
				Event Player.Points -= 800;
				Teleport(All Players(Team 2), Global.PurgeVectors[5]);
				Start Forcing Player To Be Hero(Players In Slot(5, Team 2), Hero(Ashe));
				Start Forcing Dummy Bot Name(Players On Hero(Hero(Ashe), Team 2), Custom String("Huntress"));
				Wait(5, Ignore Condition);
				Global.GenL = 3;
				Destroy Effect(Global.PurgeEffects[10]);
				Big Message(All Players(Team 1), Custom String("Downtown Purged"));
				All Players(Team 1).Points += 200;
				Global.Purging = False;
				Skip If(Global.GenR < 3, 1);
				Destroy Effect(Global.BlockedEffects[4]);
				Abort;
			End;
		End;
		"Open Castle Entry [0] (0, 1)"
		If(Distance Between(Global.DoorVectors[0], Event Player) <= 2);
			If(Event Player.Points >= 1250 && Global.DoorsRight1 == 0);
				Destroy Effect(Global.BlockedDoors[0]);
				Destroy In-World Text(Global.BlockedDoors[1]);
				Destroy Effect(Global.BlockedEffects[0]);
				Destroy Effect(Global.BlockedEffects[2]);
				Event Player.Points -= 1250;
				Big Message(All Players(Team 1), Custom String("Castle Foyer Opened"));
				Global.DoorsRight1 = 1;
				Wait(3, Ignore Condition);
				Call Subroutine(SpawnResets);
				Abort;
			End;
		End;
		"Open Distellery [2] (4, 5)"
		If(Distance Between(Global.DoorVectors[2], Event Player) <= 2);
			If(Event Player.Points >= 1250 && Global.DoorsRight1 == 2);
				Destroy Effect(Global.BlockedDoors[4]);
				Destroy In-World Text(Global.BlockedDoors[5]);
				Event Player.Points -= 1250;
				Big Message(All Players(Team 1), Custom String("Distillery Opened"));
				Global.DoorsRight1 = 3;
				Global.TeleArray[4] = Global.DoorVectors[2];
				Wait(3, Ignore Condition);
				Call Subroutine(SpawnResets);
				Abort;
			End;
		End;
		"Open Capitol Drive [4] (8, 9)"
		If(Distance Between(Global.DoorVectors[4], Event Player) <= 2);
			If(Event Player.Points >= 750 && Global.DoorsRight2 == 0);
				Destroy Effect(Global.BlockedDoors[8]);
				Destroy In-World Text(Global.BlockedDoors[9]);
				Event Player.Points -= 750;
				Big Message(All Players(Team 1), Custom String("Capitol Drive Opened"));
				Global.DoorsRight2 = 1;
				Global.TeleArray[6] = Global.DoorVectors[4];
				Wait(3, Ignore Condition);
				Call Subroutine(SpawnResets);
				Abort;
			End;
		End;
		"Unlock Battlements [5] (10, 11)"
		If(Distance Between(Global.DoorVectors[5], Event Player) <= 2);
			If(Event Player.Points >= 1500 && Global.DoorsLeft1 == 0);
				Destroy Effect(Global.BlockedDoors[10]);
				Destroy In-World Text(Global.BlockedDoors[11]);
				Event Player.Points -= 1500;
				Big Message(All Players(Team 1), Custom String("Battlements Unlocked"));
				Global.DoorsLeft1 = 1;
				Global.TeleArray[8] = Global.DoorVectors[5];
				Wait(3, Ignore Condition);
				Call Subroutine(SpawnResets);
				Abort;
			End;
		End;
		"Unlock Suburbs [7] (14, 15)"
		If(Distance Between(Global.DoorVectors[7], Event Player) <= 2);
			If(Event Player.Points >= 1250 && Global.DoorsLeft1 == 2);
				Destroy Effect(Global.BlockedDoors[14]);
				Destroy In-World Text(Global.BlockedDoors[15]);
				Event Player.Points -= 1250;
				Big Message(All Players(Team 1), Custom String("Suburbs Unlocked"));
				Global.DoorsLeft1 = 3;
				Global.TeleArray[10] = Global.DoorVectors[7];
				Wait(3, Ignore Condition);
				Call Subroutine(SpawnResets);
				Abort;
			End;
		End;
		"Unlock Seb's [8] (16, 17)"
		If(Distance Between(Global.DoorVectors[8], Event Player) <= 2);
			If(Event Player.Points >= 1500 && Global.DoorsLeft1 == 3);
				Destroy Effect(Global.BlockedDoors[16]);
				Destroy In-World Text(Global.BlockedDoors[17]);
				Event Player.Points -= 1500;
				Big Message(All Players(Team 1), Custom String("Sebastian's Garage Unlocked"));
				Global.DoorsLeft1 = 4;
				Global.TeleArray[12] = Global.DoorVectors[8];
				Wait(3, Ignore Condition);
				Call Subroutine(SpawnResets);
				Abort;
			End;
		End;
		"Open Capitol [9] (18, 19)"
		If(Distance Between(Global.DoorVectors[9], Event Player) <= 2);
			If(Event Player.Points >= 2500 && Global.DoorsRight2 == 1);
				Destroy Effect(Global.BlockedDoors[18]);
				Destroy In-World Text(Global.BlockedDoors[19]);
				Event Player.Points -= 2500;
				Big Message(All Players(Team 1), Custom String("The Capitol Opened"));
				Global.DoorsRight2 = 2;
				Global.TeleArray[14] = Global.DoorVectors[9];
				Wait(3, Ignore Condition);
				Call Subroutine(SpawnResets);
				Abort;
			End;
		End;
		"Unlock Atrium [10] (20, 21)"
		If(Distance Between(Global.DoorVectors[10], Event Player) <= 2);
			If(Event Player.Points >= 1250 && Global.DoorsLeft2 == 0);
				Destroy Effect(Global.BlockedDoors[20]);
				Destroy In-World Text(Global.BlockedDoors[21]);
				Event Player.Points -= 1250;
				Big Message(All Players(Team 1), Custom String("Atrium Unlocked"));
				Global.DoorsLeft2 = 1;
				Global.TeleArray[0] = Global.DoorVectors[10];
				Wait(3, Ignore Condition);
				Call Subroutine(SpawnResets);
				Abort;
			End;
		End;
		Skip If(Global.ShadowVectors[44] == 0, 1);
		Call Subroutine(EasterEggPurchase);
		Wait(2, Abort When False);
		Small Message(Event Player, Custom String("Purchase Failed"));
	}
}

disabled rule("Purchase Easter Egg")
{
	event
	{
		Subroutine;
		EasterEggPurchase;
	}

	actions
	{
		"Ice Riddle"
		If(Is True For Any(Global.iceVectors, Distance Between(Event Player, Current Array Element) <= 2));
			If(Global.IceParts == 3 && Hero Of(Event Player) == Hero(Hanzo));
				Global.iceUpgrades[3] = Sorted Array(Global.iceVectors, Distance Between(Event Player, Current Array Element))[0];
				Global.iceUpgrades[4] = Index Of Array Value(Global.iceVectors, Global.iceUpgrades[3]);
				If(Global.iceUpgrades[2] == Global.iceUpgrades[4]);
					Modify Global Variable(iceValues, Remove From Array By Value, Global.iceUpgrades[4]);
					Global.iceBool[Global.iceUpgrades[4]] = True;
					Global.iceUpgrades[2] = Random Value In Array(Global.iceValues);
					Global.iceUpgrades[5] -= 1;
					Play Effect(Event Player, Buff Impact Sound, Color(White), Position Of(Event Player), 200);
					If(Global.iceUpgrades[5] <= 0);
						Play Effect(All Players(All Teams), Doomfist Meteor Strike Impact Sound, Color(Team 2), Position Of(Event Player), 200);
						Big Message(All Players(All Teams), Custom String("{0} Solved the riddle of winter", Event Player));
						Global.IceParts = 4;
						Global.ShadowVectors[45] += 1;
						Destroy In-World Text(Global.EasterEggEffects[16]);
						Global.iceUpgrades[1] = 17;
						Global.iceUpgrades[4] = 0;
						While(Global.iceUpgrades[1] <= 39);
							Destroy Effect(Global.EasterEggEffects[Global.iceUpgrades[1]]);
							Global.iceUpgrades[1] += 1;
							Destroy Effect(Global.EasterEggEffects[Global.iceUpgrades[1]]);
							Global.iceUpgrades[1] += 1;
							Play Effect(All Players(Team 1), Zarya Particle Cannon Explosion Effect, Color(Team 1), Global.iceVectors[Global.iceUpgrades[4]],
								1);
							Global.iceUpgrades[4] += 1;
							Wait(0.200, Ignore Condition);
						End;
						Global.iceBool = 0;
						Global.iceValues = Empty Array;
						Global.iceUpgrades[4] = 12;
						Global.iceUpgrades[2] = 0;
						Global.MagicVectors[3] = Global.iceVectors[12];
					End;
					Abort;
				Else;
					Play Effect(Event Player, Debuff Impact Sound, Color(White), Position Of(Event Player), 200);
					Global.iceUpgrades[5] = 10;
					Global.iceUpgrades[1] = 0;
					While(Global.iceUpgrades[1] < 12);
						Global.iceValues[Global.iceUpgrades[1]] = Global.iceUpgrades[1];
						Global.iceBool[Global.iceUpgrades[1]] = False;
						Global.iceUpgrades[1] += 1;
						Wait(0.100, Ignore Condition);
					End;
					Global.iceUpgrades[2] = Random Value In Array(Global.iceValues);
					Abort;
				End;
			End;
		End;
		"Fire Code"
		If(Is True For Any(Global.fireVectors, Distance Between(Event Player, Current Array Element) <= 2));
			If(Global.FireParts == 4 && Hero Of(Event Player) == Hero(Hanzo));
				Global.fireUpgrades[3] = Sorted Array(Global.fireVectors, Distance Between(Event Player, Current Array Element))[0];
				Global.fireUpgrades[4] = Index Of Array Value(Global.fireVectors, Global.fireUpgrades[3]);
				Global.fireUpgrades[2] = Global.fireValues[Global.fireUpgrades[4]];
				If(Is True For Any(Global.fireCode, Current Array Element == Global.fireUpgrades[2]));
					Global.fireBool[Global.fireUpgrades[4]] = True;
					Global.fireUpgrades[5] -= 1;
					Play Effect(Event Player, Buff Impact Sound, Color(White), Position Of(Event Player), 200);
					If(Global.fireUpgrades[5] <= 0);
						Play Effect(All Players(All Teams), Doomfist Meteor Strike Impact Sound, Color(Team 2), Position Of(Event Player), 200);
						Big Message(All Players(All Teams), Custom String("{0} has lit the torches", Event Player));
						Global.FireParts = 5;
						Global.ShadowVectors[45] += 1;
						Global.fireUpgrades[1] = 49;
						Global.fireUpgrades[4] = 0;
						While(Global.fireUpgrades[1] <= 61);
							Destroy Effect(Global.EasterEggEffects[Global.fireUpgrades[1]]);
							Global.fireUpgrades[1] += 1;
							Destroy In-World Text(Global.EasterEggEffects[Global.fireUpgrades[1]]);
							Global.fireUpgrades[1] += 1;
							Play Effect(All Players(Team 1), Ashe Dynamite Explosion Effect, Color(Team 2), Global.fireVectors[Global.fireUpgrades[4]], 1);
							Global.fireUpgrades[4] += 1;
							Wait(0.200, Ignore Condition);
						End;
						Global.fireUpgrades[1] = 69;
						While(Global.fireUpgrades[1] <= 75);
							Destroy In-World Text(Global.EasterEggEffects[Global.fireUpgrades[1]]);
							Global.fireUpgrades[1] += 1;
							Wait(0.100, Ignore Condition);
						End;
						Global.fireVectors = 0;
						Global.fireValues = 0;
						Global.fireBool = 0;
						Global.fireCopy = 0;
						Global.fireCode = 0;
					End;
					Abort;
				Else;
					Play Effect(Event Player, Debuff Impact Sound, Color(White), Position Of(Event Player), 200);
					Global.fireUpgrades[5] = 4;
					Global.fireUpgrades[1] = 0;
					While(Global.fireUpgrades[1] < 6);
						Global.fireCopy[Global.fireUpgrades[1]] = Global.fireValues[Global.fireUpgrades[1]];
						Global.fireBool[Global.fireUpgrades[1]] = False;
						Global.fireUpgrades[1] += 1;
						Wait(0.100, Ignore Condition);
					End;
					Global.fireUpgrades[1] = 0;
					While(Global.fireUpgrades[1] < 4);
						Global.fireCode[Global.fireUpgrades[1]] = Random Value In Array(Global.fireCopy);
						Modify Global Variable(fireCopy, Remove From Array By Value, Global.fireCode[Global.fireUpgrades[1]]);
						Global.fireUpgrades[1] += 1;
						Wait(0.100, Ignore Condition);
					End;
					Abort;
				End;
			End;
		End;
		"Wind Chamber Puzzle"
		If(Is True For Any(Global.windVectors, Distance Between(Event Player, Current Array Element) <= 2));
			If(Global.WindParts == 3 && Hero Of(Event Player) == Hero(Hanzo));
				Global.windUpgrades[3] = Sorted Array(Global.windVectors, Distance Between(Event Player, Current Array Element))[0];
				Global.windUpgrades[4] = Index Of Array Value(Global.windVectors, Global.windUpgrades[3]);
				Global.windCopy[Global.windUpgrades[4]] += 1;
				Skip If(Global.windCopy[Global.windUpgrades[4]] <= 3, 1);
				Global.windCopy[Global.windUpgrades[4]] = 0;
				Global.windUpgrades[5] -= 1;
				If(Is True For All(Global.windCopy, Current Array Element == Global.windUpgrades[2]));
					Play Effect(All Players(All Teams), Doomfist Rising Uppercut Impact Sound, Color(Team 2), Position Of(Event Player), 500);
					Big Message(All Players(All Teams), Custom String("{0} finished the chamber puzzle", Event Player));
					Global.WindParts = 4;
					Global.ShadowVectors[45] += 1;
					Destroy In-World Text(Global.EasterEggEffects[90]);
					Global.windUpgrades[1] = 82;
					Global.windUpgrades[4] = 0;
					While(Global.windUpgrades[1] <= 89);
						Destroy Effect(Global.EasterEggEffects[Global.windUpgrades[1]]);
						Global.windUpgrades[1] += 1;
						Destroy In-World Text(Global.EasterEggEffects[Global.windUpgrades[1]]);
						Global.windUpgrades[1] += 1;
						Play Effect(All Players(Team 1), Good Pickup Effect, Color(Yellow), Global.windVectors[Global.windUpgrades[4]], 1);
						Global.windUpgrades[4] += 1;
						Wait(0.200, Ignore Condition);
					End;
					Global.windUpgrades[4] = 6;
					Global.windUpgrades[2] = 0;
					Global.windUpgrades[3] = Global.windVectors[6];
					Global.windUpgrades[1] = 0;
					Global.windValues = 0;
					Global.windCopy = 0;
					Abort;
				End;
				If(Global.windUpgrades[5] <= 0);
					Global.windUpgrades[5] = 16;
					Global.windUpgrades[2] = Random Value In Array(Global.windValues);
					Play Effect(Event Player, Debuff Impact Sound, Color(White), Position Of(Event Player), 200);
				End;
			End;
		End;
		"Wind Altar"
		If(Distance Between(Event Player, Global.PerkVectors[15]) <= 2);
			If(Hero Of(Event Player) == Hero(Hanzo) && Event Player.WindEssence >= 1);
				If(Global.ShadowVectors[44] == 1);
					If(Global.WindParts == 5);
						Global.WindParts = 6;
						Global.ShadowVectors[45] += 1;
						Big Message(Event Player, Custom String("Interact with Altar when ready to begin"));
					Else If(Global.WindParts == 6);
						Event Player.AltarKills = 31;
						Global.windUpgrades[5] = 31;
						Global.windUpgrades[0] = True;
						Call Subroutine(AltarUpgrade);
						Global.windUpgrades[0] = False;
						Abort If(Event Player.AltarKills != 0);
						Global.WindParts = 7;
						Event Player.WindEssence = 3;
						Event Player.Charges = 15;
						Big Message(All Players(All Teams), Custom String("{0} claimed Boreas' Fury", Event Player));
						Destroy Effect(Global.EasterEggEffects[94]);
						Destroy Effect(Global.EasterEggEffects[95]);
					End;
				Else If(Global.ShadowVectors[44] == 2);
					If(Global.iceBool == 2 && Global.ShadowVectors[49] == False);
						Global.ShadowVectors[49] = True;
						Event Player.WindEssence = 0;
						Call Subroutine(AltarPlace);
						Abort;
					Else;
						Call Subroutine(AltarFail);
						Abort;
					End;
				End;
			End;
		End;
		"Ice Altar"
		If(Distance Between(Event Player, Global.PerkVectors[11]) <= 2);
			If(Hero Of(Event Player) == Hero(Hanzo) && Event Player.IceEssence >= 1);
				If(Global.ShadowVectors[44] == 1);
					If(Global.IceParts == 5);
						Global.IceParts = 6;
						Global.ShadowVectors[45] += 1;
						Big Message(Event Player, Custom String("Interact with Altar when ready to begin"));
					Else If(Global.IceParts == 6);
						Event Player.AltarKills = 31;
						Global.iceUpgrades[5] = 31;
						Global.iceUpgrades[0] = True;
						Call Subroutine(AltarUpgrade);
						Global.iceUpgrades[0] = False;
						Abort If(Event Player.AltarKills != 0);
						Global.IceParts = 7;
						Event Player.IceEssence = 3;
						Event Player.Charges = 9;
						Big Message(All Players(All Teams), Custom String("{0} claimed Ull's Arrow", Event Player));
						Destroy Effect(Global.EasterEggEffects[43]);
						Destroy Effect(Global.EasterEggEffects[44]);
					End;
				Else If(Global.ShadowVectors[44] == 2);
					If(Global.iceBool == 0 && Global.ShadowVectors[47] == False);
						Global.ShadowVectors[47] = True;
						Event Player.IceEssence = 0;
						Call Subroutine(AltarPlace);
						Abort;
					Else;
						Call Subroutine(AltarFail);
						Abort;
					End;
				End;
			End;
		End;
		"Fire Altar"
		If(Distance Between(Event Player, Global.PerkVectors[13]) <= 2);
			If(Hero Of(Event Player) == Hero(Hanzo) && Event Player.FireEssence >= 1);
				If(Global.ShadowVectors[44] == 1);
					If(Global.FireParts == 5);
						Global.FireParts = 6;
						Global.ShadowVectors[45] += 1;
						Big Message(Event Player, Custom String("Interact with Altar when ready to begin"));
					Else If(Global.FireParts == 6);
						Event Player.AltarKills = 31;
						Global.fireUpgrades[5] = 31;
						Global.fireUpgrades[0] = True;
						Call Subroutine(AltarUpgrade);
						Global.fireUpgrades[0] = False;
						Abort If(Event Player.AltarKills != 0);
						Global.FireParts = 7;
						Event Player.FireEssence = 3;
						Event Player.Charges = 12;
						Big Message(All Players(All Teams), Custom String("{0} claimed Kagutsuchi's Blood", Event Player));
						Destroy Effect(Global.EasterEggEffects[76]);
						Destroy Effect(Global.EasterEggEffects[77]);
					End;
				Else If(Global.ShadowVectors[44] == 2);
					If(Global.iceBool == 1 && Global.ShadowVectors[48] == False);
						Global.ShadowVectors[48] = True;
						Event Player.FireEssence = 0;
						Call Subroutine(AltarPlace);
						Abort;
					Else;
						Call Subroutine(AltarFail);
						Abort;
					End;
				End;
			End;
		End;
		"Lightning Piano"
		If(Is True For Any(Global.lightningVectors, Distance Between(Event Player, Current Array Element) <= 2));
			If(Global.LightningParts == 3 && Hero Of(Event Player) == Hero(Hanzo));
				Global.lightningUpgrades[3] = Sorted Array(Global.lightningVectors, Distance Between(Event Player, Current Array Element))[0];
				Global.lightningUpgrades[4] = Index Of Array Value(Global.lightningVectors, Global.lightningUpgrades[3]);
				Global.lightningUpgrades[5] -= 1;
				Global.lightningBool[Global.lightningUpgrades[4]] = True;
				Global.lightningUpgrades[7] += Global.lightningUpgrades[4] + 1;
				If(Global.lightningUpgrades[5] <= 0);
					If(Global.lightningUpgrades[7] == Global.lightningUpgrades[2]);
						Global.lightningUpgrades[6] -= 1;
						Play Effect(Event Player, Buff Impact Sound, Color(White), Position Of(Event Player), 200);
						If(Global.lightningUpgrades[6] <= 0);
							Play Effect(All Players(All Teams), Doomfist Rising Uppercut Leap Sound, Color(Team 2), Position Of(Event Player), 200);
							Big Message(All Players(All Teams), Custom String("{0} Played the perfect chords", Event Player));
							Global.LightningParts = 4;
							Global.ShadowVectors[45] += 1;
							Destroy In-World Text(Global.EasterEggEffects[112]);
							Global.lightningUpgrades[1] = 100;
							Global.lightningUpgrades[4] = 0;
							While(Global.lightningUpgrades[1] <= 111);
								Destroy Effect(Global.EasterEggEffects[Global.lightningUpgrades[1]]);
								Global.lightningUpgrades[1] += 1;
								Play Effect(All Players(Team 1), Sombra Translocator Reappear Effect, Color(Team 1),
									Global.lightningVectors[Global.lightningUpgrades[4]], 1);
								Global.lightningUpgrades[4] += 1;
								Wait(0.200, Ignore Condition);
							End;
							Global.lightningUpgrades[1] = 0;
							Global.lightningBool = Empty Array;
							While(Global.lightningUpgrades[1] < 6);
								Global.lightningBool[Global.lightningUpgrades[1]] = False;
								Global.lightningUpgrades[1] += 1;
								Wait(0.100, Ignore Condition);
							End;
							Global.lightningUpgrades[2] = Random Value In Array(Global.lightningValues);
							Global.lightningSums = 0;
							Abort;
						End;
						Global.lightningUpgrades[2] = Random Value In Array(Global.lightningSums);
						Modify Global Variable(lightningSums, Remove From Array By Value, Global.lightningUpgrades[2]);
						Global.lightningUpgrades[1] = 0;
						While(Global.lightningUpgrades[1] < 12);
							Global.lightningBool[Global.lightningUpgrades[1]] = False;
							Global.lightningUpgrades[1] += 1;
							Wait(0.100, Ignore Condition);
						End;
						Global.lightningUpgrades[7] = 0;
						Global.lightningUpgrades[5] = 3;
						Abort;
					Else;
						Play Effect(Event Player, Debuff Impact Sound, Color(White), Position Of(Event Player), 200);
						Global.lightningUpgrades[1] = 0;
						Global.lightningUpgrades[7] = 0;
						Global.lightningUpgrades[5] = 3;
						Global.lightningUpgrades[6] = 3;
						Global.lightningSums[0] = 17;
						Global.lightningSums[1] = 22;
						Global.lightningSums[2] = 18;
						Global.lightningSums[3] = 12;
						Global.lightningUpgrades[2] = Random Value In Array(Global.lightningSums);
						Modify Global Variable(lightningSums, Remove From Array By Value, Global.lightningUpgrades[2]);
						While(Global.lightningUpgrades[1] < 12);
							Global.lightningBool[Global.lightningUpgrades[1]] = False;
							Global.lightningUpgrades[1] += 1;
							Wait(0.100, Ignore Condition);
						End;
						Abort;
					End;
				End;
				Abort;
			Else If(Global.LightningParts == 4);
				Global.lightningUpgrades[3] = Sorted Array(Global.lightningVectors, Distance Between(Event Player, Current Array Element))[0];
				Global.lightningUpgrades[4] = Index Of Array Value(Global.lightningVectors, Global.lightningUpgrades[3]);
				Global.lightningBool[Global.lightningUpgrades[4] - 14] = False;
				Global.lightningCopy[Global.lightningUpgrades[4] - 14] += 1;
				Skip If(Global.lightningCopy[Global.lightningUpgrades[4] - 14] <= 15, 1);
				Global.lightningCopy[Global.lightningUpgrades[4] - 14] = 12;
				Skip If(Global.lightningCopy[Global.lightningUpgrades[4] - 14] != Global.lightningUpgrades[2], 1);
				Global.lightningBool[Global.lightningUpgrades[4] - 14] = True;
				If(Is True For All(Global.lightningBool, Current Array Element == True));
					Play Effect(All Players(All Teams), Doomfist Rising Uppercut Leap Sound, Color(Team 2), Position Of(Event Player), 200);
					Big Message(All Players(All Teams), Custom String("Kimat is pleased by this surge of power"));
					Global.LightningParts = 5;
					Global.ShadowVectors[45] += 1;
					Destroy In-World Text(Global.EasterEggEffects[113]);
					Global.lightningUpgrades[1] = 114;
					Global.lightningUpgrades[4] = 0;
					While(Global.lightningUpgrades[1] <= 124);
						Destroy Effect(Global.EasterEggEffects[Global.lightningUpgrades[1]]);
						Global.lightningUpgrades[1] += 1;
						Destroy In-World Text(Global.EasterEggEffects[Global.lightningUpgrades[1]]);
						Global.lightningUpgrades[1] += 1;
						Play Effect(All Players(Team 1), Sombra Translocator Reappear Effect, Color(Team 1),
							Global.lightningVectors[Global.lightningUpgrades[4]], 1);
						Global.lightningUpgrades[4] += 1;
						Wait(0.200, Ignore Condition);
					End;
					Global.lightningVectors = 0;
					Global.lightningValues = 0;
					Global.lightningBool = 0;
					Global.lightningCopy = 0;
					Abort;
				End;
				Abort;
			End;
		End;
		"Lightning Altar"
		If(Distance Between(Event Player, Global.PerkVectors[17]) <= 2);
			If(Hero Of(Event Player) == Hero(Hanzo) && Event Player.LightningEssence >= 1);
				If(Global.ShadowVectors[44] == 1);
					If(Global.LightningParts == 5);
						Global.LightningParts = 6;
						Global.ShadowVectors[45] += 1;
						Big Message(Event Player, Custom String("Interact with Altar when ready to begin"));
					Else If(Global.LightningParts == 6);
						Event Player.AltarKills = 31;
						Global.lightningUpgrades[5] = 31;
						Global.lightningUpgrades[0] = True;
						Call Subroutine(AltarUpgrade);
						Global.lightningUpgrades[0] = False;
						Abort If(Event Player.AltarKills != 0);
						Global.LightningParts = 7;
						Event Player.LightningEssence = 3;
						Event Player.Charges = 6;
						Big Message(All Players(All Teams), Custom String("{0} claimed Kimat's Bite", Event Player));
						Destroy Effect(Global.EasterEggEffects[126]);
						Destroy Effect(Global.EasterEggEffects[127]);
					End;
				Else If(Global.ShadowVectors[44] == 2);
					If(Global.iceBool == 3 && Global.ShadowVectors[50] == False);
						Global.ShadowVectors[50] = True;
						Event Player.LightningEssence = 0;
						Call Subroutine(AltarPlace);
						Abort;
					Else;
						Call Subroutine(AltarFail);
						Abort;
					End;
				End;
			End;
		End;
		"Shadow Pin"
		If(Is True For Any(Global.shadowVectors, Distance Between(Event Player, Current Array Element) <= 2));
			If(Global.ShadowParts == 3 && Hero Of(Event Player) == Hero(Hanzo));
				Global.shadowUpgrades[3] = Sorted Array(Global.shadowVectors, Distance Between(Event Player, Current Array Element))[0];
				Global.shadowUpgrades[4] = Index Of Array Value(Global.shadowVectors, Global.shadowUpgrades[3]);
				Global.shadowCopy[Global.shadowUpgrades[4]] += 1;
				Skip If(Global.shadowCopy[Global.shadowUpgrades[4]] <= 9, 1);
				Global.shadowCopy[Global.shadowUpgrades[4]] = 0;
				If(Global.shadowUpgrades[2] == 100 * Global.shadowCopy[2] + 10 * Global.shadowCopy[1] + Global.shadowCopy[0]);
					Play Effect(All Players(All Teams), Orisa Halt Implosion Sound, Color(Team 2), Position Of(Event Player), 200);
					Big Message(All Players(All Teams), Custom String("{0} Revealed the Erebus Sequence", Event Player));
					Global.ShadowParts = 4;
					Global.ShadowVectors[45] += 1;
					Global.shadowUpgrades[1] = 132;
					Global.shadowUpgrades[4] = 0;
					While(Global.shadowUpgrades[1] <= 139);
						Destroy Effect(Global.EasterEggEffects[Global.shadowUpgrades[1]]);
						Global.shadowUpgrades[1] += 1;
						Destroy In-World Text(Global.EasterEggEffects[Global.shadowUpgrades[1]]);
						Global.shadowUpgrades[1] += 1;
						Play Effect(All Players(Team 1), Sigma Hypersphere Implosion Effect, Color(Team 2), Global.shadowVectors[Global.shadowUpgrades[4]],
							1);
						Global.shadowUpgrades[4] += 1;
						Wait(0.200, Ignore Condition);
					End;
					Global.shadowUpgrades[5] = 3;
					Global.shadowValues = 0;
					Global.shadowCopy = 0;
					Global.shadowSums = 0;
				End;
				Abort;
			End;
		End;
		"Shadow Altar"
		If(Distance Between(Event Player, Global.PerkVectors[19]) <= 2);
			If(Hero Of(Event Player) == Hero(Hanzo) && Event Player.ShadowEssence >= 1);
				If(Global.ShadowVectors[44] == 1);
					If(Global.ShadowParts == 5);
						Global.ShadowParts = 6;
						Global.ShadowVectors[45] += 1;
						Big Message(Event Player, Custom String("Interact with Altar when ready to begin"));
					Else If(Global.ShadowParts == 6);
						Event Player.AltarKills = 31;
						Global.shadowUpgrades[5] = 31;
						Global.shadowUpgrades[0] = True;
						Event Player.Ammo = 45;
						Call Subroutine(AltarUpgrade);
						Global.shadowUpgrades[0] = False;
						Abort If(Event Player.AltarKills != 0);
						Global.ShadowParts = 7;
						Event Player.ShadowEssence = 3;
						Event Player.Charges = 18;
						Big Message(All Players(All Teams), Custom String("{0} claimed Erebus' Dread", Event Player));
						Destroy Effect(Global.EasterEggEffects[146]);
						Destroy Effect(Global.EasterEggEffects[147]);
					End;
				Else If(Global.ShadowVectors[44] == 2);
					If(Global.iceBool == 4 && Global.ShadowVectors[51] == False);
						Global.ShadowVectors[51] = True;
						Event Player.ShadowEssence = 0;
						Call Subroutine(AltarPlace);
						Abort;
					Else;
						Call Subroutine(AltarFail);
						Abort;
					End;
				End;
			End;
		End;
		"Venom Altar"
		If(Distance Between(Event Player, Global.PerkVectors[21]) <= 2);
			If(Hero Of(Event Player) == Hero(Hanzo) && Event Player.VenomEssence >= 1);
				If(Global.ShadowVectors[44] == 1);
					If(Global.VenomParts == 5);
						Global.VenomParts = 6;
						Global.ShadowVectors[45] += 1;
						Big Message(Event Player, Custom String("Interact with Altar when ready to begin"));
					Else If(Global.VenomParts == 6);
						Event Player.AltarKills = 31;
						Global.venomUpgrades[5] = 31;
						Global.venomUpgrades[0] = True;
						Call Subroutine(AltarUpgrade);
						Global.venomUpgrades[0] = False;
						Abort If(Event Player.AltarKills != 0);
						Global.VenomParts = 7;
						Event Player.VenomEssence = 3;
						Event Player.Charges = 3;
						Big Message(All Players(All Teams), Custom String("{0} claimed Manasa's Fang", Event Player));
						Destroy Effect(Global.EasterEggEffects[152]);
						Destroy Effect(Global.EasterEggEffects[153]);
					End;
				Else If(Global.ShadowVectors[44] == 2);
					If(Global.iceBool == 5 && Global.ShadowVectors[52] == False);
						Global.ShadowVectors[52] = True;
						Event Player.VenomEssence = 0;
						Call Subroutine(AltarPlace);
						Abort;
					Else;
						Call Subroutine(AltarFail);
						Abort;
					End;
				Else If(Global.ShadowVectors[44] == 3);
					If(Global.fireCode == False);
						Play Effect(All Players(Team 1), Buff Impact Sound, Color(White), Position Of(Event Player), 200);
						Big Message(All Players(All Teams), Custom String("G Strike Primed"));
						All Players(Team 1).Slabs[4] = 1;
						Global.fireBool = True;
						Global.fireCode = True;
						Global.fireValues = Random Value In Array(Global.fireVectors);
						Big Message(All Players(All Teams), Custom String("You have {0} seconds to launch", 60 / Number Of Players(Team 1)));
						Wait Until(Global.ShadowVectors[44] == 4, 60 / Number Of Players(Team 1));
						Global.fireBool = False;
						Abort If(Global.ShadowVectors[44] == 4);
						Big Message(All Players(All Teams), Custom String("G Strike Cooling down"));
						Wait Until(Global.Kills == 0, 300);
						Global.fireCode = False;
						Big Message(All Players(All Teams), Custom String("G Strike Ready"));
						Abort;
					End;
				End;
			End;
		End;
	}
}

disabled rule("PowerUp Pickup")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Global.Rolling == True;
		Distance Between(Event Player, Global.PositionDrops) <= 2;
		(Global.Double || Global.Nuke || Global.Max || Global.Insta) == 2;
	}

	actions
	{
		Global.PositionDrops = Global.MagicVectors[0];
		Play Effect(All Players(All Teams), Tracer Recall Disappear Effect, Color(Team 1), Position Of(Event Player), 1);
		Play Effect(All Players(All Teams), Buff Explosion Sound, Color(White), Position Of(Event Player), 200);
		Wait(0.500, Ignore Condition);
		"Max Ammo Pickup"
		If(Global.Max == 2);
			All Players(Team 1).MaxAmmo = True;
			Big Message(All Players(All Teams), Custom String("Max Ammo!"));
			Global.Max = 0;
			Global.Rolling = False;
		Else If(Global.Nuke == 2);
			Big Message(All Players(Team 1), Custom String("KaBoom!!"));
			Set Status(All Players(Team 2), Null, Burning, 3.200);
			Set Status(All Players(Team 1), Null, Phased Out, 3.200);
			Heal(All Players(Team 1), Event Player, 100000);
			Global.Nuke = 0;
			Wait(3, Ignore Condition);
			All Players(Team 1).Points += 400;
			Kill(Players On Hero(Hero(Reaper), Team 2), Event Player);
			Damage(All Players(Team 2), Event Player, 5000 / Event Player.DamageRank);
			Wait(1, Ignore Condition);
			If(Global.Kills <= 0);
				Global.Kills = 1;
			End;
			Respawn(All Dead Players(Team 2));
			Global.Rolling = False;
		Else If(Global.Insta == 2);
			Big Message(All Players(All Teams), Custom String("Instakill!"));
			Global.Insta = 1;
			Wait(35, Ignore Condition);
			Global.Rolling = False;
			Global.Insta = 0;
		Else If(Global.Double == 2);
			Big Message(All Players(All Teams), Custom String("Double Points!"));
			Global.Dub = 2;
			Global.Double = 0;
			Wait(60, Ignore Condition);
			Global.Dub = 1;
			Global.Rolling = False;
		End;
	}
}

disabled rule("PowerUp Timeout")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global.Rolling == True;
		(Global.Double || Global.Nuke || Global.Max || Global.Insta) == 2;
	}

	actions
	{
		Wait(60, Abort When False);
		Global.Rolling = False;
		Global.Max = 0;
		Global.Nuke = 0;
		Global.Insta = 0;
		Global.Double = 0;
		Global.PositionDrops = Global.MagicVectors[0];
	}
}

rule("Teleporters Mechanics")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Is True For Any(Global.TeleArray, Distance Between(Current Array Element, Event Player) <= 2) == True;
		Global.Round > 1;
	}

	actions
	{
		"Tablet Purity"
		Skip If(Event Player.Slabs[1] != 2, 2);
		Event Player.Slabs[3] = False;
		Small Message(Event Player, Custom String("Tablet Tainted"));
		Event Player.VectorFetch[0] = Sorted Array(Global.TeleArray, Distance Between(Event Player, Current Array Element))[0];
		Event Player.VectorFetch[1] = Index Of Array Value(Global.TeleArray, Event Player.VectorFetch[0]);
		If(Event Player.VectorFetch[1] % 2 == 0);
			Teleport(Event Player, Global.TeleArray[Event Player.VectorFetch[1] + 1]);
		Else;
			Teleport(Event Player, Global.TeleArray[Event Player.VectorFetch[1] - 1]);
		End;
		Wait(1.500, Ignore Condition);
		Call Subroutine(SpawnResets);
		Skip If(Global.ShadowVectors[44] != 4, 1);
		Teleport(Event Player, Global.PurgeVectors[0]);
	}
}

rule("Blocked Vectors Mechanics")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Global.GenL + Global.GenR < 6;
		Global.Lockdown == False;
		Is True For Any(Global.BlockedVectors, Distance Between(Current Array Element, Event Player) <= 35) == True;
		Is Alive(Event Player) == True;
	}

	actions
	{
		"Security Center | Castle Entry 1 [0, 1]"
		If(Distance Between(Event Player, Global.BlockedVectors[0]) <= Global.BlockedVectors[1]);
			If(Global.DoorsRight1 < 1);
				Apply Impulse(Event Player, Direction Towards(Global.BlockedVectors[0], Event Player), 35, To World, Cancel Contrary Motion);
				Wait(0.100, Ignore Condition);
				Loop If(Distance Between(Event Player, Global.BlockedVectors[0]) <= Global.BlockedVectors[1]);
			End;
		End;
		"Security Center | Castle Entry 2 [2, 3]"
		If(Distance Between(Event Player, Global.BlockedVectors[2]) <= Global.BlockedVectors[3]);
			If(Global.DoorsRight1 < 1);
				Apply Impulse(Event Player, Direction Towards(Global.BlockedVectors[2], Event Player), 15, To World, Cancel Contrary Motion);
				Wait(0.100, Ignore Condition);
				Loop If(Distance Between(Event Player, Global.BlockedVectors[2]) <= Global.BlockedVectors[3]);
			End;
		End;
		"? | ? [4, 5]"
		If(Distance Between(Event Player, Global.BlockedVectors[4]) <= Global.BlockedVectors[5]);
			If(Global.DoorsLeft1 < 5);
				Apply Impulse(Event Player, Direction Towards(Global.BlockedVectors[4], Event Player), 35, To World, Cancel Contrary Motion);
				Wait(0.100, Ignore Condition);
				Loop If(Distance Between(Event Player, Global.BlockedVectors[4]) <= Global.BlockedVectors[5]);
			End;
		End;
		"Castle Entry | Throne Room [6, 7]"
		If(Distance Between(Event Player, Global.BlockedVectors[6]) <= Global.BlockedVectors[7]);
			If(Global.DoorsRight1 < 4);
				Apply Impulse(Event Player, Direction Towards(Global.BlockedVectors[6], Event Player), 35, To World, Cancel Contrary Motion);
				Wait(0.100, Ignore Condition);
				Loop If(Distance Between(Event Player, Global.BlockedVectors[6]) <= Global.BlockedVectors[7]);
			End;
		End;
		"? [8, 9]"
		If(Distance Between(Event Player, Global.BlockedVectors[8]) <= Global.BlockedVectors[9]);
			If(Global.GenL < 3 || Global.GenR < 3);
				Apply Impulse(Event Player, Direction Towards(Global.BlockedVectors[8], Event Player), 35, To World, Cancel Contrary Motion);
				Wait(0.100, Ignore Condition);
				Loop If(Distance Between(Event Player, Global.BlockedVectors[8]) <= Global.BlockedVectors[9]);
			End;
		End;
		"? [10, 11]"
		If(Distance Between(Event Player, Global.BlockedVectors[10]) <= Global.BlockedVectors[11]);
			If(Global.GenL < 1 || Global.GenR < 3);
				Apply Impulse(Event Player, Direction Towards(Global.BlockedVectors[10], Event Player), 35, To World, Cancel Contrary Motion);
				Wait(0.100, Ignore Condition);
				Loop If(Distance Between(Event Player, Global.BlockedVectors[10]) <= Global.BlockedVectors[11]);
			End;
		End;
		Wait(0.500, Ignore Condition);
		Loop If Condition Is True;
	}
}

disabled rule("=======Player Mechanics=======")
{
	event
	{
		Ongoing - Global;
	}
}

disabled rule("Ult Ready")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Event Player.Ready == False;
		Ultimate Charge Percent(Event Player) == 100;
		Event Player.UCK >= 100;
	}

	actions
	{
		Event Player.Ready = True;
	}
}

disabled rule("Ult Save")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Is Using Ultimate(Event Player) == True;
		Event Player.UCK >= 100;
	}

	actions
	{
		Event Player.UCK = 0;
		Wait(3, Ignore Condition);
		Event Player.Ready = False;
	}
}

disabled rule("Hero Switch Controls")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Ultimate)) == True;
		Ultimate Charge Percent(Event Player) != 100;
		Event Player.Ready == False;
		Event Player.HeroLimit >= 2;
		Event Player.Packing == False;
		Is Alive(Event Player) == True;
		Has Status(Event Player, Knocked Down) == False;
	}

	actions
	{
		Event Player.Switching = 2;
		Call Subroutine(HeroSwitch);
		Wait(1.500 - Event Player.SpeedCola, Ignore Condition);
		Preload Hero(Event Player, Event Player.Heroes[0]);
	}
}

disabled rule("Hero Switch Mechanics")
{
	event
	{
		Subroutine;
		HeroSwitch;
	}

	actions
	{
		If(Hero Of(Event Player) == Hero(Hanzo));
			Global.ShadowVectors[Event Player.ShadowEssence >= 1 ? 31 : (Event Player.VenomEssence >= 1 ? 32 : (
				Event Player.IceEssence >= 1 ? 33 : (Event Player.FireEssence >= 1 ? 34 : (Event Player.WindEssence >= 1 ? 35 : (
				Event Player.LightningEssence >= 1 ? 36 : 37)))))] = Event Player.Ammo;
		End;
		Stop Forcing Player Outlines(Event Player, All Players(All Teams));
		Event Player.Routing = True;
		If(Event Player.Switching == 2);
			Event Player.Storage = Empty Array;
			Modify Player Variable(Event Player, Storage, Append To Array, Health(Event Player));
			Modify Player Variable(Event Player, Heroes, Append To Array, Hero Of(Event Player));
			Modify Player Variable(Event Player, Heroes, Append To Array, Event Player.Ammo);
			Modify Player Variable(Event Player, Heroes, Append To Array, Event Player.Pack);
			Modify Player Variable(Event Player, Heroes, Append To Array, Event Player.Repack);
			Modify Player Variable(Event Player, Heroes, Append To Array, Event Player.AV);
			Start Forcing Player To Be Hero(Event Player, Event Player.Heroes[0]);
			Event Player.Ammo = Event Player.Heroes[1];
			Event Player.Pack = Event Player.Heroes[2];
			Event Player.Repack = Event Player.Heroes[3];
			Modify Player Variable(Event Player, Heroes, Remove From Array By Index, 0);
			Modify Player Variable(Event Player, Heroes, Remove From Array By Index, 0);
			Modify Player Variable(Event Player, Heroes, Remove From Array By Index, 0);
			Modify Player Variable(Event Player, Heroes, Remove From Array By Index, 0);
			Modify Player Variable(Event Player, Heroes, Remove From Array By Index, 0);
			Set Player Health(Event Player, Event Player.Storage[0]);
			Event Player.Switching = 1;
			Event Player.Swash = True;
		End;
		If(Event Player.Switching == 1);
			Event Player.Ready = False;
			If(Event Player.Pack == 1 || Event Player.Ammo <= 0);
				Set Ability 1 Enabled(Event Player, False);
				Set Secondary Fire Enabled(Event Player, False);
				Set Ability 2 Enabled(Event Player, False);
			Else If(Event Player.Pack >= 3 && Event Player.Ammo > 0);
				Set Ability 1 Enabled(Event Player, True);
				Set Ability 2 Enabled(Event Player, True);
				Set Secondary Fire Enabled(Event Player, True);
			End;
			Call Subroutine(HeroStats);
			"Hero Mech (Below Hero S SR)"
			Event Player.Reset = 100 * Event Player.DamageRank * Event Player.Pack;
			Wait(0.100, Ignore Condition);
			Set Damage Dealt(Event Player, Event Player.Reset);
			Set Move Speed(Event Player, 100 * Event Player.Speed + 50 * Event Player.StaminaUp);
			Set Gravity(Event Player, Event Player.Grav * 100 - Event Player.PHD * 10);
			Event Player.Switching = 0;
			Event Player.Swash = False;
			Event Player.Routing = False;
			Event Player.Ready = False;
			Event Player.DTON = 0;
			Set Ultimate Charge(Event Player, Event Player.UCK);
			If(Event Player.Ammo > Event Player.AV);
				Event Player.Ammo = Event Player.AV;
			End;
			Skip If(Event Player.Galva == True, 2);
			Skip If(Event Player.Ammo > 0, 1);
			Set Damage Dealt(Event Player, 100 / Event Player.DamageRank);
			Abort;
		End;
	}
}

disabled rule("Hero Switch Stats")
{
	event
	{
		Subroutine;
		HeroStats;
	}

	actions
	{
		Event Player.BurstA = 1;
		Event Player.BurstB = 1;
		Event Player.Speed = 1;
		Event Player.Grav = 1;
		Event Player.FRB = 1;
		"McCree"
		If(Hero Of(Event Player) == Hero(Cassidy));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 80;
			Set Ammo(Event Player, 0, Event Player.Pack == 3 ? 50 : 8);
			Set Max Ammo(Event Player, 0, Event Player.Pack == 3 ? 50 : 8);
			Event Player.DamageRank = Event Player.Pack == 3 ? 55 : 0.250;
			Event Player.AV = Event Player.Pack == 3 ? 150 : 80;
			Event Player.FRA = 0.500;
			Event Player.FRB = 0.110;
			Event Player.Speed = 1.400;
			Event Player.Grav = 1.150;
			Abort;
		End;
		"Ashe"
		If(Hero Of(Event Player) == Hero(Ashe));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 64;
			Event Player.DamageRank = Event Player.Pack == 3 ? 20 : 2;
			Set Ammo(Event Player, 0, 8 * Event Player.Pack);
			Set Max Ammo(Event Player, 0, 8 * Event Player.Pack);
			Event Player.Grav = 1.050;
			Event Player.AV = 64 * Event Player.Pack;
			Set Secondary Fire Enabled(Event Player, True);
			Event Player.FRA = 0.250;
			Event Player.FRB = 1.500;
			Event Player.Speed = 0.850;
			Event Player.AmmoPrice = 250;
			Abort;
		End;
		"Reaps"
		If(Hero Of(Event Player) == Hero(Reaper));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 32;
			Event Player.DamageRank = 3.350 * Event Player.Pack;
			Set Ammo(Event Player, 0, 2);
			Set Max Ammo(Event Player, 0, 2);
			Event Player.AV = 32 * Event Player.Pack;
			Event Player.BurstB = 4;
			Event Player.FRA = 0.500;
			Event Player.FRB = 8;
			Event Player.Speed = 1.200;
			Event Player.AmmoPrice = 250;
			Abort;
		End;
		"Pharah"
		If(Hero Of(Event Player) == Hero(Pharah));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 20;
			Event Player.Grav = Event Player.Pack == 3 ? 0.300 : 1.500;
			Event Player.AV = 20 * Event Player.Pack;
			Event Player.DamageRank = Event Player.Pack == 3 ? 35 : 1.500;
			Set Ammo(Event Player, 0, Event Player.Pack == 3 ? 10 : 1);
			Set Max Ammo(Event Player, 0, Event Player.Pack == 3 ? 10 : 1);
			Event Player.BurstB = 0;
			Event Player.FRA = 0.840;
			Event Player.FRB = 4;
			Event Player.Speed = Event Player.Pack == 3 ? 1.700 : 0.700;
			Abort;
		End;
		"Zarya"
		If(Hero Of(Event Player) == Hero(Zarya));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 450;
			Event Player.DamageRank = 12000 * Event Player.Pack;
			Set Ammo(Event Player, 0, 150 * Event Player.Pack);
			Set Max Ammo(Event Player, 0, 150 * Event Player.Pack);
			Event Player.Grav = 1.500;
			Event Player.AV = Event Player.Pack == 3 ? 1100 : 450;
			Event Player.BurstB = 25;
			Event Player.FRA = 0.050;
			Event Player.Speed = 0.500;
			Abort;
		End;
		"Bastion"
		If(Hero Of(Event Player) == Hero(Bastion));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 350;
			Event Player.DamageRank = Event Player.Pack == 3 ? 45 : 9.500;
			Set Ammo(Event Player, 0, 35);
			Set Max Ammo(Event Player, 0, 35);
			Event Player.AV = Event Player.Pack == 3 ? 490 : 350;
			Event Player.BurstB = -5;
			Event Player.FRA = 0.125;
			Event Player.FRB = 0.028;
			Event Player.Speed = 1.100;
			Abort;
		End;
		"Brigette"
		If(Hero Of(Event Player) == Hero(Brigitte));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 1;
			Event Player.DamageRank = Event Player.Pack == 3 ? 12 : 5;
			Event Player.AV = 1;
			Event Player.Grav = 0.900;
			Event Player.BurstA = 0;
			Event Player.BurstB = 0;
			Event Player.FRA = 1;
			Event Player.Speed = 1.500;
			Abort;
		End;
		"Mercy"
		If(Hero Of(Event Player) == Hero(Mercy));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 180;
			Event Player.DamageRank = 5000 * Event Player.Pack;
			Set Ammo(Event Player, 0, 10 + 10 * Event Player.Pack);
			Set Max Ammo(Event Player, 0, 10 + 10 * Event Player.Pack);
			Event Player.Grav = 0.950;
			Event Player.AV = 150 + 30 * Event Player.Pack;
			Event Player.BurstB = -5;
			Event Player.FRA = 0.200;
			Event Player.Speed = 1.400;
			Abort;
		End;
		"Mei"
		If(Hero Of(Event Player) == Hero(Mei));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 192;
			Event Player.DamageRank = 400 * Event Player.Pack;
			Set Ammo(Event Player, 0, Event Player.Pack == 3 ? 64 : 32);
			Set Max Ammo(Event Player, 0, Event Player.Pack == 3 ? 64 : 32);
			Event Player.Grav = 1.500;
			Event Player.AV = 192;
			Event Player.BurstB = 10;
			Event Player.FRA = 0.050;
			Event Player.FRB = 0.850;
			Event Player.Speed = 0.700;
			Abort;
		End;
		"Torbjorn"
		If(Hero Of(Event Player) == Hero(Torbjörn));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 220;
			Set Ammo(Event Player, 0, 20);
			Set Max Ammo(Event Player, 0, 20);
			Event Player.AV = 220;
			Event Player.DamageRank = Event Player.Pack == 3 ? 14 : 5.500;
			Event Player.BurstB = 3;
			Event Player.FRA = 0.590;
			Event Player.FRB = 0.590;
			Event Player.AmmoPrice = 700;
			Abort;
		End;
		"Winston"
		If(Hero Of(Event Player) == Hero(Winston));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 500;
			Event Player.DamageRank = Event Player.Pack == 3 ? 450 : 22;
			Event Player.AV = 500;
			Event Player.FRA = 1;
			Abort;
		End;
		"Hog"
		If(Hero Of(Event Player) == Hero(Roadhog));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 80;
			Event Player.DamageRank = 6 * Event Player.Pack;
			Set Ammo(Event Player, 0, 8 * Event Player.Pack);
			Set Max Ammo(Event Player, 0, 8 * Event Player.Pack);
			Event Player.AV = 80 * Event Player.Pack;
			Event Player.FRA = 0.850;
			Event Player.FRB = 0.850;
			Event Player.Speed = 1.200;
			Event Player.AmmoPrice = 750;
			Abort;
		End;
		"Sym"
		If(Hero Of(Event Player) == Hero(Symmetra));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 640;
			Set Ammo(Event Player, 0, 40);
			Set Max Ammo(Event Player, 0, 40);
			Event Player.AV = 640;
			Event Player.DamageRank = Event Player.Pack == 3 ? 40 : 7.500;
			Event Player.BurstB = 2;
			Event Player.FRA = 0.140;
			Event Player.FRB = 4.250;
			Event Player.Speed = 1.100;
			Abort;
		End;
		"Zen"
		If(Hero Of(Event Player) == Hero(Zenyatta));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 220;
			Set Ammo(Event Player, 0, 30);
			Set Max Ammo(Event Player, 0, 30);
			Event Player.Grav = 1.050;
			Event Player.AV = 220 * Event Player.Pack;
			Event Player.DamageRank = Event Player.Pack == 3 ? 16 : 4;
			Event Player.BurstB = 5;
			Event Player.FRA = 0.400;
			Event Player.FRB = 3.200;
			Abort;
		End;
		"Sombra"
		If(Hero Of(Event Player) == Hero(Sombra));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 550;
			Set Ammo(Event Player, 0, 50);
			Set Max Ammo(Event Player, 0, 50);
			Event Player.AV = 550 * Event Player.Pack;
			Event Player.DamageRank = Event Player.Pack == 3 ? 17 : 2.500;
			Event Player.BurstB = -20;
			Event Player.FRA = 0.050;
			Event Player.Speed = 1.300;
			Event Player.AmmoPrice = 500;
			Abort;
		End;
		"Orisa"
		If(Hero Of(Event Player) == Hero(Orisa));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 750;
			Event Player.DamageRank = 8 * Event Player.Pack;
			Set Ammo(Event Player, 0, 100);
			Set Max Ammo(Event Player, 0, 100);
			Event Player.Grav = 1.100;
			Event Player.AV = 750 * Event Player.Pack;
			Event Player.BurstB = 5;
			Event Player.FRA = 0.083;
			Event Player.FRB = 8;
			Event Player.Speed = 0.900;
			Event Player.AmmoPrice = 1000;
			Abort;
		End;
		"Moira"
		If(Hero Of(Event Player) == Hero(Moira));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 600;
			Event Player.DamageRank = 500 * Event Player.Pack;
			Event Player.Grav = 0.750;
			Event Player.AV = 600;
			Set Secondary Fire Enabled(Event Player, True);
			Event Player.FRA = 0.080;
			Event Player.FRB = 0.046;
			Event Player.Speed = 1.500;
			Abort;
		End;
		"Tracer"
		If(Hero Of(Event Player) == Hero(Tracer));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 440;
			Set Ammo(Event Player, 0, 40 * Event Player.Pack);
			Set Max Ammo(Event Player, 0, 40 * Event Player.Pack);
			Event Player.Grav = 0.950;
			Event Player.AV = 440 * Event Player.Pack;
			Event Player.DamageRank = Event Player.Pack == 3 ? 28 : 11;
			Event Player.BurstA = 2;
			Event Player.FRA = 0.050;
			Event Player.FRB = 2.500;
			Event Player.Speed = 1.400;
			Abort;
		End;
		"Lucio"
		If(Hero Of(Event Player) == Hero(Lúcio));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 192;
			Set Ammo(Event Player, 0, 32);
			Set Max Ammo(Event Player, 0, 32);
			Event Player.AV = 192 * Event Player.Pack;
			Event Player.DamageRank = Event Player.Pack == 3 ? 26 : 3.500;
			Event Player.BurstA = 4;
			Event Player.FRA = 0.935;
			Event Player.FRB = 4;
			Abort;
		End;
		"Junk"
		If(Hero Of(Event Player) == Hero(Junkrat));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 36;
			Event Player.DamageRank = Event Player.Pack == 3 ? 15 : 1;
			Set Ammo(Event Player, 0, 6);
			Set Max Ammo(Event Player, 0, 6);
			Event Player.Grav = 2;
			Event Player.AV = 36 * Event Player.Pack;
			Event Player.BurstB = 2;
			Event Player.FRA = 0.600;
			Event Player.FRB = 3;
			Event Player.Speed = 0.700;
			Abort;
		End;
		"Dva"
		If(Hero Of(Event Player) == Hero(D.Va));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 210;
			Event Player.DamageRank = Event Player.Pack == 3 ? 13 : 6.500;
			Set Ammo(Event Player, 0, 30);
			Set Max Ammo(Event Player, 0, 30);
			Event Player.Grav = 0.950;
			Event Player.AV = 210;
			Event Player.BurstB = 3;
			Event Player.FRA = 0.143;
			Event Player.Speed = 1.400;
			Event Player.AmmoPrice = 625;
			Abort;
		End;
		"Echo"
		If(Hero Of(Event Player) == Hero(Echo));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 48;
			Event Player.DamageRank = 1000 * Event Player.Pack;
			Set Ammo(Event Player, 0, 16);
			Set Max Ammo(Event Player, 0, 16);
			Event Player.AV = 64 * Event Player.Pack;
			Event Player.BurstB = 6;
			Event Player.FRA = 0.330;
			Event Player.FRB = 6;
			Event Player.Speed = 1.200;
			Abort;
		End;
		"Rein"
		If(Hero Of(Event Player) == Hero(Reinhardt));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 1;
			Event Player.DamageRank = 8.500 * Event Player.Pack;
			Event Player.AV = 1;
			Event Player.Grav = 0.900;
			Event Player.BurstA = 0;
			Event Player.BurstB = 0;
			Event Player.FRA = 1;
			Event Player.Speed = 1.500;
			Abort;
		End;
		"Queen"
		If(Hero Of(Event Player) == Hero(Junker Queen));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 40;
			Event Player.DamageRank = 115 * Event Player.Pack;
			Event Player.Grav = 1.100;
			Event Player.AV = 40;
			Event Player.FRA = 0.750;
			Event Player.Speed = 1.180;
			Abort;
		End;
		"Hanzo"
		If(Hero Of(Event Player) == Hero(Hanzo));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = Event Player.ShadowEssence >= 1 ? Global.ShadowVectors[31] : (
				Event Player.VenomEssence >= 1 ? Global.ShadowVectors[32] : (Event Player.IceEssence >= 1 ? Global.ShadowVectors[33] : (
				Event Player.FireEssence >= 1 ? Global.ShadowVectors[34] : (Event Player.WindEssence >= 1 ? Global.ShadowVectors[35] : (
				Event Player.LightningEssence >= 1 ? Global.ShadowVectors[36] : 96)))));
			Event Player.DamageRank = 29;
			Event Player.Grav = 0.850;
			Event Player.AV = (Event Player.IceEssence >= 1 ? 216 : (Event Player.FireEssence >= 1 ? 92 : (
				Event Player.WindEssence >= 1 ? 64 : (Event Player.LightningEssence >= 1 ? 168 : (Event Player.ShadowEssence >= 1 ? 36 : (
				Event Player.VenomEssence >= 1 ? 448 : 96)))))) * (Event Player.Pack == 3 ? 1.500 : 1);
			Event Player.FRA = 1.650;
			Event Player.Speed = 1.500;
			Abort;
		End;
		"Ball"
		If(Hero Of(Event Player) == Hero(Wrecking Ball));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 1250;
			Event Player.DamageRank = 60 * Event Player.Pack;
			Set Ammo(Event Player, 0, 125);
			Set Max Ammo(Event Player, 0, 125);
			Event Player.Grav = 0.900;
			Event Player.AV = 1250 * Event Player.Pack;
			Event Player.BurstB = 3;
			Event Player.FRA = 0.040;
			Event Player.FRB = 1.500;
			Event Player.Speed = 0.900;
			Abort;
		End;
		"Sig"
		If(Hero Of(Event Player) == Hero(Sigma));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 72;
			Event Player.DamageRank = 250 * Event Player.Pack;
			Event Player.Grav = 0.900;
			Event Player.AV = 72 * Event Player.Pack;
			Event Player.BurstA = 2;
			Event Player.BurstB = 3;
			Event Player.FRA = 1.500;
			Event Player.FRB = 2.500;
			Event Player.Speed = 1.200;
			Abort;
		End;
		"Bap"
		If(Hero Of(Event Player) == Hero(Baptiste));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 300;
			Set Ammo(Event Player, 0, 30 * Event Player.Pack);
			Set Max Ammo(Event Player, 0, 30 * Event Player.Pack);
			Event Player.Grav = 0.950;
			Event Player.AV = 300 * Event Player.Pack;
			Event Player.DamageRank = Event Player.Pack == 3 ? 125 : 9;
			Event Player.BurstA = 3;
			Event Player.FRA = 0.580;
			Event Player.FRB = 0.900;
			Event Player.AmmoPrice = 1500;
			Abort;
		End;
		"Doomfist"
		If(Hero Of(Event Player) == Hero(Doomfist));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 70;
			Event Player.DamageRank = Event Player.Pack == 3 ? 25000 : 7500;
			Set Ammo(Event Player, 0, 14);
			Set Max Ammo(Event Player, 0, 14);
			Event Player.Grav = 0.800;
			Event Player.AV = 70 * Event Player.Pack;
			Event Player.FRA = 0.303;
			Event Player.FRB = 2;
			Event Player.Speed = 1.200;
			Abort;
		End;
		"Soldier"
		If(Hero Of(Event Player) == Hero(Soldier: 76));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 350;
			Set Ammo(Event Player, 0, 50);
			Set Max Ammo(Event Player, 0, 50);
			Event Player.AV = 350 * Event Player.Pack;
			Event Player.DamageRank = Event Player.Pack == 3 ? 19 : 4.500;
			Event Player.BurstB = 3;
			Event Player.FRA = 0.115;
			Event Player.FRB = 6;
			Event Player.Speed = 1.100;
			Event Player.AmmoPrice = 875;
			Abort;
		End;
		"Sojourn"
		If(Hero Of(Event Player) == Hero(Sojourn));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 256;
			Event Player.DamageRank = 110 * Event Player.Pack * Event Player.Pack;
			Event Player.Grav = 0.950;
			Event Player.AV = 256 * Event Player.Pack;
			Event Player.BurstB = 0;
			Event Player.FRA = 0.071;
			Event Player.Speed = 1.250;
			Abort;
		End;
		"Rammatra"
		If(Hero Of(Event Player) == Hero(Ramattra));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 550;
			Event Player.DamageRank = 7 * Event Player.Pack * Event Player.Pack;
			Event Player.DmgShotP = 4.500;
			Event Player.DmgShotS = 60;
			Event Player.AV = 550 * Event Player.Pack;
			Event Player.FRA = 0.040;
			Event Player.Speed = 1.100;
			Event Player.AmmoPrice = 750;
			Abort;
		End;
		"Ana"
		If(Hero Of(Event Player) == Hero(Ana));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 72;
			Set Ammo(Event Player, 0, 12 * Event Player.Pack);
			Set Max Ammo(Event Player, 0, 12 * Event Player.Pack);
			Event Player.DamageRank = 30 * Event Player.Pack;
			Event Player.AV = 72 * Event Player.Pack;
			Set Secondary Fire Enabled(Event Player, True);
			Event Player.FRA = 0.800;
			Event Player.FRB = 1.500;
			Event Player.Speed = 0.900;
			Event Player.AmmoPrice = 2000;
			Abort;
		End;
		"Kiriko"
		If(Hero Of(Event Player) == Hero(Kiriko));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 126;
			Event Player.DamageRank = 70 * Event Player.Pack;
			Event Player.Grav = 0.850;
			Event Player.AV = 126;
			Set Secondary Fire Enabled(Event Player, True);
			Event Player.BurstA = 2;
			Event Player.FRA = 0.200;
			Event Player.FRB = 0.550;
			Event Player.Speed = 1.450;
			Abort;
		End;
		"Lifeweaver"
		If(Hero Of(Event Player) == Hero(Lifeweaver));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 355;
			Event Player.DamageRank = Event Player.Pack == 3 ? 150 : 80;
			Event Player.Grav = 0.950;
			Event Player.AV = Event Player.Pack == 3 ? 700 : 355;
			Event Player.BurstB = 0;
			Event Player.FRA = 0.091;
			Event Player.Speed = 1.200;
			Abort;
		End;
		"Genji"
		If(Hero Of(Event Player) == Hero(Genji));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 183;
			Event Player.DamageRank = 2000 * Event Player.Pack;
			Set Ammo(Event Player, 0, Event Player.Pack == 3 ? 42 : 21);
			Set Max Ammo(Event Player, 0, Event Player.Pack == 3 ? 42 : 21);
			Event Player.Grav = 0.950;
			Event Player.AV = Event Player.Pack == 3 ? 243 : 183;
			Event Player.BurstA = 3;
			Event Player.BurstB = 3;
			Event Player.FRA = 0.970;
			Event Player.FRB = 0.680;
			Abort;
		End;
		"Widow"
		If(Hero Of(Event Player) == Hero(Widowmaker));
			Skip If(Event Player.Swash == True, 1);
			Event Player.Ammo = 180;
			Event Player.DamageRank = Event Player.Pack == 3 ? 9000 : 27;
			Set Ammo(Event Player, 0, 30);
			Set Max Ammo(Event Player, 0, 30);
			Event Player.Grav = 1.200;
			Event Player.AV = 180 * Event Player.Pack;
			Event Player.BurstB = 5;
			Event Player.FRA = 0.100;
			Event Player.FRB = 3;
			Event Player.Speed = 1.050;
			Abort;
		End;
	}
}

disabled rule("Hero Buy")
{
	event
	{
		Subroutine;
		HeroBuy;
	}

	actions
	{
		Event Player.Switching = 1;
		If(Event Player.HeroLimit >= 2);
			Event Player.Pack = 1;
			Event Player.Repack = 1;
			Heal(Event Player, Null, 99999);
			If(Hero Of(Event Player) == Hero(Hanzo));
				Call Subroutine(EssenceZero);
			End;
		Else If(Event Player.HeroLimit < 2);
			Modify Player Variable(Event Player, Heroes, Append To Array, Hero Of(Event Player));
			Modify Player Variable(Event Player, Heroes, Append To Array, Event Player.Ammo);
			Modify Player Variable(Event Player, Heroes, Append To Array, Event Player.Pack);
			Modify Player Variable(Event Player, Heroes, Append To Array, Event Player.Repack);
			Modify Player Variable(Event Player, Heroes, Append To Array, Event Player.AV);
			Event Player.HeroLimit += 1;
			Event Player.Pack = 1;
			Event Player.Repack = 1;
			Heal(Event Player, Null, 99999);
		End;
	}
}

disabled rule("Ammo Mechanic")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		(Is Firing Primary(Event Player) || Is Firing Secondary(Event Player)) == True;
		Event Player.Ammo > 0;
		Is Alive(Event Player) == True;
	}

	actions
	{
		If(Is Firing Primary(Event Player) == True);
			While(Is Firing Primary(Event Player) == True || Is Button Held(Event Player, Button(Primary Fire)) == True);
				Event Player.Ammo -= Event Player.BurstA;
				Wait(Event Player.FRA, Abort When False);
			End;
		Else If(Is Firing Secondary(Event Player) == True);
			While(Is Firing Secondary(Event Player) == True || Is Button Held(Event Player, Button(Secondary Fire)) == True);
				Event Player.Ammo -= Event Player.BurstB;
				Wait(Event Player.FRB, Abort When False);
			End;
		End;
	}
}

disabled rule("Ammo Start")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Event Player.Ammo > 0;
	}

	actions
	{
		Set Ultimate Ability Enabled(Event Player, True);
		Skip If(Event Player.Galva == True, 1);
		Set Melee Enabled(Event Player, False);
		Set Primary Fire Enabled(Event Player, True);
		Skip If(Event Player.Pack == 1, 4);
		Set Ability 1 Enabled(Event Player, True);
		Set Ability 2 Enabled(Event Player, True);
		Set Secondary Fire Enabled(Event Player, True);
		"Ammo Start"
		Event Player.Reset = 100 * Event Player.DamageRank * Event Player.Pack * Event Player.Repack;
		Wait(0.100, Ignore Condition);
		Set Damage Dealt(Event Player, Event Player.Reset);
	}
}

disabled rule("Ammo Stop")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Event Player.Ammo <= 0;
	}

	actions
	{
		Skip If(Event Player.Ammo == 0, 1);
		Event Player.Ammo = 0;
		Set Ability 1 Enabled(Event Player, False);
		Set Secondary Fire Enabled(Event Player, False);
		Set Ability 2 Enabled(Event Player, False);
		Set Primary Fire Enabled(Event Player, False);
		Set Melee Enabled(Event Player, True);
		Small Message(Event Player, Custom String("Out of Ammo"));
		Skip If(Event Player.Galva == True, 1);
		"Ammo Stop"
		Set Damage Dealt(Event Player, 100 / Event Player.DamageRank);
	}
}

disabled rule("Ammo Max")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Event Player.MaxAmmo == True;
		Event Player.Switching == 0;
		Event Player.Routing == False;
	}

	actions
	{
		Wait(1, Ignore Condition);
		Event Player.Ammo = Event Player.AV;
		Event Player.UCK = 100;
		Set Ultimate Charge(Event Player, 100);
		Skip If(Event Player.HeroLimit == 1, 1);
		Event Player.Heroes[1] = Event Player.Heroes[4];
		Event Player.MaxAmmo = False;
		Event Player.Grenade = 2;
		Skip If(Event Player.Slabs[1] != 4, 1);
		Event Player.Slabs[4] = 5;
		"Shadow, Venom, Ice, Fire, Wind, & Lightning Bow Ammo"
		Global.ShadowVectors[31] = 36;
		Global.ShadowVectors[32] = 448;
		Global.ShadowVectors[33] = 216;
		Global.ShadowVectors[34] = 92;
		Global.ShadowVectors[35] = 64;
		Global.ShadowVectors[36] = 168;
		Global.ShadowVectors[37] = 96;
		Skip If(Hero Of(Event Player) != Hero(Hanzo), 1);
		Event Player.Charges += 1;
	}
}

disabled rule("Ammo Check")
{
	event
	{
		Subroutine;
		AmmoCheck;
	}

	actions
	{
		If(Event Player.Pack == 1);
			Event Player.Points -= Event Player.AmmoPrice;
			Event Player.Ammo = Event Player.AV;
			Abort;
		Else If(Event Player.Pack == 3 && Event Player.Points >= 4500);
			Event Player.Points -= 4500;
			Event Player.Ammo = Event Player.AV;
			Abort;
		End;
	}
}

disabled rule("Sprint Mechanic Go")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Interact)) == True;
		Is Moving(Event Player) == True;
		Event Player.Sprint > 1;
		(Is Button Held(Event Player, Button(Primary Fire)) || Is Button Held(Event Player, Button(Secondary Fire))) == False;
	}

	actions
	{
		Skip If(Event Player.Slabs[1] != 2, 1);
		Skip If(Event Player.Slabs[3] == True, 6);
		Set Move Speed(Event Player, Event Player.StaminaUp * 50 + 150 * Event Player.Speed);
		Event Player.Sprint -= 2;
		Wait(0.100 + 0.100 * Event Player.StaminaUp, Ignore Condition);
		Loop If Condition Is True;
		Set Move Speed(Event Player, Event Player.StaminaUp * 50 + 100 * Event Player.Speed);
		Abort;
		Small Message(Event Player, Custom String("Encumbered by Purified Tablet"));
	}
}

disabled rule("Sprint Mechanic Stop")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Interact)) == False;
		Event Player.Sprint < 100;
	}

	actions
	{
		Event Player.Sprint += 1 + 1 * Event Player.StaminaUp;
		Wait(0.100, Abort When False);
		Loop If Condition Is True;
	}
}

disabled rule("Health Regen")
{
	event
	{
		Player Took Damage;
		Team 1;
		All;
	}

	conditions
	{
		Event Player != Max Health(Event Player);
		Event Player.Downs == False;
	}

	actions
	{
		"Tablet Purity"
		Skip If(Event Player.Slabs[1] != 2, 2);
		Event Player.Slabs[3] = False;
		Small Message(Event Player, Custom String("Tablet Tainted"));
		"Death Failsafe"
		Abort If(Is Dead(Event Player) == True);
		Stop All Heal Over Time(Event Player);
		"Vampiric Set"
		If(Event Player.Vampiric[0] >= 1 && Event Player.Vampiric[1] == False);
			If(Normalized Health(Event Player) <= 0.250 && Event Player.Vampiric[2] <= 0);
				Event Player.Vampiric[2] = 12;
				Event Player.Vampiric[1] = True;
				Heal(Players Within Radius(Event Player, 12, Team 1, Surfaces), Event Player, 10000);
				Small Message(Event Player, Custom String("Blood Rage triggered"));
			End;
		End;
		"Widows Wine Mechanic"
		If(Event Player.WidowsWine >= 1 && Event Player.Grenade > 0);
			Play Effect(All Players(Team 1), Doomfist Meteor Strike Impact Sound, Color(Team 2), Position Of(Event Player), 500);
			Play Effect(All Players(All Teams), Ana Biotic Grenade Explosion Effect, Color(Team 2), Position Of(Event Player), 1);
			Play Effect(All Players(All Teams), Widowmaker Venom Mine Explosion Effect, Color(Team 1), Position Of(Event Player), 1);
			Play Effect(All Players(All Teams), Sigma Hypersphere Implosion Effect, Color(Team 1), Position Of(Event Player), 1);
			Set Status(Players Within Radius(Event Player, 5, Team 2, Surfaces), Event Player, Stunned, 6);
			Set Status(Players Within Radius(Event Player, 5, Team 2, Surfaces), Event Player, Hacked, 6);
			Damage(Players Within Radius(Event Player, 5, Team 2, Surfaces), Event Player, 500 / Event Player.DamageRank);
			Damage(Attacker, Event Player, 3000 / Event Player.DamageRank);
			Event Player.Grenade -= 1;
		End;
		"Health Regen"
		If(Normalized Health(Event Player) >= 0.100);
			Wait(8 - Event Player.QuickRevive, Abort When False);
			Start Heal Over Time(Event Player, Null, 20, 900 + 500 * Event Player.QuickRevive);
		Else If(Normalized Health(Event Player) < 0.100);
			Call Subroutine(PlayerDown);
		End;
		If(Hero Of(Attacker) == Hero(Ashe));
			Set Move Speed(Victim, 25);
			Wait(3.500, Abort When False);
			Set Move Speed(Victim, 100);
			Abort;
		End;
		If(Hero Of(Attacker) == Hero(Brigitte));
			Set Status(Victim, Null, Stunned, 0.850);
			Wait(6, Abort When False);
			Set Status(Players Within Radius(Attacker, 10, Team 1, Surfaces), Null, Frozen, 1);
			Wait(6, Abort When False);
			Set Status(Closest Player To(Attacker, Team 1), Null, Asleep, 3);
			Wait(6, Abort When False);
			Abort;
		End;
	}
}

disabled rule("Downs")
{
	event
	{
		Subroutine;
		PlayerDown;
	}

	actions
	{
		Play Effect(Event Player, Debuff Impact Sound, Color(Red), Position Of(Event Player), 100);
		Stop All Heal Over Time(Event Player);
		Wait(2.500, Ignore Condition);
		Abort If(Is Dead(Event Player) == True || Normalized Health(Event Player) >= 0.100);
		Event Player.Downs = True;
		Skip If(Event Player.Tombstone >= 1, 1);
		Event Player.Points -= Round To Integer(0.150 * Event Player.Points, To Nearest);
		Set Status(Event Player, Null, Knocked Down, 48.500);
		Set Status(Event Player, Null, Phased Out, 45);
		Big Message(All Players(All Teams), String("{0} {1}", Event Player, String("{0}!", String("Down"))));
		Big Message(All Players(Team 1), String("{0} {1} {2}", Custom String("Hold"), Input Binding String(Button(Crouch)), Custom String(
			"to revive")));
		Event Player.Dead = 45;
		While(Event Player.Dead > 0 && Event Player.Downs == True);
			Event Player.Dead -= 1;
			Wait(1, Ignore Condition);
			If(Health(Event Player) >= 2500 || Normalized Health(Event Player) == 1);
				Clear Status(Event Player, Knocked Down);
				Clear Status(Event Player, Phased Out);
				Event Player.Downs = False;
				Event Player.Dead = 45;
				Abort;
			End;
		End;
		If(Event Player.Dead <= 0);
			Clear Status(Event Player, Unkillable);
			Wait(1, Ignore Condition);
			Kill(Event Player, Random Value In Array(All Players(Team 2)));
			Event Player.Dead = 45;
			Filtered Array(All Living Players(Team 1), Current Array Element.Tombstone == 0 && Current Array Element.Downs == False)
				.Points -= 150 * Global.Round;
			Big Message(All Players(All Teams), String("{0} {1} {2}", Event Player, Custom String("Died, Blood Debt Paid -"),
				150 * Global.Round));
			Filtered Array(All Players(Team 1), Current Array Element.Points < 0).Points = 0;
			Abort;
		End;
	}
}

disabled rule("Deaths")
{
	event
	{
		Player Died;
		Team 1;
		All;
	}

	actions
	{
		If(Event Player.Downs == False);
			If(Event Player.GhostlyCD == True);
				Respawn(Event Player);
				Teleport(Event Player, Random Value In Array(Global.SpawnPoints));
				Small Message(Event Player, Custom String("Wraith Respawn"));
			Else;
				Teleport(Event Player, Global.MagicVectors[5]);
				Event Player.Points -= 1500;
			End;
		Else;
			Call Subroutine(EssenceZero);
			Event Player.Downs = False;
			Teleport(Event Player, Global.MagicVectors[5]);
			If(Event Player.Tombstone >= 1);
				Wait Until(Is Alive(Event Player) == True, 99999);
				Set Status(Event Player, Null, Invincible, 5 * Event Player.Tombstone);
				Event Player.Points += 2000 * Event Player.Tombstone;
			End;
		End;
	}
}

disabled rule("Revives")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Crouch)) == True;
		Has Status(Event Player, Knocked Down) == False;
		Is Moving(Event Player) == False;
		Is Firing Primary(Event Player) == False;
		Is True For Any(All Living Players(Team 1), Has Status(Current Array Element, Knocked Down)) == True;
		Distance Between(Event Player, Sorted Array(Filtered Array(All Living Players(Team 1), Has Status(Current Array Element,
			Knocked Down) == True), Distance Between(Event Player, Current Array Element))[0]) <= 3.500;
	}

	actions
	{
		Wait(1, Abort When False);
		Small Message(Event Player, Custom String("Reviving.. Don't move & don't shoot!"));
		Skip If(Event Player.QuickRevive >= 1, 8);
		Play Effect(All Players(Team 1), Ring Explosion, Color(Yellow), Position Of(Event Player), 10);
		Wait(0.500, Abort When False);
		Play Effect(All Players(Team 1), Ring Explosion, Color(Purple), Position Of(Event Player), 10);
		Wait(0.500, Abort When False);
		Play Effect(All Players(Team 1), Ring Explosion, Color(Orange), Position Of(Event Player), 10);
		Wait(0.500, Abort When False);
		Play Effect(All Players(Team 1), Ring Explosion, Color(Blue), Position Of(Event Player), 10);
		Wait(0.500, Abort When False);
		Play Effect(All Players(Team 1), Ring Explosion, Color(Lime Green), Position Of(Event Player), 10);
		Wait(0.500, Abort When False);
		Play Effect(All Players(Team 1), Ring Explosion, Color(Red), Position Of(Event Player), 10);
		Wait(0.500, Abort When False);
		Play Effect(All Players(Team 1), Ring Explosion, Color(White), Position Of(Event Player), 10);
		Wait(0.500, Abort When False);
		Clear Status(Players Within Radius(Event Player, 5, Team 1, Off), Phased Out);
		Heal(Players Within Radius(Event Player, 5, Team 1, Off), Event Player, 5000);
		Set Status(Players Within Radius(Event Player, 2, Team 1, Surfaces), Null, Invincible, 1);
		Skip If(Event Player.QuickRevive == 0, 1);
		Heal(Players Within Radius(Event Player, 2, Team 1, Off), Event Player, 5000 * Event Player.QuickRevive);
		Clear Status(Players Within Radius(Event Player, 5, Team 1, Off), Knocked Down);
		Small Message(Event Player, Custom String("Revived!"));
		Event Player.Points += 500 * Global.Dub + 500 * Event Player.QuickRevive;
	}
}

disabled rule("=======Perk Mechanics=======")
{
	event
	{
		Ongoing - Global;
	}
}

disabled rule("Elemental Pop Mechanic")
{
	event
	{
		Subroutine;
		ElementalPop;
	}

	actions
	{
		Abort If(Has Status(Victim, Burning) == True);
		If(Random Real(0, 100) <= 4);
			Play Effect(All Players(Team 1), Ring Explosion, Color(Sky Blue), Victim, 5);
			Set Status(Players Within Radius(Victim, 5, Team 2, Surfaces), Event Player, Frozen, 5);
			Abort;
		End;
		If(Random Real(0, 100) <= 4);
			Play Effect(All Players(Team 1), Ring Explosion, Color(Red), Victim, 5);
			Set Status(Players Within Radius(Victim, 5, Team 2, Surfaces), Event Player, Burning, 8);
			Start Damage Over Time(Players Within Radius(Victim, 5, Team 2, Surfaces), Event Player, 5, 300 / Event Player.DamageRank);
			Abort;
		End;
		If(Random Real(0, 100) <= 4);
			Play Effect(All Players(Team 1), Ring Explosion, Color(Purple), Victim, 5);
			Set Status(Players Within Radius(Victim, 5, Team 2, Surfaces), Event Player, Stunned, 1.500);
			Abort;
		End;
		If(Random Real(0, 100) <= 4);
			Apply Impulse(Players Within Radius(Victim, 5, Team 2, Surfaces), Backward, 70, To World, Cancel Contrary Motion);
			Play Effect(All Players(Team 1), Ring Explosion, Color(Yellow), Victim, 5);
			Set Status(Players Within Radius(Victim, 5, Team 2, Surfaces), Event Player, Knocked Down, 3.250);
			Abort;
		End;
		If(Random Real(0, 100) <= 4);
			Play Effect(All Players(Team 1), Ring Explosion, Color(Green), Victim, 5);
			Set Status(Players Within Radius(Victim, 5, Team 2, Surfaces), Event Player, Hacked, 6.500);
			Damage(Players Within Radius(Victim, 5, Team 2, Surfaces), Event Player, 3500 / Event Player.DamageRank);
			Abort;
		End;
		Abort;
	}
}

disabled rule("Electric Cherry/Speed Cola Mechanic")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		(Event Player.ElectricCherry || Event Player.SpeedCola) >= 1;
		Is Reloading(Event Player) == True;
	}

	actions
	{
		If(Event Player.SpeedCola >= 1);
			Set Melee Enabled(Event Player, True);
			Event Player.Clip = Max Ammo(Event Player, 0);
			Press Button(Event Player, Button(Melee));
			Wait(0.650, Ignore Condition);
			Skip If(Event Player.Galva == True, 1);
			Set Melee Enabled(Event Player, False);
			Set Ammo(Event Player, 0, Event Player.Clip);
		End;
		If(Event Player.ElectricCherry >= 1);
			Play Effect(All Players(Team 1), Tracer Recall Reappear Effect, Color(Team 1), Position Of(Event Player), 3);
			Play Effect(All Players(All Teams), Sigma Hypersphere Implosion Effect, Color(Team 1), Position Of(Event Player), 70);
			Play Effect(All Players(All Teams), Good Pickup Effect, Color(Sky Blue), Position Of(Event Player), 8);
			Play Effect(All Players(All Teams), Sombra Translocator Reappear Sound, Color(Team 1), Position Of(Event Player), 1000);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Sky Blue), Position Of(Event Player), 6);
			Set Status(Players Within Radius(Event Player, 6, Team 2, Surfaces), Event Player, Stunned, 2);
			Damage(Players Within Radius(Event Player, 6, Team 2, Surfaces), Event Player, 1000 / Event Player.DamageRank);
		End;
		Wait(1, Ignore Condition);
	}
}

disabled rule("Ghostly Gin Mechanic")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Health(Event Player) == 1;
	}

	actions
	{
		If(Event Player.Ghostly >= 1);
			If(Event Player.GhostlyCD == False);
				Small Message(Event Player, Custom String("Wraith Form Triggered"));
				Event Player.GhostlyCD = True;
				Skip If(Global.ShadowVectors[44] == 4, 1);
				Disable Movement Collision With Environment(Event Player, False);
				Set Status(Event Player, Null, Phased Out, 5);
				Set Move Speed(Event Player, 200);
				Set Gravity(Event Player, 0);
				Apply Impulse(Event Player, Up, 1, To World, Cancel Contrary Motion);
				Wait(5, Ignore Condition);
				Set Gravity(Event Player, Event Player.Grav * 100 - Event Player.PHD * 10);
				Small Message(Event Player, Custom String("Wraith Form Cooling Down"));
				Enable Movement Collision With Environment(Event Player);
				Set Move Speed(Event Player, Event Player.StaminaUp * 50 + 100 * Event Player.Speed);
				Event Player.GhostlyCD = 90;
				Set Player Health(Event Player, Max Health(Event Player));
				While(Event Player.GhostlyCD > 0);
					Wait(1, Ignore Condition);
					Event Player.GhostlyCD -= 1;
				End;
				Event Player.GhostlyCD = False;
				Small Message(Event Player, Custom String("Wraith Form Ready"));
				Skip If(Global.Round < 27, 1);
				Enable Movement Collision With Players(Event Player);
				Abort;
			End;
		End;
		Wait(4, Abort When False);
		Call Subroutine(PlayerDown);
		Play Effect(All Players(Team 1), Ring Explosion, Color(Red), Position Of(Event Player), 5);
	}
}

disabled rule("Deadshot Toggle")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Event Player.Deadshot >= 1;
		Is Button Held(Event Player, Button(Ability 1)) == True;
	}

	actions
	{
		"Deadshot Notification"
		Small Message(Event Player, Custom String("Hold {0} to toggle Aim Assist on/off", Input Binding String(Button(Ability 1))));
		"Switch"
		Wait(2, Abort When False);
		If(Event Player.Toggle != 1);
			Small Message(Event Player, Custom String("Deadshot Off"));
			Event Player.Toggle = 1;
		Else;
			Small Message(Event Player, Custom String("Deadshot On"));
			Event Player.Toggle = 2;
		End;
	}
}

disabled rule("PHD Flopper Mechanic 1")
{
	event
	{
		Player Dealt Damage;
		Team 1;
		All;
	}

	conditions
	{
		Event Player.PHD >= 1;
		Attacker == Victim;
	}

	actions
	{
		Heal(Event Player, Event Player, Event Damage);
	}
}

disabled rule("PHD Flopper Mechanic 2")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Event Player.PHD >= 1;
		Event Player.PHDCD == False;
		Is In Air(Event Player) == True;
		Is Button Held(Event Player, Button(Crouch)) == True;
	}

	actions
	{
		Event Player.PHDCD = True;
		Apply Impulse(Event Player, Down, 70, To World, Cancel Contrary Motion);
		Wait Until(Is On Ground(Event Player) == True, 5);
		Play Effect(All Players(All Teams), Sigma Accretion Impact Effect, Color(Team 2), Position Of(Event Player), 10);
		Play Effect(All Players(All Teams), Sigma Accretion Impact Sound, Color(Team 2), Position Of(Event Player), 1000);
		Play Effect(All Players(All Teams), Widowmaker Venom Mine Explosion Effect, Color(Team 1), Position Of(Event Player), 70);
		Play Effect(All Players(All Teams), Bad Explosion, Color(Violet), Position Of(Event Player), 5);
		Play Effect(All Players(All Teams), Wrecking Ball Piledriver Impact Effect, Color(Team 2), Position Of(Event Player), 70);
		Play Effect(All Players(All Teams), Bastion Tank Cannon Explosion Sound, Color(Team 2), Position Of(Event Player), 500);
		Set Status(Players Within Radius(Event Player, 10, Team 2, Surfaces), Event Player, Knocked Down, 2.500);
		Damage(Players Within Radius(Event Player, 10, Team 2, Surfaces), Event Player, 3000 / Event Player.DamageRank);
		Event Player.PHDCD = 10;
		While(Event Player.PHDCD > 0);
			Wait(1, Ignore Condition);
			Event Player.PHDCD -= 1;
		End;
		Event Player.PHDCD = False;
	}
}

disabled rule("Vampiric Mechanic")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Event Player.Vampiric[0] >= 1;
		Event Player.Vampiric[1] == True;
		Event Player.Vampiric[2] > 0;
		Is Alive(Event Player) == True;
	}

	actions
	{
		Wait(0.100, Ignore Condition);
		Play Effect(All Players(All Teams), Ring Explosion, Color(Turquoise), Position Of(Event Player), 24);
		Play Effect(All Players(All Teams), Ring Explosion Sound, Color(Team 2), Position Of(Event Player), 200);
		Event Player.Vampiric[3] = Sorted Array(All Living Players(Team 2), Distance Between(Event Player, Current Array Element))[0];
		Event Player.Vampiric[4] = Distance Between(Event Player, Event Player.Vampiric[3]);
		Skip If(Event Player.Vampiric[4] <= 12, 1);
		Event Player.Vampiric[4] = 12;
		Skip If(Event Player.Vampiric[4] >= 1, 1);
		Event Player.Vampiric[4] = 1;
		Set Move Speed(Players Within Radius(Event Player, 12, Team 2, Surfaces), 8.750 * Event Player.Vampiric[4]);
		Wait(0.250 * Event Player.Vampiric[4], Ignore Condition);
		Damage(Players Within Radius(Event Player, 12, Team 2, Surfaces), Event Player, 3000 / Event Player.DamageRank);
		Event Player.Vampiric[2] -= 1;
		Loop If Condition Is True;
		Event Player.Vampiric[2] = 0;
		Set Move Speed(All Players(Team 2), Global.ShadowVectors[26]);
		Small Message(Event Player, Custom String("Blood Rage cooling down"));
		Wait(60, Ignore Condition);
		Event Player.Vampiric[1] = False;
		Small Message(Event Player, Custom String("Blood Rage ready"));
	}
}

disabled rule("Air Strikes")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Event Player.Slabs[1] == 4;
		Event Player.Slabs[4] > 0;
		Is Button Held(Event Player, Button(Melee)) == True;
		Is Button Held(Event Player, Button(Secondary Fire)) == True;
	}

	actions
	{
		Wait(0.500, Abort When False);
		If(Global.ShadowVectors[44] == 3 && Global.fireBool == True);
			If(Distance Between(Event Player, Global.fireValues) <= 2);
				Global.ShadowVectors[44] = 4;
				Teleport(All Players(Team 1), Global.PurgeVectors[0]);
			End;
		End;
		Play Effect(All Players(Team 1), Lúcio Sound Barrier Cast Effect, Color(Team 2), Position Of(Event Player), 1);
		Play Effect(All Players(Team 1), Lúcio Sound Barrier Cast Sound, Color(Team 2), Position Of(Event Player), 200);
		Set Status(All Players(Team 1), Event Player, Phased Out, 2);
		Event Player.Slabs[5] = Position Of(Event Player);
		Set Status(Players Within Radius(Event Player.Slabs[5], 15, Team 2, Off), Event Player, Phased Out, 3);
		Set Status(Players Within Radius(Event Player.Slabs[5], 15, Team 2, Off), Event Player, Rooted, 5);
		Set Status(Players Within Radius(Event Player.Slabs[5], 15, Team 2, Off), Event Player, Asleep, 5);
		Teleport(Players Within Radius(Event Player.Slabs[5], 15, Team 2, Off), Event Player.Slabs[5]);
		Event Player.Slabs[6] = 0;
		Wait(2.500, Ignore Condition);
		While(Event Player.Slabs[6] < 3);
			Wait(0.500, Ignore Condition);
			Play Effect(All Players(Team 1), Bastion Tank Cannon Explosion Effect, Color(Team 2), Event Player.Slabs[5], 1);
			Play Effect(All Players(Team 1), Bastion Tank Cannon Explosion Sound, Color(Team 2), Event Player.Slabs[5], 200);
			Players Within Radius(Event Player.Slabs[5], 5, Team 2, Surfaces).WonderWeapons = 1;
			Damage(Players Within Radius(Event Player.Slabs[5], 5, Team 2, Surfaces), Event Player, 5000 / Event Player.DamageRank);
			Event Player.Slabs[6] += 1;
		End;
		Event Player.Slabs[4] -= 1;
		Event Player.Slabs[5] = Position Of(Event Player);
		Event Player.Slabs[5] = Global.MagicVectors[0];
		Wait(1, Ignore Condition);
	}
}

rule("=======Mystery Box, Rates, Ammo=======")
{
	event
	{
		Ongoing - Global;
	}
}

disabled rule("Weapon Pickup")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Global.BoxOn == True;
		Event Player.Choosing == True;
		Is Button Held(Event Player, Button(Interact)) == True;
		Distance Between(Global.MagicVectors[1], Event Player) <= 8;
		Has Status(Event Player, Knocked Down) == False;
	}

	actions
	{
		If(Hero Of(Event Player) == Hero(Hanzo));
			Call Subroutine(EssenceZero);
		End;
		Start Forcing Player To Be Hero(Event Player, Event Player.Weapons[0]);
		Event Player.Choosing = False;
		Event Player.Pack = 1;
		Event Player.Repack = 1;
		Event Player.Switching = 1;
		Event Player.Swash = False;
		Call Subroutine(HeroSwitch);
	}
}

disabled rule("BoxCycle")
{
	event
	{
		Subroutine;
		BoxCycle;
	}

	actions
	{
		Event Player.Weapons = Empty Array;
		Modify Player Variable(Event Player, Weapons, Append To Array, Random Value In Array(Global.Box));
		Wait(0.200, Ignore Condition);
		Play Effect(All Players(Team 1), Good Explosion, Color(Sky Blue), Global.MagicVectors[1], 3);
		Wait(0.200, Ignore Condition);
		Event Player.Weapons = Empty Array;
		Modify Player Variable(Event Player, Weapons, Append To Array, Random Value In Array(Global.Box));
		Wait(0.200, Ignore Condition);
		Play Effect(All Players(Team 1), Good Explosion, Color(White), Global.MagicVectors[1], 3);
		Wait(0.200, Ignore Condition);
		Event Player.Cycle += 1;
	}
}

disabled rule("Essence Heal")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		Hanzo;
	}

	conditions
	{
		Is Using Ability 1(Event Player) == True;
		Is Button Held(Event Player, Button(Primary Fire)) == True;
		Event Player.Ammo > 0;
	}

	actions
	{
		Heal(Closest Player To(Event Player, Team 1), Event Player, 250);
		Play Effect(All Players(All Teams), Lúcio Sound Barrier Cast Effect, Color(Team 2), Position Of(Event Player), 8);
		Wait(0.500, Ignore Condition);
		Heal(Player Closest To Reticle(Event Player, Filtered Array(All Living Players(Team 1), Is In Line of Sight(Event Player,
			Current Array Element, Barriers Do Not Block LOS) == True)), Event Player, 1500 * Event Player.Pack);
		Play Effect(All Players(All Teams), Hanzo Sonic Arrow Initial Pulse Effect, Color(Team 2), Position Of(Event Player), 8);
		Wait(0.500, Ignore Condition);
		Heal(All Players(Team 1), Event Player, 500);
		Play Effect(All Players(All Teams), Hanzo Sonic Arrow Initial Pulse Effect, Color(Team 2), Position Of(Event Player), 8);
		Wait(0.500, Ignore Condition);
		Heal(Players Within Radius(Event Player, 15, Team 1, Surfaces), Event Player, 1000);
		Play Effect(All Players(All Teams), Hanzo Sonic Arrow Initial Pulse Effect, Color(Team 2), Position Of(Event Player), 8);
		Wait(0.500, Ignore Condition);
	}
}

disabled rule("Hanzo Ult")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		Hanzo;
	}

	conditions
	{
		Is Using Ultimate(Event Player) == True;
		Global.ShadowVectors[44] != 4;
	}

	actions
	{
		Wait(0.350, Ignore Condition);
		Global.Charging = True;
		Clear Status(All Players(Team 1), Knocked Down);
		Heal(Event Player, Event Player, 3500);
		Event Player.UCK = 100;
		Wait(0.850, Ignore Condition);
		Teleport(All Players(Team 2), Position Of(Event Player));
		Set Status(All Players(Team 2), Event Player, Stunned, 10);
		Apply Impulse(Event Player, Up, 35, To World, Cancel Contrary Motion);
		Set Ultimate Charge(Event Player, 100);
		Disable Movement Collision With Environment(Event Player, False);
		Set Slow Motion(10);
		Press Button(Event Player, Button(Ultimate));
		Wait(0.350, Ignore Condition);
		Set Slow Motion(100);
		Set Ultimate Charge(Event Player, 100);
		Wait(1, Ignore Condition);
		Press Button(Event Player, Button(Ultimate));
		Set Ultimate Charge(Event Player, 100);
		Wait(1, Ignore Condition);
		Press Button(Event Player, Button(Ultimate));
		Heal(All Players(Team 1), Event Player, 10000);
		Wait(2, Ignore Condition);
		Apply Impulse(Event Player, Down, 70, To World, Cancel Contrary Motion);
		Wait Until(Is On Ground(Event Player) == True, 1.500);
		Enable Movement Collision With Environment(Event Player);
		Play Effect(All Players(All Teams), Widowmaker Venom Mine Explosion Effect, Color(Team 2), Position Of(Event Player), 8);
		Damage(All Players(Team 2), Event Player, 104.167);
		Wait(5, Ignore Condition);
		Global.Charging = False;
	}
}

disabled rule("Essence Charges")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		Hanzo;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Reload)) == True;
		Event Player.Charges >= 1;
	}

	actions
	{
		Wait(1, Abort When False);
		Event Player.Charges -= 1;
		Clear Status(Event Player, Knocked Down);
		Heal(Event Player, Event Player, 3500);
		If(Event Player.IceEssence >= 3);
			Small Message(All Players(All Teams), Custom String("Ull's Arrow Triggered Ice Storm"));
			Start Damage Over Time(Players Within Radius(Event Player, 20, Team 2, Surfaces), Event Player, 5, 100);
			Set Move Speed(Players Within Radius(Event Player, 20, Team 2, Surfaces), 100);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Blue), Position Of(Event Player), 20);
			Wait(0.500, Ignore Condition);
			Set Move Speed(Players Within Radius(Event Player, 20, Team 2, Surfaces), 75);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Blue), Position Of(Event Player), 20);
			Wait(0.500, Ignore Condition);
			Set Move Speed(Players Within Radius(Event Player, 20, Team 2, Surfaces), 50);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Sky Blue), Position Of(Event Player), 20);
			Wait(0.500, Ignore Condition);
			Set Move Speed(Players Within Radius(Event Player, 20, Team 2, Surfaces), 25);
			Play Effect(All Players(All Teams), Ring Explosion, Color(Sky Blue), Position Of(Event Player), 20);
			Wait(0.500, Ignore Condition);
			Set Move Speed(Players Within Radius(Event Player, 20, Team 2, Surfaces), 1);
			Play Effect(All Players(All Teams), Ring Explosion, Color(White), Position Of(Event Player), 20);
			Wait(0.500, Ignore Condition);
			Play Effect(All Players(All Teams), Ring Explosion, Color(White), Position Of(Event Player), 20);
			Set Status(Players Within Radius(Event Player, 20, Team 2, Surfaces), Event Player, Frozen, 5);
			Play Effect(All Players(All Teams), Good Explosion, Color(Blue), Position Of(Event Player), 20);
			Wait(5, Ignore Condition);
			Set Move Speed(All Players(Team 2), 115);
		End;
		If(Event Player.LightningEssence >= 3);
			Small Message(All Players(All Teams), Custom String("Kimats Bite Triggered Lightning Strike"));
			Event Player.UCK = 100;
			Teleport(All Players(Team 2), Position Of(Event Player));
			Set Status(All Players(Team 2), Event Player, Stunned, 10);
			Apply Impulse(Event Player, Up, 35, To World, Cancel Contrary Motion);
			Set Ultimate Charge(Event Player, 100);
			Disable Movement Collision With Environment(Event Player, False);
			Press Button(Event Player, Button(Ultimate));
			Wait(0.350, Ignore Condition);
			Set Ultimate Charge(Event Player, 100);
			Wait(1, Ignore Condition);
			Press Button(Event Player, Button(Ultimate));
			Set Ultimate Charge(Event Player, 100);
			Wait(1, Ignore Condition);
			Press Button(Event Player, Button(Ultimate));
			Resurrect(All Players(Team 1));
			Heal(All Players(Team 1), Event Player, 10000);
			Apply Impulse(Event Player, Down, 70, To World, Cancel Contrary Motion);
			Wait Until(Is On Ground(Event Player) == True, 1.500);
			Enable Movement Collision With Environment(Event Player);
			Play Effect(All Players(All Teams), Widowmaker Venom Mine Explosion Effect, Color(Team 2), Position Of(Event Player), 8);
			Damage(All Players(Team 2), Event Player, 50);
		End;
		If(Event Player.WindEssence >= 3);
			Small Message(All Players(All Teams), Custom String("Boreas' Fury Triggered Vortex Impact"));
			Set Status(All Players(Team 1), Event Player, Invincible, 3);
			Respawn(All Dead Players(Team 2));
			Teleport(Players Within Radius(Event Player, 30, Team 2, Off), Position Of(Event Player));
			Set Status(Players Within Radius(Event Player, 30, Team 2, Off), Event Player, Knocked Down, 5);
			Wait(1.500, Ignore Condition);
			Set Gravity(Players Within Radius(Event Player, 30, Team 2, Off), 0);
			Apply Impulse(Players Within Radius(Event Player, 30, Team 2, Off), Up, 15, To World, Cancel Contrary Motion);
			Wait(1.500, Ignore Condition);
			Play Effect(All Players(All Teams), Zarya Particle Cannon Explosion Effect, Color(Team 1), Position Of(Event Player), 8);
			Set Gravity(All Players(Team 2), 100);
			Apply Impulse(All Players(Team 2), Down, 70, To World, Cancel Contrary Motion);
			Wait(1.500, Ignore Condition);
			Play Effect(All Players(All Teams), Doomfist Meteor Strike Impact Effect, Color(Team 1), Position Of(Event Player), 15);
			Damage(Players Within Radius(Event Player, 30, Team 2, Surfaces), Event Player, 2000);
		End;
		If(Event Player.FireEssence >= 3);
			Small Message(All Players(All Teams), Custom String("Kagutsuchi's Blood Triggered Pyroclastic Blast"));
			Set Status(Players Within Radius(Event Player, 12, Team 2, Surfaces), Event Player, Rooted, 7);
			Damage(Players Within Radius(Event Player, 12, Team 2, Surfaces), Event Player, 5);
			Play Effect(All Players(All Teams), Bad Pickup Effect, Color(Red), Position Of(Event Player), 12);
			Play Effect(All Players(All Teams), Junkrat RIP Tire Explosion Effect, Color(Team 2), Position Of(Event Player), 12);
			Wait(0.500, Ignore Condition);
			Damage(Players Within Radius(Event Player, 12, Team 2, Surfaces), Event Player, 10);
			Play Effect(All Players(All Teams), Bad Pickup Effect, Color(Red), Position Of(Event Player), 12);
			Play Effect(All Players(All Teams), Junkrat RIP Tire Explosion Effect, Color(Team 2), Position Of(Event Player), 12);
			Wait(0.500, Ignore Condition);
			Damage(Players Within Radius(Event Player, 12, Team 2, Surfaces), Event Player, 20);
			Play Effect(All Players(All Teams), Bad Pickup Effect, Color(Red), Position Of(Event Player), 12);
			Play Effect(All Players(All Teams), Junkrat RIP Tire Explosion Effect, Color(Team 2), Position Of(Event Player), 12);
			Wait(0.500, Ignore Condition);
			Damage(Players Within Radius(Event Player, 12, Team 2, Surfaces), Event Player, 40);
			Play Effect(All Players(All Teams), Bad Pickup Effect, Color(Red), Position Of(Event Player), 12);
			Play Effect(All Players(All Teams), Junkrat RIP Tire Explosion Effect, Color(Team 2), Position Of(Event Player), 12);
			Wait(0.500, Ignore Condition);
			Damage(Players Within Radius(Event Player, 12, Team 2, Surfaces), Event Player, 80);
			Play Effect(All Players(All Teams), Bad Pickup Effect, Color(Red), Position Of(Event Player), 12);
			Play Effect(All Players(All Teams), Junkrat RIP Tire Explosion Effect, Color(Team 2), Position Of(Event Player), 12);
			Wait(0.500, Ignore Condition);
			Damage(Players Within Radius(Event Player, 12, Team 2, Surfaces), Event Player, 160);
			Play Effect(All Players(All Teams), Bad Pickup Effect, Color(Red), Position Of(Event Player), 12);
			Play Effect(All Players(All Teams), Junkrat RIP Tire Explosion Effect, Color(Team 2), Position Of(Event Player), 12);
			Wait(0.500, Ignore Condition);
			Damage(Players Within Radius(Event Player, 12, Team 2, Surfaces), Event Player, 320);
			Play Effect(All Players(All Teams), Bad Pickup Effect, Color(Red), Position Of(Event Player), 12);
			Play Effect(All Players(All Teams), Junkrat RIP Tire Explosion Effect, Color(Team 2), Position Of(Event Player), 12);
			Wait(0.500, Ignore Condition);
			Start Damage Over Time(Players Within Radius(Event Player, 12, Team 2, Surfaces), Event Player, 5, 640);
			Start Heal Over Time(All Players(Team 1), Event Player, 5, 1500);
			Play Effect(All Players(All Teams), DVa Self Destruct Explosion Effect, Color(Team 2), Position Of(Event Player), 8);
		End;
		If(Event Player.VenomEssence >= 3);
			Small Message(All Players(All Teams), Custom String("Manasa's Fangs Triggered Radioactive Mist"));
			Global.ShadowVectors[22] += 50;
			Global.ShadowVectors[25] = True;
			While(Global.ShadowVectors[22] > 0);
				Wait(0.100, Ignore Condition);
				Play Effect(All Players(All Teams), Ring Explosion, Color(Green), Position Of(Event Player), 24);
				Play Effect(All Players(All Teams), Sombra EMP Explosion Sound, Color(Team 2), Position Of(Event Player), 200);
				Event Player.Vampiric[3] = Sorted Array(All Living Players(Team 2), Distance Between(Event Player, Current Array Element))[0];
				Event Player.Vampiric[4] = Distance Between(Event Player, Event Player.Vampiric[3]);
				Skip If(Event Player.Vampiric[4] <= 12, 1);
				Event Player.Vampiric[4] = 12;
				Skip If(Event Player.Vampiric[4] >= 1, 1);
				Event Player.Vampiric[4] = 1;
				Set Move Speed(Players Within Radius(Event Player, 12, Team 2, Surfaces), 8.750 * Event Player.Vampiric[4]);
				Wait(0.250 * Event Player.Vampiric[4], Ignore Condition);
				Damage(Players Within Radius(Event Player, 12, Team 2, Surfaces), Event Player, 300);
				Global.ShadowVectors[22] -= 1;
			End;
		End;
		If(Event Player.ShadowEssence >= 3);
			Small Message(All Players(All Teams), Custom String("Erebus' Dread reclaims the lost"));
			Global.ShadowVectors[6] = Position Of(Event Player);
			Global.ShadowVectors[0] = 300;
			While(Global.ShadowVectors[0] > 0);
				Wait(0.500, Ignore Condition);
				Players Within Radius(Global.ShadowVectors[6], 20, Filtered Array(All Living Players(Team 2), Current Array Element.Shadow == 0),
					Surfaces).Shadow = 6;
				Damage(Players Within Radius(Global.ShadowVectors[6], 20, Team 2, Surfaces), Event Player, 2500);
				Play Effect(All Players(All Teams), Sigma Hypersphere Implosion Effect, Color(Team 1), Global.ShadowVectors[6], 200);
				Play Effect(All Players(All Teams), Moira Fade Disappear Effect, Color(Team 1), Global.ShadowVectors[6], 5);
				Global.ShadowVectors[0] -= 50;
			End;
			Play Effect(All Players(All Teams), Tracer Recall Disappear Effect, Color(Team 2), Global.ShadowVectors[6], 1000);
			Play Effect(All Players(All Teams), Moira Fade Disappear Sound, Color(Team 2), Global.ShadowVectors[6], 200);
			Play Effect(All Players(All Teams), Pharah Concussive Blast Sound, Color(Team 2), Global.ShadowVectors[6], 200);
			Play Effect(All Players(All Teams), Symmetra Teleporter Reappear Sound, Color(Team 2), Global.ShadowVectors[6], 200);
			Play Effect(All Players(All Teams), Tracer Recall Disappear Sound, Color(Team 2), Global.ShadowVectors[6], 200);
			Wait(0.100, Ignore Condition);
			Global.ShadowVectors[6] = Global.MagicVectors[0];
			Wait(0.200, Ignore Condition);
			All Players(Team 2).Shadow = 0;
			Global.ShadowVectors[0] = 300 * Global.ShadowVectors[4].ShadowEssence;
			Global.ShadowVectors[1] = Global.MagicVectors[0];
			Global.ShadowVectors[2] = Global.MagicVectors[0];
			Global.ShadowVectors[3] = Global.MagicVectors[0];
		End;
		Wait(5, Ignore Condition);
		Respawn(All Dead Players(Team 2));
	}
}

rule("=======Subroutines=======")
{
	event
	{
		Ongoing - Global;
	}
}

disabled rule("EssenceClaim")
{
	event
	{
		Subroutine;
		EssenceClaim;
	}

	actions
	{
		If(
			Event Player.ShadowEssence == 0 && Event Player.IceEssence == 0 && Event Player.VenomEssence == 0 && Event Player.FireEssence == 0 && Event Player.WindEssence == 0 && Event Player.LightningEssence == 0);
			Call Subroutine(HeroBuy);
			Start Forcing Player To Be Hero(Event Player, Hero(Hanzo));
			Call Subroutine(HeroSwitch);
			Global.ShadowVectors[39] = True;
		Else If(Hero Of(Event Player) == Hero(Hanzo));
			Skip If(Global.ShadowVectors[39] == True, 1);
			Global.ShadowVectors[Event Player.ShadowEssence >= 1 ? 31 : (Event Player.VenomEssence >= 1 ? 32 : (
				Event Player.IceEssence >= 1 ? 33 : (Event Player.FireEssence >= 1 ? 34 : (Event Player.WindEssence >= 1 ? 35 : (
				Event Player.LightningEssence >= 1 ? 36 : 37)))))] = Event Player.Ammo;
			Event Player.Ammo = Global.ShadowVectors[38] == 0 ? Global.ShadowVectors[33] : (
				Global.ShadowVectors[38] == 1 ? Global.ShadowVectors[34] : (Global.ShadowVectors[38] == 2 ? Global.ShadowVectors[35] : (
				Global.ShadowVectors[38] == 3 ? Global.ShadowVectors[36] : (Global.ShadowVectors[38] == 4 ? Global.ShadowVectors[31] : (
				Global.ShadowVectors[38] == 5 ? Global.ShadowVectors[32] : Global.ShadowVectors[37])))));
			Event Player.AV = Global.ShadowVectors[38] == 0 ? 216 : (Global.ShadowVectors[38] == 1 ? 92 : (
				Global.ShadowVectors[38] == 2 ? 64 : (Global.ShadowVectors[38] == 3 ? 168 : (Global.ShadowVectors[38] == 4 ? 36 : (
				Global.ShadowVectors[38] == 5 ? 448 : 96)))));
			Event Player.AV = Event Player.AV * (Event Player.Pack == 3 ? 1.500 : 1);
			Stop Forcing Player Outlines(Event Player, All Players(All Teams));
			Start Forcing Player Outlines(Event Player, All Players(All Teams), True, Event Player.IceEssence >= 1 ? Color(Blue) : (
				Event Player.FireEssence >= 1 ? Color(Red) : (Event Player.WindEssence >= 1 ? Color(Yellow) : (
				Event Player.LightningEssence >= 1 ? Color(Purple) : (Event Player.ShadowEssence >= 1 ? Color(Black) : (
				Event Player.VenomEssence >= 1 ? Color(Green) : Color(White)))))), Always);
			Global.ShadowVectors[39] = False;
			If(Event Player.Ammo > Event Player.AV);
				Event Player.Ammo = Event Player.AV;
			End;
			Call Subroutine(EssenceHUD);
			If(Event Player.Pack == 1 || Event Player.Ammo <= 0);
				Set Ability 1 Enabled(Event Player, False);
				Set Secondary Fire Enabled(Event Player, False);
				Set Ability 2 Enabled(Event Player, False);
			Else If(Event Player.Pack >= 3 && Event Player.Ammo > 0);
				Set Ability 1 Enabled(Event Player, True);
				Set Ability 2 Enabled(Event Player, True);
				Set Secondary Fire Enabled(Event Player, True);
			End;
			"Hero Mech (Below Hero S SR)"
			Event Player.Reset = 100 * Event Player.DamageRank * Event Player.Pack;
			Wait(0.100, Ignore Condition);
			Set Damage Dealt(Event Player, Event Player.Reset);
		End;
	}
}

disabled rule("EssenceReset")
{
	event
	{
		Subroutine;
		EssenceReset;
	}

	actions
	{
		If(Global.Ice == 2);
			If(Is True For All(All Players(Team 1), Current Array Element.IceEssence == 0));
				Skip If(Global.ShadowVectors[47] == True, 2);
				Global.Ice = 1;
				Big Message(All Players(All Teams), Custom String("Ice Bow Ready to be claimed"));
			End;
		End;
		If(Global.Fire == 2);
			If(Is True For All(All Players(Team 1), Current Array Element.FireEssence == 0));
				Skip If(Global.ShadowVectors[48] == True, 2);
				Global.Fire = 1;
				Big Message(All Players(All Teams), Custom String("Fire Bow Ready to be claimed"));
			End;
		End;
		If(Global.Wind == 2);
			If(Is True For All(All Players(Team 1), Current Array Element.WindEssence == 0));
				Skip If(Global.ShadowVectors[49] == True, 2);
				Global.Wind = 1;
				Big Message(All Players(All Teams), Custom String("Wind Bow Ready to be claimed"));
			End;
		End;
		If(Global.Lightning == 2);
			If(Is True For All(All Players(Team 1), Current Array Element.LightningEssence == 0));
				Skip If(Global.ShadowVectors[50] == True, 2);
				Global.Lightning = 1;
				Big Message(All Players(All Teams), Custom String("Lightning Bow Ready to be claimed"));
			End;
		End;
		If(Global.Shadow == 2);
			If(Is True For All(All Players(Team 1), Current Array Element.ShadowEssence == 0));
				Skip If(Global.ShadowVectors[51] == True, 2);
				Global.Shadow = 1;
				Big Message(All Players(All Teams), Custom String("Shadow Bow Ready to be claimed"));
			End;
		End;
		If(Global.Venom == 2);
			If(Is True For All(All Players(Team 1), Current Array Element.VenomEssence == 0));
				Skip If(Global.ShadowVectors[52] == True, 2);
				Global.Venom = 1;
				Big Message(All Players(All Teams), Custom String("Venom Bow Ready to be claimed"));
			End;
		End;
		Call Subroutine(EssenceHUD);
	}
}

disabled rule("EssenceZero")
{
	event
	{
		Subroutine;
		EssenceZero;
	}

	actions
	{
		Event Player.LightningEssence = 0;
		Event Player.IceEssence = 0;
		Event Player.FireEssence = 0;
		Event Player.WindEssence = 0;
		Event Player.ShadowEssence = 0;
		Event Player.VenomEssence = 0;
		Call Subroutine(EssenceReset);
	}
}

disabled rule("EssenceHud")
{
	event
	{
		Subroutine;
		EssenceHUD;
	}

	actions
	{
		Global.ShadowVectors[4] = Filtered Array(All Players(Team 1), Current Array Element.ShadowEssence >= 1)[0];
		Global.ShadowVectors[5] = Filtered Array(All Players(Team 1), Current Array Element.VenomEssence >= 1)[0];
		Global.ShadowVectors[8] = Filtered Array(All Players(Team 1), Current Array Element.IceEssence >= 1)[0];
		Global.ShadowVectors[9] = Filtered Array(All Players(Team 1), Current Array Element.FireEssence >= 1)[0];
		Global.ShadowVectors[10] = Filtered Array(All Players(Team 1), Current Array Element.WindEssence >= 1)[0];
		Global.ShadowVectors[11] = Filtered Array(All Players(Team 1), Current Array Element.LightningEssence >= 1)[0];
	}
}

disabled rule("WeaponEffects")
{
	event
	{
		Subroutine;
		WeaponEffects;
	}

	actions
	{
		"Elemental Bows"
		If(Hero Of(Event Player) == Hero(Hanzo) && Event Player.Ammo > 0);
			"Venom Bow"
			If(Event Player.VenomEssence >= 1 && Victim.Venom == 0);
				Play Effect(All Players(All Teams), DVa Micro Missiles Explosion Effect, Color(Team 1), Position Of(Victim), 50);
				Play Effect(All Players(All Teams), Good Pickup Effect, Color(Green), Position Of(Victim), 3);
				Play Effect(All Players(All Teams), Echo Sticky Bomb Explosion Sound, Color(Team 1), Position Of(Victim), 200);
				Damage(Victim, Event Player, 30 * Event Player.VenomEssence);
				Abort If(Is Dead(Victim) == True);
				Victim.Venom = 5 + Event Player.VenomEssence;
				Set Move Speed(Victim, 60 / Event Player.VenomEssence);
				Abort;
			End;
			"Wind Bow"
			If(Event Player.WindEssence >= 1 && Victim.Wind == 0);
				Play Effect(All Players(All Teams), Doomfist Rising Uppercut Impact Sound, Color(Team 2), Position Of(Victim), 500);
				Play Effect(All Players(All Teams), Brigitte Repair Pack Impact Effect, Color(Team 1), Position Of(Victim), 5);
				Play Effect(All Players(All Teams), Winston Jump Pack Landing Effect, Color(Team 1), Position Of(Victim), 5);
				Players Within Radius(Victim, 5 + Event Player.WindEssence, Team 2, Surfaces).Wind = 1;
				Damage(Players Within Radius(Victim, 1.500 * Event Player.WindEssence, Team 2, Surfaces), Event Player,
					5000 * Event Player.WindEssence);
				Abort;
			End;
			"Lightning Bow"
			If(Event Player.LightningEssence >= 1 && Victim.Lightning == 0);
				Play Effect(All Players(All Teams), Cassidy Flashbang Explosion Sound, Color(Team 2), Position Of(Event Player), 150);
				Play Effect(All Players(All Teams), Doomfist Rising Uppercut Leap Sound, Color(Team 2), Position Of(Event Player), 400);
				Play Effect(All Players(All Teams), Sombra Translocator Reappear Effect, Color(Team 1), Position Of(Victim), 3);
				Set Status(Victim, Event Player, Stunned, 1.500);
				Closest Player To(Victim, Team 2).Lightning += 5;
				Damage(Victim, Event Player, 50 * Event Player.LightningEssence);
				Abort If(Is Dead(Victim) == True);
				Victim.Lightning = 10;
				Abort;
			End;
			"Fire Bow"
			If(Event Player.FireEssence >= 1 && Victim.Fire == 0);
				Play Effect(All Players(All Teams), Ashe Dynamite Explosion Sound, Color(Team 2), Position Of(Event Player), 500);
				Play Effect(All Players(All Teams), Bad Explosion, Color(Red), Position Of(Victim), 6);
				Play Effect(All Players(All Teams), Ashe Dynamite Explosion Effect, Color(Team 2), Position Of(Victim), 1);
				Players Within Radius(Victim, 6, Team 2, Surfaces).Fire = 1;
				Damage(Players Within Radius(Victim, 6, Team 2, Surfaces), Event Player, 350 * Event Player.FireEssence);
				Abort;
			End;
			"Ice Bow"
			If(Event Player.IceEssence >= 1 && Victim.Ice < 3);
				Play Effect(All Players(All Teams), Widowmaker Venom Mine Explosion Sound, Color(Team 2), Position Of(Event Player), 1000);
				Play Effect(All Players(All Teams), Good Explosion, Color(Blue), Position Of(Victim), 5);
				Play Effect(All Players(All Teams), Echo Sticky Bomb Explosion Effect, Color(Team 1), Position Of(Victim), 5);
				Players Within Radius(Victim, 5, Team 2, Surfaces).Ice += 1 * Event Player.IceEssence;
				Abort If(Is Dead(Victim) == True);
				Set Status(Victim, Event Player, Frozen, 8);
				Abort;
			End;
		End;
		"Wonder Weapons"
		If(Victim.WonderWeapons == 0);
			"Raygun"
			If(Hero Of(Event Player) == Hero(Mercy));
				Victim.WonderWeapons = 1;
				Play Effect(All Players(All Teams), Good Explosion, Event Player.Pack == 3 ? Color(Red) : Color(Green), Position Of(Victim), 3);
				Players Within Radius(Victim, 3, Team 2, Surfaces).WonderWeapons = 1;
				Damage(Players Within Radius(Victim, 3, Team 2, Surfaces), Event Player, 20);
				Abort;
			End;
			"Raygun Mk II"
			If(Hero Of(Event Player) == Hero(Genji));
				Victim.WonderWeapons = 1;
				Damage(Victim, Event Player, 250);
				Play Effect(All Players(All Teams), Good Explosion, Event Player.Pack == 3 ? Color(Red) : Color(Green), Eye Position(Victim),
					0.200);
				Abort;
			End;
			"Pack Effects"
			If(Event Player.Pack == 3);
				"Boomhilda"
				If(Hero Of(Event Player) == Hero(Cassidy));
					Victim.WonderWeapons = 1;
					Damage(Victim, Event Player, 500);
					Play Effect(All Players(All Teams), Good Explosion, Color(Red), Eye Position(Victim), 0.200);
					Abort;
				End;
			End;
		End;
	}
}

disabled rule("SoulBox")
{
	event
	{
		Subroutine;
		SoulBox;
	}

	actions
	{
		If(Distance Between(Global.PerkVectors[3], Event Player.VictimVector) < 15);
			Event Player.DownCheck = 3;
		Else If(Distance Between(Global.PerkVectors[5], Event Player.VictimVector) < 15);
			Event Player.DownCheck = 5;
		Else If(Distance Between(Global.PerkVectors[7], Event Player.VictimVector) < 15);
			Event Player.DownCheck = 7;
		Else If(Distance Between(Global.PerkVectors[9], Event Player.VictimVector) < 15);
			Event Player.DownCheck = 9;
		Else;
			Abort;
		End;
		Create Homing Projectile(Orb Projectile, Null, Vector(X Component Of(Event Player.VictimVector), Y Component Of(
			Event Player.VictimVector) + 2, Z Component Of(Event Player.VictimVector)), Direction Towards(Event Player.VictimVector,
			Global.PerkVectors[Event Player.DownCheck]), To World, Heal, All Teams, 0, 0, 0, Symmetra Teleporter Reappear Effect,
			Brigitte Whip Shot Heal Area Sound, 0, 5, 1, 0, Global.PerkVectors[Event Player.DownCheck], 1);
		Wait(1, Ignore Condition);
		Global.ShadowVectors[13] += 1;
		Play Effect(All Players(All Teams), Good Pickup Effect, Color(Sky Blue), Global.PerkVectors[Event Player.DownCheck], 1);
		Global.PurgeVectors[3 + Event Player.DownCheck] += 1;
		Play Effect(All Players(All Teams), Good Explosion, Color(Yellow), Global.PerkVectors[Event Player.DownCheck], 1);
		Play Effect(All Players(All Teams), Brigitte Repair Pack Armor Sound, Color(Team 1), Global.PerkVectors[Event Player.DownCheck],
			200);
		If(Global.PurgeVectors[Event Player.DownCheck + 3] >= 30);
			Play Effect(All Players(All Teams), DVa Self Destruct Explosion Effect, Color(Team 1), Global.PerkVectors[Event Player.DownCheck],
				1);
			Play Effect(All Players(All Teams), Sombra EMP Explosion Sound, Color(Team 2), Global.PerkVectors[Event Player.DownCheck], 200);
			Wait(1, Ignore Condition);
			Global.PerkVectors[Event Player.DownCheck] = Global.MagicVectors[0];
			Event Player.DownCheck = Event Player.DownCheck == 9 ? 15 : (Event Player.DownCheck == 7 ? 11 : (
				Event Player.DownCheck == 5 ? 7 : 3));
			Destroy Effect(Global.EasterEggEffects[Event Player.DownCheck]);
			Destroy Effect(Global.EasterEggEffects[Event Player.DownCheck - 1]);
			Destroy Effect(Global.EasterEggEffects[Event Player.DownCheck - 2]);
			Destroy Effect(Global.EasterEggEffects[Event Player.DownCheck - 3]);
			If(Global.PurgeVectors[6] + Global.PurgeVectors[8] + Global.PurgeVectors[10] + Global.PurgeVectors[12] >= 120);
				Global.ShadowVectors[12] = True;
				Global.ShadowVectors[13] = 120;
				Big Message(All Players(All Teams), Custom String("Soul Sacrifices Complete, Claim your reward at the Altar"));
			End;
		End;
	}
}

disabled rule("TabletSouls")
{
	event
	{
		Subroutine;
		TabletSouls;
	}

	actions
	{
		Abort If(Is Meleeing(Event Player) == False);
		If(Event Player.Slabs[2] < 20);
			If(Event Player.Slabs[1] == 1 && Is In Line of Sight(Event Player, Global.PerkVectors[25], Barriers Do Not Block LOS) == True);
				Create Homing Projectile(Orb Projectile, Null, Vector(X Component Of(Event Player.VictimVector), Y Component Of(
					Event Player.VictimVector) + 2, Z Component Of(Event Player.VictimVector)), Direction Towards(Event Player.VictimVector,
					Global.PerkVectors[25]), To World, Heal, All Teams, 0, 0, 0, Sombra Logo Effect, Moira Fade Reappear Sound, 0, 5, 1, 0,
					Global.PerkVectors[25], 1);
				Wait(1, Ignore Condition);
				Event Player.Slabs[2] += 1;
				Play Effect(All Players(All Teams), Good Pickup Effect, Color(Sky Blue), Global.PerkVectors[25], 1);
				Play Effect(All Players(All Teams), Good Explosion, Color(Yellow), Global.PerkVectors[25], 1);
				Play Effect(All Players(All Teams), Brigitte Repair Pack Armor Sound, Color(Team 1), Global.PerkVectors[25], 200);
				Abort;
			Else If(Event Player.Slabs[1] == 3 && Distance Between(Event Player, Global.PerkVectors[23]) <= 8);
				Event Player.Slabs[2] += 1;
				Play Effect(All Players(All Teams), Good Pickup Effect, Color(Sky Blue), Global.PerkVectors[23], 1);
				Play Effect(All Players(All Teams), Good Explosion, Color(Yellow), Global.PerkVectors[23], 1);
				Play Effect(All Players(All Teams), Brigitte Repair Pack Armor Sound, Color(Team 1), Global.PerkVectors[23], 200);
				Abort;
			End;
		End;
	}
}

disabled rule("BowStepsKills")
{
	event
	{
		Subroutine;
		BowStepsKills;
	}

	actions
	{
		Abort If(Global.ShadowVectors[44] != 1);
		"Ice Upgrades"
		If(Event Player.IceEssence >= 1);
			If(Global.IceParts == 4);
				If(Distance Between(Event Player.VictimVector, Global.MagicVectors[3]) <= 3);
					Global.iceUpgrades[2] += 1;
					Play Effect(All Players(All Teams), Zarya Particle Cannon Explosion Effect, Color(Team 1), Global.MagicVectors[3], 1);
					Play Effect(All Players(All Teams), Buff Impact Sound, Color(Team 1), Global.MagicVectors[3], 200);
					If(Global.iceUpgrades[2] < 3);
						Global.iceUpgrades[4] += 1;
						Global.MagicVectors[3] = Global.iceVectors[Global.iceUpgrades[4]];
						Abort;
					Else If(Global.iceUpgrades[2] >= 3);
						Big Message(All Players(All Teams), Custom String("Ull accepts {0}'s offerings", Event Player));
						Global.IceParts = 5;
						Global.ShadowVectors[45] += 1;
						Destroy Effect(Global.EasterEggEffects[41]);
						Destroy Effect(Global.EasterEggEffects[42]);
						Global.iceUpgrades[5] = 31;
						Abort;
					End;
				End;
			Else If(Global.IceParts == 6);
				If(Global.iceUpgrades[0] == True && Event Player.AltarKills > 0);
					If(Distance Between(Victim, Global.PerkVectors[11]) <= Event Player.AltarKills);
						Event Player.AltarKills -= 1;
						Global.iceUpgrades[5] -= 1;
						Abort;
					End;
				End;
			End;
		"Fire Upgrades"
		Else If(Event Player.FireEssence >= 1);
			If(Global.FireParts == 3);
				If(Distance Between(Event Player.VictimVector, Global.fireVectors[7]) <= 5);
					Global.fireUpgrades[5] -= 1;
					Play Effect(All Players(All Teams), Bad Pickup Effect, Color(Red), Event Player.VictimVector, 1);
					Play Effect(All Players(All Teams), Brigitte Repair Pack Armor Sound, Color(Team 1), Event Player.VictimVector, 200);
					If(Global.fireUpgrades[5] <= 0);
						Big Message(All Players(All Teams), Custom String("Kagasutchi accepts {0}'s offerings", Event Player));
						Global.FireParts = 4;
						Global.ShadowVectors[45] += 1;
						Global.fireUpgrades[5] = 4;
						Global.fireUpgrades[1] = 63;
						While(Global.fireUpgrades[1] <= 68);
							Destroy Effect(Global.EasterEggEffects[Global.fireUpgrades[1]]);
							Global.fireUpgrades[1] += 1;
							Wait(0.100, Ignore Condition);
						End;
					End;
					Abort;
				End;
			Else If(Global.FireParts == 6);
				If(Global.fireUpgrades[0] == True && Event Player.AltarKills > 0);
					If(Distance Between(Victim, Global.PerkVectors[13]) <= Event Player.AltarKills);
						Global.fireUpgrades[5] -= 1;
						Event Player.AltarKills -= 1;
						Abort;
					End;
				End;
			End;
		"Wind Upgrades"
		Else If(Event Player.WindEssence >= 1);
			If(Global.WindParts == 4);
				If(Distance Between(Event Player, Global.windVectors[5]) <= 3 && Distance Between(Event Player.VictimVector,
					Global.windUpgrades[3]) <= 5);
					Global.windUpgrades[2] += 1;
					Global.windUpgrades[1] += 1;
					Play Effect(All Players(All Teams), Good Pickup Effect, Color(Yellow), Global.windUpgrades[3], 1);
					Play Effect(All Players(All Teams), Buff Impact Sound, Color(Team 1), Global.windUpgrades[3], 200);
					If(Global.windUpgrades[2] < 30);
						Abort If(Global.windUpgrades[1] < 10);
						Global.windUpgrades[1] = 0;
						Global.windUpgrades[4] += 1;
						Global.windUpgrades[3] = Global.windVectors[Global.windUpgrades[4]];
						Abort;
					Else If(Global.windUpgrades[2] >= 30);
						Big Message(All Players(All Teams), Custom String("Boreas' admires {0}'s markmanship", Event Player));
						Global.WindParts = 5;
						Global.ShadowVectors[45] += 1;
						Destroy Effect(Global.EasterEggEffects[91]);
						Destroy Effect(Global.EasterEggEffects[92]);
						Destroy Effect(Global.EasterEggEffects[93]);
						Abort;
					End;
				End;
			Else If(Global.WindParts == 6);
				If(Global.windUpgrades[0] == True && Event Player.AltarKills > 0);
					If(Distance Between(Victim, Global.PerkVectors[15]) <= Event Player.AltarKills);
						Global.windUpgrades[5] -= 1;
						Event Player.AltarKills -= 1;
						Abort;
					End;
				End;
			End;
		"Lightning Upgrade"
		Else If(Event Player.LightningEssence >= 1);
			If(Global.LightningParts == 6);
				If(Global.lightningUpgrades[0] == True && Event Player.AltarKills > 0);
					If(Distance Between(Victim, Global.PerkVectors[17]) <= Event Player.AltarKills);
						Global.lightningUpgrades[5] -= 1;
						Event Player.AltarKills -= 1;
						Abort;
					End;
				End;
			End;
		"Shadow Upgrade"
		Else If(Event Player.ShadowEssence >= 1);
			If(Global.ShadowParts == 6);
				If(Global.shadowUpgrades[0] == True && Event Player.AltarKills > 0);
					If(Distance Between(Victim, Global.PerkVectors[19]) <= Event Player.AltarKills);
						Global.shadowUpgrades[5] -= 1;
						Event Player.AltarKills -= 1;
						Abort;
					End;
				End;
			End;
		"Venom Upgrade"
		Else If(Event Player.VenomEssence >= 1);
			If(Global.VenomParts == 6);
				If(Global.venomUpgrades[0] == True && Event Player.AltarKills > 0);
					If(Distance Between(Victim, Global.PerkVectors[21]) <= Event Player.AltarKills);
						Global.venomUpgrades[5] -= 1;
						Event Player.AltarKills -= 1;
						Abort;
					End;
				End;
			End;
		End;
	}
}

disabled rule("BowPlace")
{
	event
	{
		Subroutine;
		BowPlace;
	}

	actions
	{
		Event Player.Storage = Empty Array;
		Modify Player Variable(Event Player, Storage, Append To Array, Health(Event Player));
		Start Forcing Player To Be Hero(Event Player, Event Player.Heroes[0]);
		Event Player.Ammo = Event Player.Heroes[1];
		Event Player.Pack = Event Player.Heroes[2];
		Event Player.Repack = Event Player.Heroes[3];
		Modify Player Variable(Event Player, Heroes, Remove From Array By Index, 0);
		Modify Player Variable(Event Player, Heroes, Remove From Array By Index, 0);
		Modify Player Variable(Event Player, Heroes, Remove From Array By Index, 0);
		Modify Player Variable(Event Player, Heroes, Remove From Array By Index, 0);
		Modify Player Variable(Event Player, Heroes, Remove From Array By Index, 0);
		Set Player Health(Event Player, Event Player.Storage[0]);
		Event Player.Switching = 1;
		Event Player.HeroLimit -= 1;
		Call Subroutine(HeroSwitch);
		Call Subroutine(EssenceHUD);
	}
}

disabled rule("BowPlaceResets")
{
	event
	{
		Subroutine;
		BowPlaceResets;
	}

	actions
	{
		"Bow Placements"
		Global.ShadowVectors[46] = 0;
		"Ice Bool"
		Global.ShadowVectors[47] = False;
		"Fire Bool"
		Global.ShadowVectors[48] = False;
		"Wind Bool"
		Global.ShadowVectors[49] = False;
		"Lightning Bool"
		Global.ShadowVectors[50] = False;
		"Shadow Bool"
		Global.ShadowVectors[51] = False;
		"Venom Bool"
		Global.ShadowVectors[52] = False;
		Call Subroutine(EssenceReset);
		If(Global.ShadowVectors[44] == 2);
			Global.iceBool = 0;
			Global.iceValues = Empty Array;
			While(Global.iceBool < 6);
				Global.iceValues[Global.iceBool] = Global.iceBool;
				Global.iceBool += 1;
			End;
			Global.iceBool = Random Value In Array(Global.iceValues);
		"Destroy Altar Effects"
		Else;
			Big Message(All Players(Team 1), Custom String("Step 3 Complete"));
			Destroy In-World Text(Global.EasterEggEffects[45]);
			Destroy Effect(Global.EasterEggEffects[46]);
			Destroy Effect(Global.EasterEggEffects[47]);
			Destroy Effect(Global.EasterEggEffects[48]);
			Destroy In-World Text(Global.EasterEggEffects[78]);
			Destroy Effect(Global.EasterEggEffects[79]);
			Destroy Effect(Global.EasterEggEffects[80]);
			Destroy Effect(Global.EasterEggEffects[81]);
			Destroy In-World Text(Global.EasterEggEffects[96]);
			Destroy Effect(Global.EasterEggEffects[97]);
			Destroy Effect(Global.EasterEggEffects[98]);
			Destroy Effect(Global.EasterEggEffects[99]);
			Destroy In-World Text(Global.EasterEggEffects[128]);
			Destroy Effect(Global.EasterEggEffects[129]);
			Destroy Effect(Global.EasterEggEffects[130]);
			Destroy Effect(Global.EasterEggEffects[131]);
			Destroy In-World Text(Global.EasterEggEffects[148]);
			Destroy Effect(Global.EasterEggEffects[149]);
			Destroy Effect(Global.EasterEggEffects[150]);
			Destroy Effect(Global.EasterEggEffects[151]);
			Destroy In-World Text(Global.EasterEggEffects[154]);
			Destroy Effect(Global.EasterEggEffects[155]);
			Destroy Effect(Global.EasterEggEffects[156]);
			Destroy Effect(Global.EasterEggEffects[157]);
			Destroy Effect(Global.EasterEggEffects[158]);
		End;
	}
}

disabled rule("AltarUpgrade")
{
	event
	{
		Subroutine;
		AltarUpgrade;
	}

	actions
	{
		Wait Until(Event Player.Downs == True || Global.Lockdown == True || Event Player.AltarKills <= 1 || Event Player.Ammo <= 0, 300);
		If(Event Player.AltarKills > 1);
			Event Player.AltarKills = 31;
			Abort;
		Else;
			Event Player.AltarKills = 0;
			Global.ShadowVectors[45] += 1;
			Event Player.Switching = 1;
			Event Player.Pack = 3;
			Call Subroutine(HeroSwitch);
			Event Player.Ammo = Event Player.AV;
			Skip If(Global.ShadowVectors[45] < 42, 2);
			Global.ShadowVectors[44] = 2;
			Big Message(All Players(Team 1), Custom String("Step 2 Complete"));
		End;
	}
}

disabled rule("AltarPlace")
{
	event
	{
		Subroutine;
		AltarPlace;
	}

	actions
	{
		Play Effect(All Players(Team 1), Buff Impact Sound, Color(White), Position Of(Event Player), 200);
		Modify Global Variable(iceValues, Remove From Array By Value, Global.iceBool);
		Global.iceBool = Random Value In Array(Global.iceValues);
		Global.ShadowVectors[46] += 1;
		Call Subroutine(BowPlace);
		If(Global.ShadowVectors[46] >= 6);
			Global.ShadowVectors[44] = 3;
			Call Subroutine(BowPlaceResets);
		End;
	}
}

disabled rule("AltarFail")
{
	event
	{
		Subroutine;
		AltarFail;
	}

	actions
	{
		Big Message(All Players(Team 1), Custom String("The Gods reject your Offerings"));
		Play Effect(All Players(Team 1), Debuff Impact Sound, Color(White), Position Of(Event Player), 200);
		Call Subroutine(BowPlaceResets);
	}
}

disabled rule("BowBuild")
{
	event
	{
		Subroutine;
		BowBuild;
	}

	actions
	{
		Wait(1, Ignore Condition);
		If(Global.IceParts >= 3 && Global.Ice == 0);
			Global.Ice = 1;
			Big Message(All Players(All Teams), Custom String("Ice Bow ready to be claimed"));
		Else If(Global.FireParts >= 3 && Global.Fire == 0);
			Global.Fire = 1;
			Big Message(All Players(All Teams), Custom String("Fire Bow ready to be claimed"));
		Else If(Global.WindParts >= 3 && Global.Wind == 0);
			Global.Wind = 1;
			Big Message(All Players(All Teams), Custom String("Wind Bow ready to be claimed"));
		Else If(Global.LightningParts >= 3 && Global.Lightning == 0);
			Global.Lightning = 1;
			Big Message(All Players(All Teams), Custom String("Lightning Bow ready to be claimed"));
		Else If(Global.ShadowParts >= 3 && Global.Shadow == 0);
			Global.Shadow = 1;
			Big Message(All Players(All Teams), Custom String("Shadow Bow ready to be claimed"));
		Else If(Global.VenomParts >= 3 && Global.Venom == 0);
			Global.Venom = 1;
			Big Message(All Players(All Teams), Custom String("Venom Bow ready to be claimed"));
		End;
	}
}

disabled rule("GauntletRun")
{
	event
	{
		Subroutine;
		GauntletRun;
	}

	actions
	{
		Wait Until(Is True For All(All Players(Team 2), Hero Of(Current Array Element) == Hero(Reaper)), 300);
		Kill(All Players(Team 2), Null);
		Wait(10, Ignore Condition);
		While(Number Of Players(Team 2) < 10);
			Create Dummy Bot(Hero(Reaper), Team 2, -1, Random Value In Array(Global.SpawnPoints), Vector(0, 0, 0));
			Wait(0.100, Ignore Condition);
		End;
		Set Status(All Players(Team 2), Null, Invincible, 3);
		Call Subroutine(EquationSet);
		Set Slow Motion(10);
		Respawn(All Players(Team 2));
		Global.windValues += 1;
		Wait(0.350, Ignore Condition);
		Set Slow Motion(100);
		Big Message(All Players(All Teams), Custom String("Wave {0}", Global.windValues));
	}
}

disabled rule("MoiraMelee")
{
	event
	{
		Subroutine;
		MoiraMelee;
	}

	actions
	{
		If(Global.ShadowVectors[44] == 5);
			If(Is True For Any(Global.lightningVectors, Distance Between(Event Player, Current Array Element) <= 4));
				If(Is Meleeing(Attacker) == True && Hero Of(Attacker) == Hero(Hanzo));
					Event Player.VectorFetch[4] = Sorted Array(Global.lightningVectors, Distance Between(Event Player, Current Array Element))[0];
					Event Player.VectorFetch[5] = Index Of Array Value(Global.lightningVectors, Event Player.VectorFetch[4]);
					If(Event Player.VectorFetch[5] == 0 && Attacker.IceEssence >= 3);
						Destroy Effect(Global.EasterEggEffects[163]);
						Destroy Effect(Global.EasterEggEffects[164]);
						Play Effect(All Players(Team 1), Buff Impact Sound, Color(White), Position Of(Event Player), 200);
						Global.lightningValues += 1;
						Global.lightningVectors[0] = Global.MagicVectors[0];
						Abort;
					Else If(Event Player.VectorFetch[5] == 1 && Attacker.FireEssence >= 3);
						Destroy Effect(Global.EasterEggEffects[165]);
						Destroy Effect(Global.EasterEggEffects[166]);
						Play Effect(All Players(Team 1), Buff Impact Sound, Color(White), Position Of(Event Player), 200);
						Global.lightningValues += 1;
						Global.lightningVectors[1] = Global.MagicVectors[0];
						Abort;
					Else If(Event Player.VectorFetch[5] == 2 && Attacker.WindEssence >= 3);
						Destroy Effect(Global.EasterEggEffects[167]);
						Destroy Effect(Global.EasterEggEffects[168]);
						Play Effect(All Players(Team 1), Buff Impact Sound, Color(White), Position Of(Event Player), 200);
						Global.lightningValues += 1;
						Global.lightningVectors[2] = Global.MagicVectors[0];
						Abort;
					Else If(Event Player.VectorFetch[5] == 3 && Attacker.LightningEssence >= 3);
						Destroy Effect(Global.EasterEggEffects[169]);
						Destroy Effect(Global.EasterEggEffects[170]);
						Play Effect(All Players(Team 1), Buff Impact Sound, Color(White), Position Of(Event Player), 200);
						Global.lightningValues += 1;
						Global.lightningVectors[3] = Global.MagicVectors[0];
						Abort;
					Else If(Event Player.VectorFetch[5] == 4 && Attacker.ShadowEssence >= 3);
						Destroy Effect(Global.EasterEggEffects[171]);
						Destroy Effect(Global.EasterEggEffects[172]);
						Play Effect(All Players(Team 1), Buff Impact Sound, Color(White), Position Of(Event Player), 200);
						Global.lightningValues += 1;
						Global.lightningVectors[4] = Global.MagicVectors[0];
						Abort;
					Else If(Event Player.VectorFetch[5] == 5 && Attacker.VenomEssence >= 3);
						Destroy Effect(Global.EasterEggEffects[173]);
						Destroy Effect(Global.EasterEggEffects[174]);
						Play Effect(All Players(Team 1), Buff Impact Sound, Color(White), Position Of(Event Player), 200);
						Global.lightningValues += 1;
						Global.lightningVectors[5] = Global.MagicVectors[0];
						Abort;
					End;
				End;
			End;
		End;
	}
}

rule("Testing Tele")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Melee)) == True;
	}

	actions
	{
		Event Player.Tele = Facing Direction Of(Event Player);
		Teleport(Event Player, Event Player + Facing Direction Of(Event Player) * 12);
		Set Facing(Event Player, Event Player.Tele, To World);
		Set Move Speed(Event Player, 100);
		Clear Status(Event Player, Rooted);
		Set Status(Event Player, Null, Unkillable, 9999);
	}
}

rule("Vector Set")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Interact)) == True;
	}

	actions
	{
		Event Player.VectorSet = Position Of(Event Player);
		Event Player.SizeSet = 0;
		Event Player.VisualSet = True;
	}
}

rule("Vector Display")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Create HUD Text(All Players(All Teams), Host Player.VectorSet, Null, Null, Top, 0, Color(Red), Color(White), Color(White),
			Visible To and String, Default Visibility);
		Create Effect(Host Player.VisualSet, Sphere, Color(Red), Host Player.VectorSet, Host Player.SizeSet,
			Visible To Position and Radius);
		Create HUD Text(All Players(All Teams), Host Player.SizeSet, Null, Null, Top, 1, Color(Purple), Color(White), Color(White),
			Visible To and String, Default Visibility);
	}
}

rule("Size Increase")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Is Button Held(Host Player, Button(Reload)) == True;
	}

	actions
	{
		Wait(0.100, Ignore Condition);
		Host Player.SizeSet += 1;
		Loop If Condition Is True;
	}
}

rule("Size Decrease")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Is Button Held(Host Player, Button(Crouch)) == True;
	}

	actions
	{
		Wait(0.100, Ignore Condition);
		Host Player.SizeSet -= 0.500;
		Loop If Condition Is True;
	}
}

disabled rule("Perk, Magic, and Weapon Vectors")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		"Disables"
		disabled Disable Inspector Recording;
		Create HUD Text(All Players(All Teams), Null, Null, Custom String(
			"https://workshop.codes/XV6MP. Map: XV6MP. Developed by Marashen. Ver 0.0.1"), Top, -100, Color(Purple), Color(Purple), Color(
			Purple), Visible To and String, Default Visibility);
		"Perk Vectors"
		Global.PerkVectors = Empty Array;
		"Tuff 'Nuff [0]"
		Modify Global Variable(PerkVectors, Append To Array, Vector(0, 0, 0));
		"Challenge Claim [1]"
		Modify Global Variable(PerkVectors, Append To Array, Vector(0, 0, 0));
		"Deadeye Dewdrops [2]"
		Modify Global Variable(PerkVectors, Append To Array, Vector(0, 0, 0));
		"Soul Box 1 [3]"
		Modify Global Variable(PerkVectors, Append To Array, Vector(0, 0, 0));
		"Winters Wail [4]"
		Modify Global Variable(PerkVectors, Append To Array, Vector(0, 0, 0));
		"Soul Box 2 [5]"
		Modify Global Variable(PerkVectors, Append To Array, Vector(0, 0, 0));
		"Change Chews [6]"
		Modify Global Variable(PerkVectors, Append To Array, Vector(0, 0, 0));
		"Soul Box 3 [7]"
		Modify Global Variable(PerkVectors, Append To Array, Vector(0, 0, 0));
		"Bang Bangs [8]"
		Modify Global Variable(PerkVectors, Append To Array, Vector(0, 0, 0));
		"Soul Box 4 [9]"
		Modify Global Variable(PerkVectors, Append To Array, Vector(0, 0, 0));
		"Racin' Stripes [10]"
		Modify Global Variable(PerkVectors, Append To Array, Vector(0, 0, 0));
		"Forge Freeze Altar [11]"
		Modify Global Variable(PerkVectors, Append To Array, Vector(0, 0, 0));
		"Blue Bolts [12]"
		Modify Global Variable(PerkVectors, Append To Array, Vector(0, 0, 0));
		"Shredder Altar [13]"
		Modify Global Variable(PerkVectors, Append To Array, Vector(0, 0, 0));
		"Quickies [14]"
		Modify Global Variable(PerkVectors, Append To Array, Vector(0, 0, 0));
		"Face Melter Altar [15]"
		Modify Global Variable(PerkVectors, Append To Array, Vector(0, 0, 0));
		"Up N' Atoms [16]"
		Modify Global Variable(PerkVectors, Append To Array, Vector(0, 0, 0));
		"Headcutter Altar [17]"
		Modify Global Variable(PerkVectors, Append To Array, Vector(0, 0, 0));
		"Bombstoppers [18]"
		Modify Global Variable(PerkVectors, Append To Array, Vector(0, 0, 0));
		"Dischord Altar [19]"
		Modify Global Variable(PerkVectors, Append To Array, Vector(0, 0, 0));
		"Graveyard Gummies [20]"
		Modify Global Variable(PerkVectors, Append To Array, Vector(0, 0, 0));
		"Acid Rain Altar [21]"
		Modify Global Variable(PerkVectors, Append To Array, Vector(0, 0, 0));
		"Mule Munchies [22]"
		Modify Global Variable(PerkVectors, Append To Array, Vector(0, 0, 0));
		"Ticket Stand [23]"
		Modify Global Variable(PerkVectors, Append To Array, Vector(0, 0, 0));
		"MummNNumms [24]"
		Modify Global Variable(PerkVectors, Append To Array, Vector(0, 0, 0));
		"Ticket Redeemer [25]"
		Modify Global Variable(PerkVectors, Append To Array, Vector(0, 0, 0));
		"Stock Smarties [26]"
		Modify Global Variable(PerkVectors, Append To Array, Vector(0, 0, 0));
		"Beserker's Brew [27]"
		Modify Global Variable(PerkVectors, Append To Array, Vector(0, 0, 0));
		"Slappy Taffy [28]"
		Modify Global Variable(PerkVectors, Append To Array, Vector(0, 0, 0));
		"Power [29]"
		Modify Global Variable(PerkVectors, Append To Array, Vector(0, 0, 0));
		"Magic Vectors"
		Global.MagicVectors = Empty Array;
		"Hidden [0]"
		Modify Global Variable(MagicVectors, Append To Array, Vector(-100, -100, -100));
		"Box [1]"
		Modify Global Variable(MagicVectors, Append To Array, Vector(0, 0, 0));
		Global.MagicVectors[1] = Random Value In Array(Global.BoxLocations);
		"Pack [2]"
		Modify Global Variable(MagicVectors, Append To Array, Vector(0, 0, 0));
		"? [3]"
		Modify Global Variable(MagicVectors, Append To Array, Global.MagicVectors[0]);
		"Perk Slots [4]"
		Modify Global Variable(MagicVectors, Append To Array, Vector(0, 0, 0));
		"Ice [5]"
		Modify Global Variable(MagicVectors, Append To Array, Vector(0, 0, 0));
		"Fire [6]"
		Modify Global Variable(MagicVectors, Append To Array, Vector(0, 0, 0));
		"Wind [7]"
		Modify Global Variable(MagicVectors, Append To Array, Vector(0, 0, 0));
		"Lightning [8]"
		Modify Global Variable(MagicVectors, Append To Array, Vector(0, 0, 0));
		"Shadow [9]"
		Modify Global Variable(MagicVectors, Append To Array, Vector(0, 0, 0));
		"Venom [10]"
		Modify Global Variable(MagicVectors, Append To Array, Vector(0, 0, 0));
		"Helipad [5]"
		Modify Global Variable(BoxLocations, Append To Array, Vector(0, 0, 0));
		"Bow Vectors"
		Global.BowVectors = Empty Array;
		"Ice [0, 1, 2]"
		Modify Global Variable(BowVectors, Append To Array, Vector(0, 0, 0));
		Modify Global Variable(BowVectors, Append To Array, Vector(0, 0, 0));
		Modify Global Variable(BowVectors, Append To Array, Vector(0, 0, 0));
		"Fire [3, 4, 5]"
		Modify Global Variable(BowVectors, Append To Array, Vector(0, 0, 0));
		Modify Global Variable(BowVectors, Append To Array, Vector(0, 0, 0));
		Modify Global Variable(BowVectors, Append To Array, Vector(0, 0, 0));
		"Wind [6, 7, 8]"
		Modify Global Variable(BowVectors, Append To Array, Vector(0, 0, 0));
		Modify Global Variable(BowVectors, Append To Array, Vector(0, 0, 0));
		Modify Global Variable(BowVectors, Append To Array, Vector(0, 0, 0));
		"Lightning [9, 10, 11]"
		Modify Global Variable(BowVectors, Append To Array, Vector(0, 0, 0));
		Modify Global Variable(BowVectors, Append To Array, Vector(0, 0, 0));
		Modify Global Variable(BowVectors, Append To Array, Vector(0, 0, 0));
		"Shadow [12, 13, 14]"
		Modify Global Variable(BowVectors, Append To Array, Vector(0, 0, 0));
		Modify Global Variable(BowVectors, Append To Array, Vector(0, 0, 0));
		Modify Global Variable(BowVectors, Append To Array, Vector(0, 0, 0));
		"Venom [15, 16, 17]"
		Modify Global Variable(BowVectors, Append To Array, Vector(0, 0, 0));
		Modify Global Variable(BowVectors, Append To Array, Vector(0, 0, 0));
		Modify Global Variable(BowVectors, Append To Array, Vector(0, 0, 0));
		"Weapon Vectors"
		Global.WeaponVectors = Empty Array;
		"? (Ashe) [0]"
		Modify Global Variable(WeaponVectors, Append To Array, Vector(0, 0, 0));
		"? (Reaper) [1]"
		Modify Global Variable(WeaponVectors, Append To Array, Vector(0, 0, 0));
		"? (Orisa) [2]"
		Modify Global Variable(WeaponVectors, Append To Array, Vector(0, 0, 0));
		"? (DVA) [3]"
		Modify Global Variable(WeaponVectors, Append To Array, Vector(0, 0, 0));
		"? (Bap) [4]"
		Modify Global Variable(WeaponVectors, Append To Array, Vector(0, 0, 0));
		"? (Hog) [5]"
		Modify Global Variable(WeaponVectors, Append To Array, Vector(0, 0, 0));
		"? (Sombra) [6]"
		Modify Global Variable(WeaponVectors, Append To Array, Vector(0, 0, 0));
		"? (Soldier) [7]"
		Modify Global Variable(WeaponVectors, Append To Array, Vector(0, 0, 0));
		"? (Ana) [8]"
		Modify Global Variable(WeaponVectors, Append To Array, Vector(0, 0, 0));
		"? (Torb) [9]"
		Modify Global Variable(WeaponVectors, Append To Array, Vector(0, 0, 0));
		"? (All) [10]"
		Modify Global Variable(WeaponVectors, Append To Array, Vector(0, 0, 0));
		"? (Brig) [11]"
		Modify Global Variable(WeaponVectors, Append To Array, Vector(0, 0, 0));
		"? (Rammatra) [12]"
		Modify Global Variable(WeaponVectors, Append To Array, Vector(0, 0, 0));
	}
}

disabled rule("Box Vectors and Rates")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		"Box Locations"
		Global.BoxLocations = Empty Array;
		"? [0]"
		Modify Global Variable(BoxLocations, Append To Array, Vector(0, 0, 0));
		"? [1]"
		Modify Global Variable(BoxLocations, Append To Array, Vector(0, 0, 0));
		"? [2]"
		Modify Global Variable(BoxLocations, Append To Array, Vector(0, 0, 0));
		"? [3]"
		Modify Global Variable(BoxLocations, Append To Array, Vector(0, 0, 0));
		"? [4]"
		Modify Global Variable(BoxLocations, Append To Array, Vector(0, 0, 0));
		"Box Rates"
		Global.Box = Empty Array;
		"Thundergun (Doom) | 1% [1/100]"
		Modify Global Variable(Box, Append To Array, Hero(Doomfist));
		"SVU-AS (Ana) | 1% [2/100]"
		Modify Global Variable(Box, Append To Array, Hero(Ana));
		"LSAT (Orisa) | 1% [3/100]"
		Modify Global Variable(Box, Append To Array, Hero(Orisa));
		"Remington (Hog) | 1% [4/100]"
		Modify Global Variable(Box, Append To Array, Hero(Roadhog));
		"AN-94 (Soldier) | 1% [5/100]"
		Modify Global Variable(Box, Append To Array, Hero(Soldier: 76));
		"M16 (Bap) | 1% [6/100]"
		Modify Global Variable(Box, Append To Array, Hero(Baptiste));
		"M14 (Ashe) | 1% [7/100]"
		Modify Global Variable(Box, Append To Array, Hero(Ashe));
		"MP5 (Dva) | 1% [8/100]"
		Modify Global Variable(Box, Append To Array, Hero(D.Va));
		"PDW (Sombra) | 1% [9/100]"
		Modify Global Variable(Box, Append To Array, Hero(Sombra));
		"Five-Seven (Torb) | 1% [10/100]"
		Modify Global Variable(Box, Append To Array, Hero(Torbjörn));
		"Olympia (Reaper) | 1% [11/100]"
		Modify Global Variable(Box, Append To Array, Hero(Reaper));
		"M1911 (McCree) | 1% [12/100]"
		Modify Global Variable(Box, Append To Array, Hero(Cassidy));
		"Katana (Brig) | 1% [13/100]"
		Modify Global Variable(Box, Append To Array, Hero(Brigitte));
		"JGb (Moira) | 2% [15/100]"
		Modify Global Variable(Box, Append To Array, Hero(Moira));
		Modify Global Variable(Box, Append To Array, Hero(Moira));
		"Raygun (Mercy) | 2% [17/100]"
		Modify Global Variable(Box, Append To Array, Hero(Mercy));
		Modify Global Variable(Box, Append To Array, Hero(Mercy));
		"Winters Howl (Mei) | 2% [19/100]"
		Modify Global Variable(Box, Append To Array, Hero(Mei));
		Modify Global Variable(Box, Append To Array, Hero(Mei));
		"DSR-50 (Widow) | 3% [22/100]"
		Modify Global Variable(Box, Append To Array, Hero(Widowmaker));
		Modify Global Variable(Box, Append To Array, Hero(Widowmaker));
		Modify Global Variable(Box, Append To Array, Hero(Widowmaker));
		"Blundergat (Sigma) | 3% [25/100]"
		Modify Global Variable(Box, Append To Array, Hero(Sigma));
		Modify Global Variable(Box, Append To Array, Hero(Sigma));
		Modify Global Variable(Box, Append To Array, Hero(Sigma));
		"Ray Gun Mk 2 (Genji) | 3% [28/100]"
		Modify Global Variable(Box, Append To Array, Hero(Genji));
		Modify Global Variable(Box, Append To Array, Hero(Lifeweaver));
		Modify Global Variable(Box, Append To Array, Hero(Mercy));
		"M1216 (Echo) | 4% [32/100]"
		Modify Global Variable(Box, Append To Array, Hero(Echo));
		Modify Global Variable(Box, Append To Array, Hero(Echo));
		Modify Global Variable(Box, Append To Array, Hero(Echo));
		Modify Global Variable(Box, Append To Array, Hero(Echo));
		"Paralyzer (Winston) | 4% [36/100]"
		Modify Global Variable(Box, Append To Array, Hero(Winston));
		Modify Global Variable(Box, Append To Array, Hero(Winston));
		Modify Global Variable(Box, Append To Array, Hero(Winston));
		Modify Global Variable(Box, Append To Array, Hero(Mei));
		"NX ShadowClaw (Kiriko) | 4% [40/100]"
		Modify Global Variable(Box, Append To Array, Hero(Kiriko));
		Modify Global Variable(Box, Append To Array, Hero(Kiriko));
		Modify Global Variable(Box, Append To Array, Hero(Kiriko));
		Modify Global Variable(Box, Append To Array, Hero(Kiriko));
		"Galil (Bastion) | 4% [44/100]"
		Modify Global Variable(Box, Append To Array, Hero(Bastion));
		Modify Global Variable(Box, Append To Array, Hero(Bastion));
		Modify Global Variable(Box, Append To Array, Hero(Bastion));
		Modify Global Variable(Box, Append To Array, Hero(Bastion));
		"Deathmachine (Zarya) | 4% [48/100]"
		Modify Global Variable(Box, Append To Array, Hero(Zarya));
		Modify Global Variable(Box, Append To Array, Hero(Zarya));
		Modify Global Variable(Box, Append To Array, Hero(Lifeweaver));
		Modify Global Variable(Box, Append To Array, Hero(Lifeweaver));
		"Skorpion EVO (Sojourn) | 4% [52/100]"
		Modify Global Variable(Box, Append To Array, Hero(Sojourn));
		Modify Global Variable(Box, Append To Array, Hero(Sojourn));
		Modify Global Variable(Box, Append To Array, Hero(Sojourn));
		Modify Global Variable(Box, Append To Array, Hero(Sojourn));
		"M1927 (Rammatra) | 4% [56/100]"
		Modify Global Variable(Box, Append To Array, Hero(Ramattra));
		Modify Global Variable(Box, Append To Array, Hero(Ramattra));
		Modify Global Variable(Box, Append To Array, Hero(Bastion));
		Modify Global Variable(Box, Append To Array, Hero(Echo));
		"HAMR (Ball) | 4% [60/100]"
		Modify Global Variable(Box, Append To Array, Hero(Wrecking Ball));
		Modify Global Variable(Box, Append To Array, Hero(Wrecking Ball));
		Modify Global Variable(Box, Append To Array, Hero(Wrecking Ball));
		Modify Global Variable(Box, Append To Array, Hero(Wrecking Ball));
		"S12 (Queen) | 5% [65/100]"
		Modify Global Variable(Box, Append To Array, Hero(Junker Queen));
		Modify Global Variable(Box, Append To Array, Hero(Junker Queen));
		Modify Global Variable(Box, Append To Array, Hero(Junker Queen));
		Modify Global Variable(Box, Append To Array, Hero(Junker Queen));
		Modify Global Variable(Box, Append To Array, Hero(Lifeweaver));
		"Ballistic Knife (Rein) | 5% [70/100]"
		Modify Global Variable(Box, Append To Array, Hero(Reinhardt));
		Modify Global Variable(Box, Append To Array, Hero(Reinhardt));
		Modify Global Variable(Box, Append To Array, Hero(Reinhardt));
		Modify Global Variable(Box, Append To Array, Hero(Reinhardt));
		Modify Global Variable(Box, Append To Array, Hero(Reinhardt));
		"MTAR (Sym) | 5% [75/100]"
		Modify Global Variable(Box, Append To Array, Hero(Symmetra));
		Modify Global Variable(Box, Append To Array, Hero(Symmetra));
		Modify Global Variable(Box, Append To Array, Hero(Symmetra));
		Modify Global Variable(Box, Append To Array, Hero(Symmetra));
		Modify Global Variable(Box, Append To Array, Hero(Symmetra));
		"M8A1 (Lucio) | 5% [80/100]"
		Modify Global Variable(Box, Append To Array, Hero(Lúcio));
		Modify Global Variable(Box, Append To Array, Hero(Lúcio));
		Modify Global Variable(Box, Append To Array, Hero(Lúcio));
		Modify Global Variable(Box, Append To Array, Hero(Lúcio));
		Modify Global Variable(Box, Append To Array, Hero(Lúcio));
		"DW Five-Seven (Tracer) | 5% [85/100]"
		Modify Global Variable(Box, Append To Array, Hero(Tracer));
		Modify Global Variable(Box, Append To Array, Hero(Tracer));
		Modify Global Variable(Box, Append To Array, Hero(Tracer));
		Modify Global Variable(Box, Append To Array, Hero(Tracer));
		Modify Global Variable(Box, Append To Array, Hero(Tracer));
		"FAL (Zen) | 5% [90/100]"
		Modify Global Variable(Box, Append To Array, Hero(Zenyatta));
		Modify Global Variable(Box, Append To Array, Hero(Zenyatta));
		Modify Global Variable(Box, Append To Array, Hero(Zenyatta));
		Modify Global Variable(Box, Append To Array, Hero(Zenyatta));
		Modify Global Variable(Box, Append To Array, Hero(Zenyatta));
		"RPG (Pharah) | 5% [95/100]"
		Modify Global Variable(Box, Append To Array, Hero(Pharah));
		Modify Global Variable(Box, Append To Array, Hero(Pharah));
		Modify Global Variable(Box, Append To Array, Hero(Pharah));
		Modify Global Variable(Box, Append To Array, Hero(Pharah));
		Modify Global Variable(Box, Append To Array, Hero(Pharah));
		"War Machine (Junk) | 5% [100/100]"
		Modify Global Variable(Box, Append To Array, Hero(Junkrat));
		Modify Global Variable(Box, Append To Array, Hero(Junkrat));
		Modify Global Variable(Box, Append To Array, Hero(Junkrat));
		Modify Global Variable(Box, Append To Array, Hero(Junkrat));
		Modify Global Variable(Box, Append To Array, Hero(Junkrat));
		"Box Move (Hanzo) | 10% [~]"
		Modify Global Variable(Box, Append To Array, Hero(Hanzo));
		Modify Global Variable(Box, Append To Array, Hero(Hanzo));
		Modify Global Variable(Box, Append To Array, Hero(Hanzo));
		Modify Global Variable(Box, Append To Array, Hero(Hanzo));
		Modify Global Variable(Box, Append To Array, Hero(Hanzo));
		Modify Global Variable(Box, Append To Array, Hero(Hanzo));
		Modify Global Variable(Box, Append To Array, Hero(Hanzo));
		Modify Global Variable(Box, Append To Array, Hero(Hanzo));
		Modify Global Variable(Box, Append To Array, Hero(Hanzo));
		Modify Global Variable(Box, Append To Array, Hero(Hanzo));
		Wait(1, Ignore Condition);
	}
}

disabled rule("HUD and Variable Init")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		"Global Spawn Points"
		Call Subroutine(SpawnResets);
		"Lockdown Array"
		Global.LockdownArray = Empty Array;
		Modify Global Variable(LockdownArray, Append To Array, Vector(0, 0, 0));
		"PowerUps"
		Create Effect(All Players(All Teams), Sphere, Global.Insta == 2 ? Color(Team 2) : (Global.Max == 2 ? Color(Purple) : (
			Global.Nuke == 2 ? Color(Orange) : (Global.Double == 2 ? Color(Green) : Color(White)))),
			Global.Rolling == True ? Global.PositionDrops : Global.MagicVectors[0], 0.500, Visible To Position Radius and Color);
		Create HUD Text(Global.Insta == 1 || Global.Dub == 2 ? All Living Players(Team 1) : All Players(Team 2), Null,
			Global.Insta == 1 ? Custom String("! Instakill !") : Custom String("$ Double Points $"), Null, Top, 50, Color(Purple), Color(
			Purple), Color(Purple), Visible To and String, Visible Never);
		"Game HUD"
		Create HUD Text(All Players(All Teams), String("{0} {1}", Custom String("Round"), Global.Round), Null, Null, Top, 0, Color(Red),
			Color(Red), Color(Red), Visible To and String, Visible Always);
		Create HUD Text(All Players(All Teams), String("{0} {1}", Global.Kills, Custom String("Zombies Left")), Null, Null, Top, 1, Color(
			Red), Null, Null, Visible To and String, Visible Always);
		Create HUD Text(All Players(Team 1), Null, Null, String("{0} {1} {2}", Custom String("Stand still & press"), Input Binding String(
			Button(Interact)), Custom String("to purchase.")), Right, -9, Color(Team 2), Color(Team 2), Color(Team 2),
			Visible To and String, Visible Always);
		Create HUD Text(All Players(All Teams), String("{0}: {1}", String("{0} {1}", Hero Icon String(Hero Of(Players In Slot(0, Team 1))),
			Players In Slot(0, Team 1)), Players In Slot(0, Team 1).Points), Null, Null, Left, -2, Color(Gray), Color(Gray), Color(Gray),
			Visible To and String, Visible Always);
		Create HUD Text(All Players(All Teams), String("{0}: {1}", String("{0} {1}", Hero Icon String(Hero Of(Players In Slot(1, Team 1))),
			Players In Slot(1, Team 1)), Players In Slot(1, Team 1).Points), Null, Null, Left, -1, Color(Yellow), Color(Yellow), Color(
			Yellow), Visible To and String, Visible Always);
		Create HUD Text(All Players(All Teams), String("{0}: {1}", String("{0} {1}", Hero Icon String(Hero Of(Players In Slot(2, Team 1))),
			Players In Slot(2, Team 1)), Players In Slot(2, Team 1).Points), Null, Null, Left, 0, Color(Purple), Color(Purple), Color(
			Purple), Visible To and String, Visible Always);
		Create HUD Text(All Players(All Teams), String("{0}: {1}", String("{0} {1}", Hero Icon String(Hero Of(Players In Slot(3, Team 1))),
			Players In Slot(3, Team 1)), Players In Slot(3, Team 1).Points), Null, Null, Left, 1, Color(Blue), Color(Blue), Color(Blue),
			Visible To and String, Visible Always);
		Create HUD Text(All Players(All Teams), String("{0}: {1}", String("{0} {1}", Hero Icon String(Hero Of(Players In Slot(4, Team 1))),
			Players In Slot(4, Team 1)), Players In Slot(4, Team 1).Points), Null, Null, Left, 2, Color(Green), Color(Green), Color(Green),
			Visible To and String, Visible Always);
		Create HUD Text(All Players(All Teams), String("{0}: {1}", String("{0} {1}", Hero Icon String(Hero Of(Players In Slot(5, Team 1))),
			Players In Slot(5, Team 1)), Players In Slot(5, Team 1).Points), Null, Null, Left, 3, Color(Orange), Color(Orange), Color(
			Orange), Visible To and String, Visible Always);
		Disable Built-In Game Mode Scoring;
		Disable Built-In Game Mode Completion;
		Disable Built-In Game Mode Announcer;
		"Variable Init"
		Global.BoxOn = False;
		Global.AutoDebug = False;
		Global.Debugging = False;
		Global.Overloading = False;
		Global.Players = Number Of Players(Team 1);
		Global.GenL = 0;
		Global.GenR = 0;
		Global.DoorsRight1 = 0;
		Global.DoorsLeft1 = 0;
		Global.DoorsRight2 = 0;
		Global.DoorsLeft2 = 0;
		Global.Kills = 4 + Number Of Players(Team 1);
		Global.Rolling = False;
		All Players(All Teams).Reset = 0;
		"Drops"
		Global.Insta = 0;
		Global.Max = 0;
		Global.Nuke = 0;
		Global.Double = 0;
		Global.Dub = 1;
		Global.PowerUps = 2;
		Global.PositionDrops = Vector(2000, 2000, 2000);
		"Bows"
		Global.IceParts = 0;
		Global.Ice = 0;
		Global.FireParts = 0;
		Global.Fire = 0;
		Global.WindParts = 0;
		Global.Wind = 0;
		Global.LightningParts = 0;
		Global.Lightning = 0;
		Global.ShadowParts = 0;
		Global.Shadow = 0;
		Global.VenomParts = 0;
		Global.Venom = 0;
		"Global Variable Array"
		Global.ShadowVectors = Empty Array;
		"Shadow Bow Portal Length"
		Global.ShadowVectors[0] = 300;
		"Shadow Bow Vectors"
		Global.ShadowVectors[1] = Global.MagicVectors[0];
		Global.ShadowVectors[2] = Global.MagicVectors[0];
		Global.ShadowVectors[3] = Global.MagicVectors[0];
		"Shadow, Venom Player"
		Global.ShadowVectors[4] = 0;
		Global.ShadowVectors[5] = 0;
		"Shadow Centroid"
		Global.ShadowVectors[6] = Global.MagicVectors[0];
		"Shadow Portal Position"
		Global.ShadowVectors[7] = Global.MagicVectors[0];
		"Ice, Fire, Wind, Lightning Player"
		Global.ShadowVectors[8] = 0;
		Global.ShadowVectors[9] = 0;
		Global.ShadowVectors[10] = 0;
		Global.ShadowVectors[11] = 0;
		"Thunderfists"
		Global.ShadowVectors[12] = False;
		"Soul Count"
		Global.ShadowVectors[13] = 0;
		"Radioactive Bool"
		Global.ShadowVectors[14] = False;
		"Venom Snakes"
		Global.ShadowVectors[15] = Global.MagicVectors[0];
		Global.ShadowVectors[16] = Global.MagicVectors[0];
		Global.ShadowVectors[17] = Global.MagicVectors[0];
		Global.ShadowVectors[18] = Global.MagicVectors[0];
		"While Loop Control"
		Global.ShadowVectors[19] = 0;
		"Venom Leech"
		Global.ShadowVectors[20] = 0;
		"While Loop Index"
		Global.ShadowVectors[21] = 0;
		"Venom Limit"
		Global.ShadowVectors[22] = 0;
		"Venom Sorted Array"
		Global.ShadowVectors[23] = 0;
		"Venom Wait"
		Global.ShadowVectors[24] = 0;
		"Snake Bool Launch"
		Global.ShadowVectors[25] = False;
		"Zombie Move Speed"
		Global.ShadowVectors[26] = 0;
		"Zombie Health"
		Global.ShadowVectors[27] = 0;
		"Zombie Resistance"
		Global.ShadowVectors[28] = 0;
		"Zombie Damage"
		Global.ShadowVectors[29] = 0;
		"Respawn Delay"
		Global.ShadowVectors[30] = 0;
		"Shadow, Venom, Ice, Fire, Wind, & Lightning Bow Ammo"
		Global.ShadowVectors[31] = 36;
		Global.ShadowVectors[32] = 448;
		Global.ShadowVectors[33] = 216;
		Global.ShadowVectors[34] = 92;
		Global.ShadowVectors[35] = 64;
		Global.ShadowVectors[36] = 168;
		Global.ShadowVectors[37] = 96;
		"Bow Index ID"
		Global.ShadowVectors[38] = 0;
		"Bow Ammo Set"
		Global.ShadowVectors[39] = False;
		"Power Ups RNG"
		Global.ShadowVectors[40] = Random Value In Array(Global.Box);
		Global.ShadowVectors[41] = Index Of Array Value(Global.ShadowVectors, 40);
		Global.ShadowVectors[42] = Vector(2000, 2000, 2000);
		"Health Display"
		Global.ShadowVectors[43] = 0;
		"Easter Egg Step"
		Global.ShadowVectors[44] = 0;
		"Bow Part Sum"
		Global.ShadowVectors[45] = 0;
		"Bow Placements"
		Global.ShadowVectors[46] = 0;
		"Ice Bool"
		Global.ShadowVectors[47] = False;
		"Fire Bool"
		Global.ShadowVectors[48] = False;
		"Wind Bool"
		Global.ShadowVectors[49] = False;
		"Lightning Bool"
		Global.ShadowVectors[50] = False;
		"Shadow Bool"
		Global.ShadowVectors[51] = False;
		"Venom Bool"
		Global.ShadowVectors[52] = False;
		"Global Spawn"
		Global.ShadowVectors[53] = Vector(-99.507, 2.175, 72.675);
		"Effects Set-Up"
		Wait(1, Ignore Condition);
		Call Subroutine(MapSetup);
		Start Damage Modification(Filtered Array(All Living Players(Team 2), Has Status(Current Array Element, Frozen) == True),
			Global.ShadowVectors[8], 1500 * Global.ShadowVectors[8].IceEssence, Receivers Damagers and Damage Percent);
		Start Damage Modification(Filtered Array(All Living Players(Team 2), Current Array Element.Venom >= 1), All Players(Team 1),
			250 * Global.ShadowVectors[5].VenomEssence, Receivers Damagers and Damage Percent);
		Start Damage Modification(Filtered Array(All Living Players(Team 2), Hero Of(Current Array Element) != Hero(Reaper)), All Players(
			Team 1), 30, Receivers and Damagers);
		"Enemy Spawn"
		While(Number Of Players(Team 2) < 2);
			Create Dummy Bot(Hero(Reaper), Team 2, -1, Random Value In Array(Global.SpawnPoints), Vector(0, 0, 0));
			Wait(1, Ignore Condition);
		End;
		Global.Round = 1;
		Call Subroutine(EquationSet);
		Big Message(All Players(All Teams), Custom String("Round 1"));
		"Easter Egg Init"
		Wait Until(Global.ShadowVectors[44] == 1, 99999);
		Big Message(All Players(Team 1), Custom String("Step 1 Complete"));
		Call Subroutine(EasterEggSetup);
	}
}

disabled rule("Tele, Blocked Area, Door, and Power Vectors")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		"Teleporter Vectors"
		Global.TeleArray = Empty Array;
		"? [0]"
		Modify Global Variable(TeleArray, Append To Array, Vector(-100, -100, -100));
		"? [1]"
		Modify Global Variable(TeleArray, Append To Array, Vector(0, 0, 0));
		"? [2]"
		Modify Global Variable(TeleArray, Append To Array, Vector(-100, -100, -100));
		"? [3]"
		Modify Global Variable(TeleArray, Append To Array, Vector(0, 0, 0));
		"? [4]"
		Modify Global Variable(TeleArray, Append To Array, Vector(-100, -100, -100));
		"? [6]"
		Modify Global Variable(TeleArray, Append To Array, Vector(0, 0, 0));
		"? [7]"
		Modify Global Variable(TeleArray, Append To Array, Vector(-100, -100, -100));
		"? [8]"
		Modify Global Variable(TeleArray, Append To Array, Vector(0, 0, 0));
		"? [9]"
		Modify Global Variable(TeleArray, Append To Array, Vector(-100, -100, -100));
		"? [10]"
		Modify Global Variable(TeleArray, Append To Array, Vector(0, 0, 0));
		"? [11]"
		Modify Global Variable(TeleArray, Append To Array, Vector(-100, -100, -100));
		"? [12]"
		Modify Global Variable(TeleArray, Append To Array, Vector(0, 0, 0));
		"? [13]"
		Modify Global Variable(TeleArray, Append To Array, Vector(-100, -100, -100));
		"? [14]"
		Modify Global Variable(TeleArray, Append To Array, Vector(0, 0, 0));
		"? [15]"
		Modify Global Variable(TeleArray, Append To Array, Vector(-100, -100, -100));
		"? [16]"
		Modify Global Variable(TeleArray, Append To Array, Vector(0, 0, 0));
		"Blocked Zone Vectors"
		Global.BlockedVectors = Empty Array;
		"? [0, 1]"
		Modify Global Variable(BlockedVectors, Append To Array, Vector(0, 0, 0));
		Modify Global Variable(BlockedVectors, Append To Array, 0);
		"? [2, 3]"
		Modify Global Variable(BlockedVectors, Append To Array, Vector(0, 0, 0));
		Modify Global Variable(BlockedVectors, Append To Array, 0);
		"? [4, 5]"
		Modify Global Variable(BlockedVectors, Append To Array, Vector(0, 0, 0));
		Modify Global Variable(BlockedVectors, Append To Array, 0);
		"? [6, 7]"
		Modify Global Variable(BlockedVectors, Append To Array, Vector(0, 0, 0));
		Modify Global Variable(BlockedVectors, Append To Array, 0);
		"? [8, 9]"
		Modify Global Variable(BlockedVectors, Append To Array, Vector(0, 0, 0));
		Modify Global Variable(BlockedVectors, Append To Array, 0);
		"? [10, 11]"
		Modify Global Variable(BlockedVectors, Append To Array, Vector(0, 0, 0));
		Modify Global Variable(BlockedVectors, Append To Array, 0);
		"Door Vectors"
		Global.DoorVectors = Empty Array;
		"? [0]"
		Modify Global Variable(DoorVectors, Append To Array, Vector(0, 0, 0));
		"? [1]"
		Modify Global Variable(DoorVectors, Append To Array, Vector(0, 0, 0));
		"? [2]"
		Modify Global Variable(DoorVectors, Append To Array, Vector(0, 0, 0));
		"? [3]"
		Modify Global Variable(DoorVectors, Append To Array, Vector(0, 0, 0));
		"? [4]"
		Modify Global Variable(DoorVectors, Append To Array, Vector(0, 0, 0));
		"? [5]"
		Modify Global Variable(DoorVectors, Append To Array, Vector(0, 0, 0));
		"? [6]"
		Modify Global Variable(DoorVectors, Append To Array, Vector(0, 0, 0));
		"? [7]"
		Modify Global Variable(DoorVectors, Append To Array, Vector(0, 0, 0));
		"? [8]"
		Modify Global Variable(DoorVectors, Append To Array, Vector(0, 0, 0));
		"? [9]"
		Modify Global Variable(DoorVectors, Append To Array, Vector(0, 0, 0));
		"? [10]"
		Modify Global Variable(DoorVectors, Append To Array, Vector(0, 0, 0));
		"? [11]"
		Modify Global Variable(DoorVectors, Append To Array, Vector(0, 0, 0));
		"Purge Vectors"
		Global.PurgeVectors = Empty Array;
		"? [0]"
		Modify Global Variable(PurgeVectors, Append To Array, Vector(0, 0, 0));
		"? [1]"
		Modify Global Variable(PurgeVectors, Append To Array, Vector(0, 0, 0));
		"? [2]"
		Modify Global Variable(PurgeVectors, Append To Array, Vector(0, 0, 0));
		"? [3]"
		Modify Global Variable(PurgeVectors, Append To Array, Vector(0, 0, 0));
		"? [4]"
		Modify Global Variable(PurgeVectors, Append To Array, Vector(0, 0, 0));
		"? [5]"
		Modify Global Variable(PurgeVectors, Append To Array, Vector(0, 0, 0));
		Wait(1, Ignore Condition);
		"Soul 1 Count [6]"
		Modify Global Variable(PurgeVectors, Append To Array, 0);
		"Soul 1 Color [7]"
		Modify Global Variable(PurgeVectors, Append To Array, 255);
		"Soul 2 Count [8]"
		Modify Global Variable(PurgeVectors, Append To Array, 0);
		"Soul 2 Color [9]"
		Modify Global Variable(PurgeVectors, Append To Array, 255);
		"Soul 3 Count [10]"
		Modify Global Variable(PurgeVectors, Append To Array, 0);
		"Soul 3 Color [11]"
		Modify Global Variable(PurgeVectors, Append To Array, 255);
		"Soul 4 Count [12]"
		Modify Global Variable(PurgeVectors, Append To Array, 0);
		"Soul 4 Color [13]"
		Modify Global Variable(PurgeVectors, Append To Array, 255);
	}
}

disabled rule("Bow Effects")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		"Bow Parts"
		Global.BowParts = Empty Array;
		"Ice [0, 1, 2]"
		Create Effect(All Players(All Teams), Orb, Color(Blue), Global.BowVectors[0], 1, Visible To);
		Modify Global Variable(BowParts, Append To Array, Last Created Entity);
		Create Effect(All Players(All Teams), Orb, Color(Blue), Global.BowVectors[1], 1, Visible To);
		Modify Global Variable(BowParts, Append To Array, Last Created Entity);
		Create Effect(All Players(All Teams), Orb, Color(Blue), Global.BowVectors[2], 1, Visible To);
		Modify Global Variable(BowParts, Append To Array, Last Created Entity);
		"Fire [3, 4, 5]"
		Create Effect(All Players(All Teams), Orb, Color(Red), Global.BowVectors[3], 1, Visible To);
		Modify Global Variable(BowParts, Append To Array, Last Created Entity);
		Create Effect(All Players(All Teams), Orb, Color(Red), Global.BowVectors[4], 1, Visible To);
		Modify Global Variable(BowParts, Append To Array, Last Created Entity);
		Create Effect(All Players(All Teams), Orb, Color(Red), Global.BowVectors[5], 1, Visible To);
		Modify Global Variable(BowParts, Append To Array, Last Created Entity);
		"Wind [6, 7, 8]"
		Create Effect(All Players(All Teams), Orb, Color(Yellow), Global.BowVectors[6], 1, Visible To);
		Modify Global Variable(BowParts, Append To Array, Last Created Entity);
		Create Effect(All Players(All Teams), Orb, Color(Yellow), Global.BowVectors[7], 1, Visible To);
		Modify Global Variable(BowParts, Append To Array, Last Created Entity);
		Create Effect(All Players(All Teams), Orb, Color(Yellow), Global.BowVectors[8], 1, Visible To);
		Modify Global Variable(BowParts, Append To Array, Last Created Entity);
		"Lightning [9, 10, 11]"
		Create Effect(All Players(All Teams), Orb, Color(Purple), Global.BowVectors[9], 1, Visible To);
		Modify Global Variable(BowParts, Append To Array, Last Created Entity);
		Create Effect(All Players(All Teams), Orb, Color(Purple), Global.BowVectors[10], 1, Visible To);
		Modify Global Variable(BowParts, Append To Array, Last Created Entity);
		Create Effect(All Players(All Teams), Orb, Color(Purple), Global.BowVectors[11], 1, Visible To);
		Modify Global Variable(BowParts, Append To Array, Last Created Entity);
		"Shadow [12, 13, 14]"
		Create Effect(All Players(All Teams), Orb, Color(Black), Global.BowVectors[12], 1, Visible To);
		Modify Global Variable(BowParts, Append To Array, Last Created Entity);
		Create Effect(All Players(All Teams), Orb, Color(Black), Global.BowVectors[13], 1, Visible To);
		Modify Global Variable(BowParts, Append To Array, Last Created Entity);
		Create Effect(All Players(All Teams), Orb, Color(Black), Global.BowVectors[14], 1, Visible To);
		Modify Global Variable(BowParts, Append To Array, Last Created Entity);
		"Venom [15, 16, 17]"
		Create Effect(All Players(All Teams), Orb, Color(Green), Global.BowVectors[15], 1, Visible To);
		Modify Global Variable(BowParts, Append To Array, Last Created Entity);
		Create Effect(All Players(All Teams), Orb, Color(Green), Global.BowVectors[16], 1, Visible To);
		Modify Global Variable(BowParts, Append To Array, Last Created Entity);
		Create Effect(All Players(All Teams), Orb, Color(Green), Global.BowVectors[17], 1, Visible To);
		Modify Global Variable(BowParts, Append To Array, Last Created Entity);
		"Ice [5]"
		Create Effect(All Players(All Teams), Orb, Color(Blue), Global.Ice == 1 ? Global.MagicVectors[5] : Global.MagicVectors[0], 1,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Ring, Color(Blue), Global.MagicVectors[5], 2, Visible To);
		Create In-World Text(All Players(Team 1), Global.Ice == 2 ? String("{0} {1}", Global.ShadowVectors[8], Custom String(
			"Has Ice Bow")) : String("{0}: {1}", Custom String("Ice Bow"), String("{0} / {1}", Global.IceParts, Custom String(
			"3 Parts Found"))), Global.MagicVectors[5], 1, Clip Against Surfaces, Visible To String and Color,
			Global.IceParts >= 3 ? Color(Blue) : Color(White), Visible Always);
		Create HUD Text(Global.ShadowVectors[8], Global.IceParts < 7 ? Custom String("Ice Bow") : String("{0}: {1}", Custom String(
			"Ull's Arrow"), Global.ShadowVectors[8].Charges), Global.IceParts < 7 ? String("{0} {1}", 7 - Global.IceParts, Custom String(
			"Upgrade Step(s) Left")) : String("{0} {1} {2}", Custom String("Hold"), Input Binding String(Button(Reload)), Custom String(
			"To release charged shot")), Null, Left, 7, Color(Blue), Color(Blue), Color(Blue), Visible To and String, Visible Always);
		"Fire [6]"
		Create Effect(All Players(All Teams), Orb, Color(Red), Global.Fire == 1 ? Global.MagicVectors[6] : Global.MagicVectors[0], 1,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Ring, Color(Red), Global.MagicVectors[6], 2, Visible To);
		Create In-World Text(All Players(Team 1), Global.Fire == 2 ? String("{0} {1}", Global.ShadowVectors[9], Custom String(
			"Has Fire Bow")) : String("{0}: {1}", Custom String("Fire Bow"), String("{0} / {1}", Global.FireParts, Custom String(
			"3 Parts Found"))), Global.MagicVectors[6], 1, Clip Against Surfaces, Visible To String and Color,
			Global.FireParts >= 3 ? Color(Red) : Color(White), Visible Always);
		Create HUD Text(Global.ShadowVectors[9], Global.FireParts < 7 ? Custom String("Fire Bow") : String("{0}: {1}", Custom String(
			"Kagutsuchi's Blood"), Global.ShadowVectors[9].Charges), Global.FireParts < 7 ? String("{0} {1}", 7 - Global.FireParts,
			Custom String("Upgrade Step(s) Left")) : String("{0} {1} {2}", Custom String("Hold"), Input Binding String(Button(Reload)),
			Custom String("To release charged shot")), Null, Left, 7, Color(Red), Color(Red), Color(Red), Visible To and String,
			Visible Always);
		"Wind [7]"
		Create Effect(All Players(All Teams), Orb, Color(Yellow), Global.Wind == 1 ? Global.MagicVectors[7] : Global.MagicVectors[0], 1,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Ring, Color(Yellow), Global.MagicVectors[7], 2, Visible To);
		Create In-World Text(All Players(Team 1), Global.Wind == 2 ? String("{0} {1}", Global.ShadowVectors[10], Custom String(
			"Has Wind Bow")) : String("{0}: {1}", Custom String("Wind Bow"), String("{0} / {1}", Global.WindParts, Custom String(
			"3 Parts Found"))), Global.MagicVectors[7], 1, Clip Against Surfaces, Visible To String and Color,
			Global.WindParts >= 3 ? Color(Yellow) : Color(White), Visible Always);
		Create HUD Text(Global.ShadowVectors[10], Global.WindParts < 7 ? Custom String("Wind Bow") : String("{0}: {1}", Custom String(
			"Boreas' Fury"), Global.ShadowVectors[10].Charges), Global.WindParts < 7 ? String("{0} {1}", 7 - Global.WindParts,
			Custom String("Upgrade Step(s) Left")) : String("{0} {1} {2}", Custom String("Hold"), Input Binding String(Button(Reload)),
			Custom String("To release charged shot")), Null, Left, 7, Color(Yellow), Color(Yellow), Color(Yellow), Visible To and String,
			Visible Always);
		"Lightning [8]"
		Create Effect(All Players(All Teams), Orb, Color(Purple), Global.Lightning == 1 ? Global.MagicVectors[8] : Global.MagicVectors[0],
			1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Ring, Color(Purple), Global.MagicVectors[8], 2, Visible To);
		Create In-World Text(All Players(Team 1), Global.Lightning == 2 ? String("{0} {1}", Global.ShadowVectors[11], Custom String(
			"Has Lightning Bow")) : String("{0}: {1}", Custom String("Lightning Bow"), String("{0} / {1}", Global.LightningParts,
			Custom String("3 Parts Found"))), Global.MagicVectors[8], 1, Clip Against Surfaces, Visible To String and Color,
			Global.LightningParts >= 3 ? Color(Purple) : Color(White), Visible Always);
		Create HUD Text(Global.ShadowVectors[11], Global.LightningParts < 7 ? Custom String("Lightning Bow") : String("{0}: {1}",
			Custom String("Kimat's Bite"), Global.ShadowVectors[11].Charges), Global.LightningParts < 7 ? String("{0} {1}",
			7 - Global.LightningParts, Custom String("Upgrade Step(s) Left")) : String("{0} {1} {2}", Custom String("Hold"),
			Input Binding String(Button(Reload)), Custom String("To release charged shot")), Null, Left, 7, Color(Purple), Color(Purple),
			Color(Purple), Visible To and String, Visible Always);
		"Shadow [9]"
		Create Effect(All Players(All Teams), Orb, Color(Black), Global.Shadow == 1 ? Global.MagicVectors[9] : Global.MagicVectors[0], 1,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Ring, Color(Black), Global.MagicVectors[9], 2, Visible To);
		Create In-World Text(All Players(Team 1), Global.Shadow == 2 ? String("{0} {1}", Global.ShadowVectors[4], Custom String(
			"Has Shadow Bow")) : String("{0}: {1}", Custom String("Shadow Bow"), String("{0} / {1}", Global.ShadowParts, Custom String(
			"3 Parts Found"))), Global.MagicVectors[9], 1, Clip Against Surfaces, Visible To String and Color,
			Global.ShadowParts >= 3 ? Color(Black) : Color(White), Visible Always);
		Create HUD Text(Global.ShadowVectors[4], Global.ShadowParts < 7 ? Custom String("Shadow Bow") : String("{0}: {1}", Custom String(
			"Erebus' Dread"), Global.ShadowVectors[4].Charges), Global.ShadowParts < 7 ? String("{0} {1}", 7 - Global.ShadowParts,
			Custom String("Upgrade Step(s) Left")) : String("{0} {1} {2}", Custom String("Hold"), Input Binding String(Button(Reload)),
			Custom String("To release charged shot")), Null, Left, 7, Color(Gray), Color(Gray), Color(Gray), Visible To and String,
			Visible Always);
		"Venom [10]"
		Create Effect(All Players(All Teams), Orb, Color(Green), Global.Venom == 1 ? Global.MagicVectors[10] : Global.MagicVectors[0], 1,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Ring, Color(Green), Global.MagicVectors[10], 2, Visible To);
		Create In-World Text(All Players(Team 1), Global.Venom == 2 ? String("{0} {1}", Global.ShadowVectors[5], Custom String(
			"Has Venom Bow")) : String("{0}: {1}", Custom String("Venom Bow"), String("{0} / {1}", Global.VenomParts, Custom String(
			"3 Parts Found"))), Global.MagicVectors[10], 1, Clip Against Surfaces, Visible To String and Color,
			Global.VenomParts >= 3 ? Color(Green) : Color(White), Visible Always);
		Create HUD Text(Global.ShadowVectors[5], Global.VenomParts < 7 ? Custom String("Venom Bow") : String("{0}: {1}", Custom String(
			"Manasa's Fangs"), Global.ShadowVectors[5].Charges), Global.VenomParts < 7 ? String("{0} {1}", 7 - Global.VenomParts,
			Custom String("Upgrade Step(s) Left")) : String("{0} {1} {2}", Custom String("Hold"), Input Binding String(Button(Reload)),
			Custom String("To release charged shot")), Null, Left, 7, Color(Green), Color(Green), Color(Green), Visible To and String,
			Visible Always);
		"Portal 1 [3]"
		Create Effect(All Players(Team 1), Bad Aura, Color(Black), Global.ShadowVectors[3], 3, Visible To Position and Radius);
		Create Effect(All Players(Team 1), Zenyatta Orb of Discord Target Effect, Color(Team 1), Global.ShadowVectors[3], 3,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sigma Gravitic Flux Target Effect, Color(Team 2), Global.ShadowVectors[3], 60,
			Visible To Position and Radius);
		Create Effect(All Players(Team 1), Orb, Color(Black), Global.ShadowVectors[3], 3, Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Bad Beam, Global.ShadowVectors[3], Is In Line of Sight(Global.ShadowVectors[3],
			Global.ShadowVectors[1], Barriers Do Not Block LOS) == True ? Global.ShadowVectors[1] : Global.ShadowVectors[3], Color(Team 2),
			Visible To Position and Radius);
		"Portal 2 [1]"
		Create Effect(All Players(Team 1), Bad Aura, Color(Black), Global.ShadowVectors[1], 3, Visible To Position and Radius);
		Create Effect(All Players(Team 1), Zenyatta Orb of Discord Target Effect, Color(Team 1), Global.ShadowVectors[1], 3,
			Visible To Position and Radius);
		Create Effect(All Players(Team 1), Sigma Gravitic Flux Target Effect, Color(Team 2), Global.ShadowVectors[1], 60,
			Visible To Position and Radius);
		Create Effect(All Players(Team 1), Orb, Color(Black), Global.ShadowVectors[1], 3, Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Bad Beam, Global.ShadowVectors[1], Is In Line of Sight(Global.ShadowVectors[1],
			Global.ShadowVectors[2], Barriers Do Not Block LOS) == True ? Global.ShadowVectors[2] : Global.ShadowVectors[1], Color(Team 2),
			Visible To Position and Radius);
		"Portal 3 [2]"
		Create Effect(All Players(Team 1), Bad Aura, Color(Black), Global.ShadowVectors[2], 3, Visible To Position and Radius);
		Create Effect(All Players(Team 1), Zenyatta Orb of Discord Target Effect, Color(Team 1), Global.ShadowVectors[2], 3,
			Visible To Position and Radius);
		Create Effect(All Players(Team 1), Sigma Gravitic Flux Target Effect, Color(Team 2), Global.ShadowVectors[2], 60,
			Visible To Position and Radius);
		Create Effect(All Players(Team 1), Orb, Color(Black), Global.ShadowVectors[2], 3, Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Bad Beam, Global.ShadowVectors[2], Is In Line of Sight(Global.ShadowVectors[2],
			Global.ShadowVectors[3], Barriers Do Not Block LOS) == True ? Global.ShadowVectors[3] : Global.ShadowVectors[2], Color(Team 2),
			Visible To Position and Radius);
		"Centroid Effects"
		Create Effect(All Players(All Teams), Orb, Color(Black), Global.ShadowVectors[6], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Good Aura, Color(Black), Global.ShadowVectors[6], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Zenyatta Orb of Discord Target Effect, Color(Team 1), Global.ShadowVectors[6], 1,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sigma Gravitic Flux Target Effect, Color(Team 2), Global.ShadowVectors[6], 1,
			Visible To Position and Radius);
		Create Effect(All Players(All Teams), Bad Aura, Color(Team 2), Global.ShadowVectors[6], 1, Visible To Position and Radius);
		"Venom Snakes"
		Create Beam Effect(All Players(All Teams), Bad Beam,
			Global.ShadowVectors[14] == True && Global.ShadowVectors[15] != Global.MagicVectors[0] ? Global.ShadowVectors[5] : Global.MagicVectors[0],
			Global.ShadowVectors[15], Color(Green), Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Bad Beam,
			Global.ShadowVectors[14] == True && Global.ShadowVectors[16] != Global.MagicVectors[0] ? Global.ShadowVectors[5] : Global.MagicVectors[0],
			Global.ShadowVectors[16], Color(Green), Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Bad Beam,
			Global.ShadowVectors[14] == True && Global.ShadowVectors[17] != Global.MagicVectors[0] ? Global.ShadowVectors[5] : Global.MagicVectors[0],
			Global.ShadowVectors[17], Color(Green), Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Bad Beam,
			Global.ShadowVectors[14] == True && Global.ShadowVectors[18] != Global.MagicVectors[0] ? Global.ShadowVectors[5] : Global.MagicVectors[0],
			Global.ShadowVectors[18], Color(Green), Visible To Position and Radius);
	}
}

disabled rule("Perk,Tablet, and Soul Effects")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		"Juggernog [0]"
		Create Effect(All Players(All Teams), Ring, Color(Red), Global.PerkVectors[0], 2, Visible To);
		Create In-World Text(All Players(All Teams), Custom String("Juggernog (2500 Points)"), Global.PerkVectors[0], 1,
			Clip Against Surfaces, Visible To, Color(Red), Visible Always);
		"Deadshot [2]"
		Create Effect(All Players(All Teams), Ring, Color(White), Global.PerkVectors[2], 2, Visible To);
		Create In-World Text(All Players(All Teams), Custom String("Deadshot (1500 Points)"), Global.PerkVectors[2], 1,
			Clip Against Surfaces, Visible To, Color(White), Visible Always);
		"Widows Wine [4]"
		Create Effect(All Players(All Teams), Ring, Color(Purple), Global.PerkVectors[4], 2, Visible To);
		Create In-World Text(All Players(All Teams), Custom String("Widow's Wine (4000 Points)"), Global.PerkVectors[4], 1,
			Clip Against Surfaces, Visible To, Color(Purple), Visible Always);
		"Epop [6]"
		Create Effect(All Players(All Teams), Ring, Color(Rose), Global.PerkVectors[6], 2, Visible To);
		Create In-World Text(All Players(All Teams), Custom String("Elemental Pop (4000 Points)"), Global.PerkVectors[6], 1,
			Clip Against Surfaces, Visible To, Color(Rose), Visible Always);
		"Dtap [8]"
		Create Effect(All Players(All Teams), Ring, Color(Orange), Global.PerkVectors[8], 2, Visible To);
		Create In-World Text(All Players(All Teams), Custom String("Double Tap (2000 Points)"), Global.PerkVectors[8], 1,
			Clip Against Surfaces, Visible To, Color(Orange), Visible Always);
		"StaminaUp [10]"
		Create Effect(All Players(All Teams), Ring, Color(Yellow), Global.PerkVectors[10], 2, Visible To);
		Create In-World Text(All Players(All Teams), Custom String("Stamina-Up (2000 Points)"), Global.PerkVectors[10], 1,
			Clip Against Surfaces, Visible To, Color(Yellow), Visible Always);
		"ECherry [12]"
		Create Effect(All Players(Team 1), Ring, Color(Gray), Global.PerkVectors[12], 2, Visible To);
		Create In-World Text(All Players(Team 1), Custom String("Electric Cherry (1500 Points)"), Global.PerkVectors[12], 1,
			Clip Against Surfaces, Visible To, Color(Gray), Visible Always);
		"Speed Cola [14]"
		Create Effect(All Players(Team 1), Ring, Color(Lime Green), Global.PerkVectors[14], 2, Visible To);
		Create In-World Text(All Players(All Teams), Custom String("Speed Cola (3000 Points)"), Global.PerkVectors[14], 1,
			Clip Against Surfaces, Visible To, Color(Lime Green), Visible Always);
		"Quick Revive [16]"
		Create Effect(All Players(All Teams), Ring, Color(Blue), Global.PerkVectors[16], 2, Visible To);
		Create In-World Text(All Players(All Teams), Custom String("Quick Revive (1500 Points)"), Global.PerkVectors[16], 1,
			Clip Against Surfaces, Visible To, Color(Blue), Visible Always);
		"PHD [18]"
		Create Effect(All Players(All Teams), Ring, Color(Violet), Global.PerkVectors[18], 2, Visible To);
		Create In-World Text(All Players(All Teams), Custom String("PHD Flopper (1500 Points)"), Global.PerkVectors[18], 1,
			Clip Against Surfaces, Visible To, Color(Violet), Visible Always);
		"Ghostly [20]"
		Create Effect(All Players(All Teams), Ring, Color(Sky Blue), Global.PerkVectors[20], 2, Visible To);
		Create In-World Text(All Players(All Teams), Custom String("Ghostly Gin (3000 Points)"), Global.PerkVectors[20], 1,
			Clip Against Surfaces, Visible To, Color(Sky Blue), Visible Always);
		"Mule Kick [22]"
		Create Effect(All Players(All Teams), Ring, Color(Green), Global.PerkVectors[22], 2, Visible To);
		Create In-World Text(All Players(All Teams), Custom String("Mule Kick (4000 Points)"), Global.PerkVectors[22], 1,
			Clip Against Surfaces, Visible To, Color(Green), Visible Always);
		"Tombstone [24]"
		Create Effect(All Players(All Teams), Ring, Color(Black), Global.PerkVectors[24], 2, Visible To);
		Create In-World Text(All Players(All Teams), Custom String("Tombstone (2000 Points)"), Global.PerkVectors[24], 1,
			Clip Against Surfaces, Visible To, Color(Black), Visible Always);
		"Scotch [26]"
		Create Effect(All Players(All Teams), Ring, Color(Aqua), Global.PerkVectors[26], 2, Visible To);
		Create In-World Text(All Players(All Teams), Custom String("Scavengers Scotch (3000 Points)"), Global.PerkVectors[26], 1,
			Clip Against Surfaces, Visible To, Color(Aqua), Visible Always);
		"Vampiric [28]"
		Create Effect(All Players(All Teams), Ring, Color(Turquoise), Global.PerkVectors[28], 2, Visible To);
		Create In-World Text(All Players(All Teams), Custom String("Vampiric Voss (4000 Points)"), Global.PerkVectors[28], 1,
			Clip Against Surfaces, Visible To, Color(Turquoise), Visible Always);
		Global.EasterEggEffects = Empty Array;
		"Tablet Quest"
		Create In-World Text(All Players(Team 1), Custom String("Stone Tablets"), Global.PerkVectors[23], 1, Clip Against Surfaces,
			Visible To, Color(Gray), Default Visibility);
		Create Effect(All Players(Team 1), Sphere, Color(Gray), Global.PerkVectors[23], 2, Visible To);
		Create Effect(All Players(Team 1), Sparkles, Color(Green), Global.PerkVectors[23], 8, Visible To);
		Create Effect(All Players(Team 1), Ring, Color(Green), Global.PerkVectors[23], 8, Visible To);
		"Holy Water"
		Create Effect(All Players(Team 1), Light Shaft, Color(Green), Global.PerkVectors[25], 2, Visible To);
		Create Effect(All Players(Team 1), Cloud, Color(Green), Global.PerkVectors[25], 2, Visible To);
		Create Effect(All Players(Team 1), Ring, Color(Green), Global.PerkVectors[25], 2, Visible To);
		Create Effect(All Players(All Teams), Ring, Color(Green), Global.PerkVectors[1], 2, Visible To);
		Create In-World Text(All Players(All Teams), Custom String("Reward Alter ({0} Souls Left) ", 120 - Global.ShadowVectors[13]),
			Global.PerkVectors[1], 1, Clip Against Surfaces, Visible To and String, Color(Green), Visible Always);
		"Soul Box 1 [0-3]"
		Create Effect(All Players(All Teams), Ashe Dynamite Burning Particle Effect, Color(Team 2), Global.PerkVectors[3], 1, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(All Teams), Sombra Hacked Looping Effect, Color(Team 2), Global.PerkVectors[3], 1, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(All Teams), Orb, Color(Green), Global.PerkVectors[3], 1, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(All Teams), Cloud, Color(Green), Global.PerkVectors[3], 2, Visible To and Color);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Soul Box 2 [4-7]"
		Create Effect(All Players(All Teams), Ashe Dynamite Burning Particle Effect, Color(Team 2), Global.PerkVectors[5], 1, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(All Teams), Sombra Hacked Looping Effect, Color(Team 2), Global.PerkVectors[5], 1, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(All Teams), Orb, Color(Green), Global.PerkVectors[5], 1, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(All Teams), Cloud, Color(Green), Global.PerkVectors[5], 2, Visible To and Color);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Soul Box 3 [8-11]"
		Create Effect(All Players(All Teams), Ashe Dynamite Burning Particle Effect, Color(Team 2), Global.PerkVectors[7], 1, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(All Teams), Sombra Hacked Looping Effect, Color(Team 2), Global.PerkVectors[7], 1, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(All Teams), Orb, Color(Green), Global.PerkVectors[7], 1, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(All Teams), Cloud, Color(Green), Global.PerkVectors[7], 2, Visible To and Color);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		"Soul Box 4 [12-15]"
		Create Effect(All Players(All Teams), Ashe Dynamite Burning Particle Effect, Color(Team 2), Global.PerkVectors[9], 1, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(All Teams), Sombra Hacked Looping Effect, Color(Team 2), Global.PerkVectors[9], 1, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(All Teams), Orb, Color(Green), Global.PerkVectors[9], 1, Visible To);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
		Create Effect(All Players(All Teams), Cloud, Color(Green), Global.PerkVectors[9], 2, Visible To and Color);
		Modify Global Variable(EasterEggEffects, Append To Array, Last Created Entity);
	}
}

disabled rule("Weapon and Magic Effects")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		"Box [1]"
		Create Effect(All Players(All Teams), Ring, Color(Blue), Global.MagicVectors[1], 2, Visible To Position and Radius);
		Create In-World Text(All Players(All Teams), Global.BoxOn == False ? Custom String("Mystery Box (950 Points)") : Hero Icon String(
			Closest Player To(Global.MagicVectors[1], Team 1).Weapons[0]), Global.MagicVectors[1], 2, Clip Against Surfaces,
			Visible To Position and String, Color(Sky Blue), Visible Always);
		Create Effect(All Players(Team 1), Light Shaft, Global.BoxOn == False ? Color(Blue) : Color(Orange), Global.MagicVectors[1], 1,
			Visible To Position Radius and Color);
		"Pack [2]"
		Create Effect(All Players(All Teams), Sphere, Closest Player To(Global.MagicVectors[2], Team 1).Packing == False ? Color(Sky Blue)
			: Color(Black), Global.MagicVectors[2], 2, Visible To and Color);
		Create In-World Text(All Players(All Teams), Global.GenL + Global.GenR == 6 ? Custom String("Pack-A-Punch (5000 Points)") : String(
			"{0} {1}", 6 - (Global.GenL + Global.GenR), Custom String("Purge(s) left!")), Global.MagicVectors[2], 1, Clip Against Surfaces,
			Visible To and String, Color(Orange), Visible Always);
		Create Effect(All Players(All Teams), Orb, Closest Player To(Global.MagicVectors[2], Team 1).Packing == False ? Color(Yellow)
			: Color(Purple), Global.MagicVectors[2], 2, Visible To and Color);
		"Perk Slots [4]"
		Create Effect(All Players(All Teams), Ring, Color(Turquoise), Global.MagicVectors[4], 2, Visible To);
		Create Effect(All Players(All Teams), Sparkles, Color(Turquoise), Global.MagicVectors[4], 2, Visible To);
		Create In-World Text(All Players(All Teams), Custom String("Purchase Perk Slot (11500 Points)"), Global.MagicVectors[4], 1,
			Clip Against Surfaces, Visible To, Color(Turquoise), Visible Always);
		"Map Effects Wall Weapons"
		Create Effect(All Players(All Teams), Ring, Color(Purple), Global.WeaponVectors[0], 2, Visible To);
		Create In-World Text(All Players(All Teams), Custom String("M14 (500 Points) [250 Ammo/4500 PaP Ammo]"), Global.WeaponVectors[0],
			1, Clip Against Surfaces, Visible To, Color(Purple), Visible Always);
		Create Effect(All Players(All Teams), Ring, Color(Purple), Global.WeaponVectors[1], 2, Visible To);
		Create In-World Text(All Players(All Teams), Custom String("Olympia (500 Points) [250 Ammo/4500 PaP Ammo]"),
			Global.WeaponVectors[1], 1, Clip Against Surfaces, Visible To, Color(Purple), Visible Always);
		Create Effect(All Players(All Teams), Ring, Color(Purple), Global.WeaponVectors[2], 2, Visible To);
		Create In-World Text(All Players(All Teams), Custom String("LSAT (2000 Points) [1000 Ammo/4500 PaP Ammo]"),
			Global.WeaponVectors[2], 1, Clip Against Surfaces, Visible To, Color(Purple), Visible Always);
		Create Effect(All Players(All Teams), Ring, Color(Purple), Global.WeaponVectors[3], 2, Visible To);
		Create In-World Text(All Players(All Teams), Custom String("MP5 (1250 Points) [625 Ammo/4500 PaP Ammo]"), Global.WeaponVectors[3],
			1, Clip Against Surfaces, Visible To, Color(Purple), Visible Always);
		Create Effect(All Players(All Teams), Ring, Color(Purple), Global.WeaponVectors[4], 2, Visible To);
		Create In-World Text(All Players(All Teams), Custom String("Colt M16 (3000 Points) [1500 Ammo/4500 PaP Ammo]"),
			Global.WeaponVectors[4], 1, Clip Against Surfaces, Visible To, Color(Purple), Visible Always);
		Create Effect(All Players(All Teams), Ring, Color(Purple), Global.WeaponVectors[5], 2, Visible To);
		Create In-World Text(All Players(All Teams), Custom String("Remington 870 MCS (1500 Points) [750 Ammo/4500 PaP Ammo]"),
			Global.WeaponVectors[5], 1, Clip Against Surfaces, Visible To, Color(Purple), Visible Always);
		Create Effect(All Players(All Teams), Ring, Color(Purple), Global.WeaponVectors[6], 2, Visible To);
		Create In-World Text(All Players(All Teams), Custom String("PDW-57 (1000 Points) [500 Ammo/4500 PaP Ammo]"),
			Global.WeaponVectors[6], 1, Clip Against Surfaces, Visible To, Color(Purple), Visible Always);
		Create Effect(All Players(All Teams), Ring, Color(Purple), Global.WeaponVectors[7], 2, Visible To);
		Create In-World Text(All Players(All Teams), Custom String("AN-94 (1750 Points) [875 Ammo/4500 PaP Ammo]"),
			Global.WeaponVectors[7], 1, Clip Against Surfaces, Visible To, Color(Purple), Visible Always);
		Create Effect(All Players(All Teams), Ring, Color(Purple), Global.WeaponVectors[8], 2, Visible To);
		Create In-World Text(All Players(All Teams), Custom String("SVU-AS (4000 Points) [2000 Ammo/4500 PaP Ammo]"),
			Global.WeaponVectors[8], 1, Clip Against Surfaces, Visible To, Color(Purple), Visible Always);
		Create Effect(All Players(All Teams), Ring, Color(Purple), Global.WeaponVectors[9], 2, Visible To);
		Create In-World Text(All Players(All Teams), Custom String("Five-Seven (1400 Points) [700 Ammo/4500 PaP Ammo]"),
			Global.WeaponVectors[9], 1, Clip Against Surfaces, Visible To, Color(Purple), Visible Always);
		Create Effect(All Players(All Teams), Ring, Color(Purple), Global.WeaponVectors[11], 2, Visible To);
		Create In-World Text(All Players(All Teams), Custom String("Katana (5000 Points)"), Global.WeaponVectors[11], 1,
			Clip Against Surfaces, Visible To, Color(Purple), Visible Always);
		Create Effect(All Players(All Teams), Ring, Color(Purple), Global.WeaponVectors[12], 2, Visible To);
		Create In-World Text(All Players(All Teams), Custom String("M1927 (1750 Points)"), Global.WeaponVectors[12], 1,
			Clip Against Surfaces, Visible To, Color(Purple), Visible Always);
	}
}

disabled rule("Door, Blocked Area, Tele, and Power Effects")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		"Blocked Zone Effects"
		Global.BlockedEffects = Empty Array;
		"? [0, 1]"
		Create Effect(All Players(All Teams), Light Shaft, Color(Team 2), Global.BlockedVectors[0], Global.BlockedVectors[1], Visible To);
		Modify Global Variable(BlockedEffects, Append To Array, Last Created Entity);
		"? [2, 3]"
		Create Effect(All Players(All Teams), Light Shaft, Color(Team 2), Global.BlockedVectors[2], Global.BlockedVectors[3], Visible To);
		Modify Global Variable(BlockedEffects, Append To Array, Last Created Entity);
		"? [4, 5]"
		Create Effect(All Players(All Teams), Light Shaft, Color(Team 2), Global.BlockedVectors[4], Global.BlockedVectors[5], Visible To);
		Modify Global Variable(BlockedEffects, Append To Array, Last Created Entity);
		"? [6, 7]"
		Create Effect(All Players(All Teams), Light Shaft, Color(Team 2), Global.BlockedVectors[6], Global.BlockedVectors[7], Visible To);
		Modify Global Variable(BlockedEffects, Append To Array, Last Created Entity);
		"? [8, 9]"
		Create Effect(All Players(All Teams), Light Shaft, Color(Team 2), Global.BlockedVectors[8], Global.BlockedVectors[9], Visible To);
		Modify Global Variable(BlockedEffects, Append To Array, Last Created Entity);
		"? [10, 11]"
		Create Effect(All Players(All Teams), Light Shaft, Color(Team 2), Global.BlockedVectors[10], Global.BlockedVectors[11],
			Visible To);
		Modify Global Variable(BlockedEffects, Append To Array, Last Created Entity);
		"Blocked Doors Effects"
		Global.BlockedDoors = Empty Array;
		"? [0]"
		Create Effect(All Players(All Teams), Ring, Color(Green), Global.DoorVectors[0], 2, Visible To);
		Modify Global Variable(BlockedDoors, Append To Array, Last Created Entity);
		Create In-World Text(All Players(All Teams), Custom String("Castle Foyer (1250 Points)"), Global.DoorVectors[0], 1,
			Clip Against Surfaces, Visible To, Color(Green), Visible Always);
		Modify Global Variable(BlockedDoors, Append To Array, Last Text ID);
		"? [1]"
		Create Effect(All Players(All Teams), Ring, Color(Green), Global.DoorVectors[1], 2, Visible To);
		Modify Global Variable(BlockedDoors, Append To Array, Last Created Entity);
		Create In-World Text(All Players(All Teams), Custom String("Loading Zone (2500 Points)"), Global.DoorVectors[1], 1,
			Clip Against Surfaces, Visible To, Color(Green), Visible Always);
		Modify Global Variable(BlockedDoors, Append To Array, Last Text ID);
		"? [2]"
		Create Effect(All Players(All Teams), Ring, Color(Green), Global.DoorVectors[2], 2, Visible To);
		Modify Global Variable(BlockedDoors, Append To Array, Last Created Entity);
		Create In-World Text(All Players(All Teams), Custom String("Distillery (1250 Points)"), Global.DoorVectors[2], 1,
			Clip Against Surfaces, Visible To, Color(Green), Visible Always);
		Modify Global Variable(BlockedDoors, Append To Array, Last Text ID);
		"? [3]"
		Create Effect(All Players(All Teams), Ring, Color(Green), Global.DoorVectors[3], 2, Visible To);
		Modify Global Variable(BlockedDoors, Append To Array, Last Created Entity);
		Create In-World Text(All Players(All Teams), Custom String("Rum Factory (1500 Points)"), Global.DoorVectors[3], 1,
			Clip Against Surfaces, Visible To, Color(Green), Visible Always);
		Modify Global Variable(BlockedDoors, Append To Array, Last Text ID);
		"? [4]"
		Create Effect(All Players(All Teams), Ring, Color(Green), Global.DoorVectors[4], 2, Visible To);
		Modify Global Variable(BlockedDoors, Append To Array, Last Created Entity);
		Create In-World Text(All Players(All Teams), Custom String("Capitol Drive (750 Points)"), Global.DoorVectors[4], 1,
			Clip Against Surfaces, Visible To, Color(Green), Visible Always);
		Modify Global Variable(BlockedDoors, Append To Array, Last Text ID);
		"? [5]"
		Create Effect(All Players(All Teams), Ring, Color(Green), Global.DoorVectors[5], 2, Visible To);
		Modify Global Variable(BlockedDoors, Append To Array, Last Created Entity);
		Create In-World Text(All Players(All Teams), Custom String("Battlements (1500 Points)"), Global.DoorVectors[5], 1,
			Clip Against Surfaces, Visible To, Color(Green), Visible Always);
		Modify Global Variable(BlockedDoors, Append To Array, Last Text ID);
		"? [6]"
		Create Effect(All Players(All Teams), Ring, Color(Green), Global.DoorVectors[6], 2, Visible To);
		Modify Global Variable(BlockedDoors, Append To Array, Last Created Entity);
		Create In-World Text(All Players(All Teams), Custom String("Sea Wall (2000 Points)"), Global.DoorVectors[6], 1,
			Clip Against Surfaces, Visible To, Color(Green), Visible Always);
		Modify Global Variable(BlockedDoors, Append To Array, Last Text ID);
		"? [7]"
		Create Effect(All Players(All Teams), Ring, Color(Green), Global.DoorVectors[7], 2, Visible To);
		Modify Global Variable(BlockedDoors, Append To Array, Last Created Entity);
		Create In-World Text(All Players(All Teams), Custom String("Suburbs (1250 Points)"), Global.DoorVectors[7], 1,
			Clip Against Surfaces, Visible To, Color(Green), Visible Always);
		Modify Global Variable(BlockedDoors, Append To Array, Last Text ID);
		"? [8]"
		Create Effect(All Players(All Teams), Ring, Color(Green), Global.DoorVectors[8], 2, Visible To);
		Modify Global Variable(BlockedDoors, Append To Array, Last Created Entity);
		Create In-World Text(All Players(All Teams), Custom String("Sebastian's Garage (1500 Points)"), Global.DoorVectors[8], 1,
			Clip Against Surfaces, Visible To, Color(Green), Visible Always);
		Modify Global Variable(BlockedDoors, Append To Array, Last Text ID);
		"? [9]"
		Create Effect(All Players(All Teams), Ring, Color(Green), Global.DoorVectors[9], 2, Visible To);
		Modify Global Variable(BlockedDoors, Append To Array, Last Created Entity);
		Create In-World Text(All Players(All Teams), Custom String("The Capitol (2500 Points)"), Global.DoorVectors[9], 1,
			Clip Against Surfaces, Visible To, Color(Green), Visible Always);
		Modify Global Variable(BlockedDoors, Append To Array, Last Text ID);
		"? [10]"
		Create Effect(All Players(All Teams), Ring, Color(Green), Global.DoorVectors[10], 2, Visible To);
		Modify Global Variable(BlockedDoors, Append To Array, Last Created Entity);
		Create In-World Text(All Players(All Teams), Custom String("Atrium (1250 Points)"), Global.DoorVectors[10], 1,
			Clip Against Surfaces, Visible To, Color(Green), Visible Always);
		Modify Global Variable(BlockedDoors, Append To Array, Last Text ID);
		"? [11]"
		Create Effect(All Players(All Teams), Ring, Color(Green), Global.DoorVectors[11], 2, Visible To);
		Modify Global Variable(BlockedDoors, Append To Array, Last Created Entity);
		Create In-World Text(All Players(All Teams), Custom String("La Cocina (1000 Points)"), Global.DoorVectors[11], 1,
			Clip Against Surfaces, Visible To, Color(Green), Visible Always);
		Modify Global Variable(BlockedDoors, Append To Array, Last Text ID);
		"Purge Effects"
		Global.PurgeEffects = Empty Array;
		"Helipad [0]"
		Create Effect(All Players(All Teams), Bad Aura, Color(Red), Global.PurgeVectors[0], 2, Visible To);
		Modify Global Variable(PurgeEffects, Append To Array, Last Created Entity);
		Create In-World Text(All Players(All Teams), Custom String("Purge Atrium (800 Points)"), Global.PurgeVectors[0], 1,
			Clip Against Surfaces, Visible To, Color(Green), Visible Always);
		Modify Global Variable(PurgeEffects, Append To Array, Last Text ID);
		"Loading Zone [1]"
		Create Effect(All Players(All Teams), Bad Aura, Color(Red), Global.PurgeVectors[1], 2, Visible To);
		Modify Global Variable(PurgeEffects, Append To Array, Last Created Entity);
		Create In-World Text(All Players(All Teams), Custom String("Purge Capitol (800 Points) [Need Atrium Purged]"),
			Global.PurgeVectors[1], 1, Clip Against Surfaces, Visible To, Color(Green), Visible Always);
		Modify Global Variable(PurgeEffects, Append To Array, Last Text ID);
		"Rum Factory [2]"
		Create Effect(All Players(All Teams), Bad Aura, Color(Red), Global.PurgeVectors[2], 2, Visible To);
		Modify Global Variable(PurgeEffects, Append To Array, Last Created Entity);
		Create In-World Text(All Players(All Teams), Custom String("Purge Rum Factory (800 Points) [Need Capitol Purged]"),
			Global.PurgeVectors[2], 1, Clip Against Surfaces, Visible To, Color(Green), Visible Always);
		Modify Global Variable(PurgeEffects, Append To Array, Last Text ID);
		"Sea Wall [3]"
		Create Effect(All Players(All Teams), Bad Aura, Color(Red), Global.PurgeVectors[3], 2, Visible To);
		Modify Global Variable(PurgeEffects, Append To Array, Last Created Entity);
		Create In-World Text(All Players(All Teams), Custom String("Purge Sea Wall (800 Points)"), Global.PurgeVectors[3], 1,
			Clip Against Surfaces, Visible To, Color(Green), Visible Always);
		Modify Global Variable(PurgeEffects, Append To Array, Last Text ID);
		"Suburbs [4]"
		Create Effect(All Players(All Teams), Bad Aura, Color(Red), Global.PurgeVectors[4], 2, Visible To);
		Modify Global Variable(PurgeEffects, Append To Array, Last Created Entity);
		Create In-World Text(All Players(All Teams), Custom String("Purge Suburbs (800 Points) [Need Sea Wall Purged]"),
			Global.PurgeVectors[4], 1, Clip Against Surfaces, Visible To, Color(Green), Visible Always);
		Modify Global Variable(PurgeEffects, Append To Array, Last Text ID);
		"Capitol Drive [5]"
		Create Effect(All Players(All Teams), Bad Aura, Color(Red), Global.PurgeVectors[5], 2, Visible To);
		Modify Global Variable(PurgeEffects, Append To Array, Last Created Entity);
		Create In-World Text(All Players(All Teams), Custom String("Purge Downtown (800 Points) [Need Suburbs Purged]"),
			Global.PurgeVectors[5], 1, Clip Against Surfaces, Visible To, Color(Green), Visible Always);
		Modify Global Variable(PurgeEffects, Append To Array, Last Text ID);
		"Helipad [0]"
		Create Effect(All Players(Team 1), Good Aura, Color(Green), Global.TeleArray[0], 1, Visible To Position and Radius);
		"Colosseum [1]"
		Create Effect(All Players(Team 1), Good Aura, Color(Green), Global.TeleArray[1], 1, Visible To);
		"Town Square [2, 3]"
		Create Effect(All Players(Team 1), Good Aura, Color(Green), Global.TeleArray[2], 1, Visible To Position and Radius);
		Create Effect(All Players(Team 1), Good Aura, Color(Green), Global.TeleArray[3], 1, Visible To);
		"Distellery [4, 5]"
		Create Effect(All Players(Team 1), Good Aura, Color(Green), Global.TeleArray[4], 1, Visible To Position and Radius);
		Create Effect(All Players(Team 1), Good Aura, Color(Green), Global.TeleArray[5], 1, Visible To);
		"Capitol Drive [6, 7]"
		Create Effect(All Players(Team 1), Good Aura, Color(Green), Global.TeleArray[6], 1, Visible To Position and Radius);
		Create Effect(All Players(Team 1), Good Aura, Color(Green), Global.TeleArray[7], 1, Visible To);
		"Battlements [8, 9]"
		Create Effect(All Players(Team 1), Good Aura, Color(Green), Global.TeleArray[8], 1, Visible To Position and Radius);
		Create Effect(All Players(Team 1), Good Aura, Color(Green), Global.TeleArray[9], 1, Visible To);
		"Suburbs [10, 11]"
		Create Effect(All Players(Team 1), Good Aura, Color(Green), Global.TeleArray[10], 1, Visible To Position and Radius);
		Create Effect(All Players(Team 1), Good Aura, Color(Green), Global.TeleArray[11], 1, Visible To);
		"Garage [12, 13]"
		Create Effect(All Players(Team 1), Good Aura, Color(Green), Global.TeleArray[12], 1, Visible To Position and Radius);
		Create Effect(All Players(Team 1), Good Aura, Color(Green), Global.TeleArray[13], 1, Visible To);
		"Capitol [14, 15]"
		Create Effect(All Players(Team 1), Good Aura, Color(Green), Global.TeleArray[14], 1, Visible To Position and Radius);
		Create Effect(All Players(Team 1), Good Aura, Color(Green), Global.TeleArray[15], 1, Visible To);
	}
}